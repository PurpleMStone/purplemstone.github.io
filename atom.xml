<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stone&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-05-12T11:23:22.669Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Purple M. Stone</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mosh的Python课程笔记(9)--Python Standard Library</title>
    <link href="http://yoursite.com/2021/05/12/20210512_Python009/"/>
    <id>http://yoursite.com/2021/05/12/20210512_Python009/</id>
    <published>2021-05-12T15:50:09.000Z</published>
    <updated>2021-05-12T11:23:22.669Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Paths"><a href="#Paths" class="headerlink" title="Paths"></a>Paths</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Paths&quot;&gt;&lt;a href=&quot;#Paths&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(8)--Modules</title>
    <link href="http://yoursite.com/2021/05/12/20210512_Python008/"/>
    <id>http://yoursite.com/2021/05/12/20210512_Python008/</id>
    <published>2021-05-12T09:50:09.000Z</published>
    <updated>2021-05-12T11:30:56.256Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sales.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_tax</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_shipping</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> sales <span class="keyword">import</span> calc_shipping, calc_tax</span><br><span class="line"></span><br><span class="line">calc_shipping()</span><br><span class="line">calc_tax()</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sales</span><br><span class="line"></span><br><span class="line">sales.calc_shipping()</span><br><span class="line">sales.calc_tax()</span><br></pre></td></tr></table></figure><h1 id="Compiled-Python-Files"><a href="#Compiled-Python-Files" class="headerlink" title="Compiled Python Files"></a>Compiled Python Files</h1><p>编译后在__pycache__生成 sales.cpython-39.pyc 文件，如果sales.py未作更改，则此文件直接用（相当于缓存），可以加快程序执行。如果sales.py改了，则要重新生成此文件。</p><h1 id="Module-Search-Path"><a href="#Module-Search-Path" class="headerlink" title="Module Search Path"></a>Module Search Path</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(sys.path)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'e:\\Stone\\Python\\HelloWorld'</span>, <span class="string">'D:\\Python39\\python39.zip'</span>, <span class="string">'D:\\Python39\\DLLs'</span>, <span class="string">'D:\\Python39\\lib'</span>, <span class="string">'D:\\Python39'</span>, <span class="string">'C:\\Users\\11405\\AppData\\Roaming\\Python\\Python39\\site-packages'</span>, <span class="string">'D:\\Python39\\lib\\site-packages'</span>]</span><br></pre></td></tr></table></figure><h1 id="Packages"><a href="#Packages" class="headerlink" title="Packages"></a>Packages</h1><p>package 对应于文件夹；module 对应于文件</p><p>比如在 app.py 所在目录下有个 ecommerce 文件夹，ecommerce 文件夹内有多个文件，包括 sales.py，假如改文件夹内有文件__init__.py，则 python 会将此文件夹视为 package.</p><p>那么可以这样用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> ecommerce <span class="keyword">import</span> sales</span><br><span class="line"></span><br><span class="line">sales.calc_tax()</span><br><span class="line">sales.calc_shipping()</span><br></pre></td></tr></table></figure><h2 id="Sub-packages"><a href="#Sub-packages" class="headerlink" title="Sub-packages"></a>Sub-packages</h2><p>ecommerce 文件夹内有 shopping 文件夹,  shopping 文件夹内有文件__init__.py 和 sales.py，则：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> ecommerce.shopping <span class="keyword">import</span> sales</span><br></pre></td></tr></table></figure><h2 id="Intra-package-References"><a href="#Intra-package-References" class="headerlink" title="Intra-package References"></a>Intra-package References</h2><p><img src="/images/Python/002.png" alt="002"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sales.py</span></span><br><span class="line"><span class="keyword">from</span> ecommerce.customer <span class="keyword">import</span> contact</span><br><span class="line"><span class="keyword">from</span> ..customer <span class="keyword">import</span> contact<span class="comment"># ..表示父目录</span></span><br><span class="line"></span><br><span class="line">contact.contact_customer()</span><br></pre></td></tr></table></figure><h2 id="The-dir-Function"><a href="#The-dir-Function" class="headerlink" title="The dir() Function"></a>The dir() Function</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> ecommerce.shopping <span class="keyword">import</span> sales</span><br><span class="line"></span><br><span class="line">print(dir(sales))</span><br></pre></td></tr></table></figure><p>输出sales的各种方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'__builtins__'</span>, <span class="string">'__cached__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__file__'</span>, <span class="string">'__loader__'</span>, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'calc_shipping'</span>, <span class="string">'calc_tax'</span>, <span class="string">'contact'</span>]</span><br></pre></td></tr></table></figure><p>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> ecommerce.shopping <span class="keyword">import</span> sales</span><br><span class="line"></span><br><span class="line">print(sales.__name__)</span><br><span class="line">print(sales.__package__)</span><br><span class="line">print(sales.__file__)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ecommerce.shopping.sales</span><br><span class="line">ecommerce.shopping</span><br><span class="line">e:\Stone\Python\HelloWorld\ecommerce\shopping\sales.py</span><br></pre></td></tr></table></figure><h1 id="Executing-Modules-as-Scripts"><a href="#Executing-Modules-as-Scripts" class="headerlink" title="Executing Modules as Scripts"></a>Executing Modules as Scripts</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ecommerce/shopping/sales.py</span></span><br><span class="line">print(<span class="string">"Sales initialized"</span>, __name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_tax</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_shipping</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ecommerce/__init__.py</span></span><br><span class="line">print(<span class="string">"Ecommerce initialized"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app.py</span></span><br><span class="line"><span class="keyword">from</span> ecommerce.shopping <span class="keyword">import</span> sales</span><br></pre></td></tr></table></figure><p>执行 app.py，输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ecommerce initialized</span><br><span class="line">Sales initialized ecommerce.shopping.sales</span><br></pre></td></tr></table></figure><p>如果执行sales.py, 输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sales initialized __main__</span><br></pre></td></tr></table></figure><p>可见__name__对于不同py文件是不同的。</p><p>如果加上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># bla bla bla</span></span><br></pre></td></tr></table></figure><p>则只在当前py文件运行时执行这些 # blablabla 的code。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(7)--Classes</title>
    <link href="http://yoursite.com/2021/05/11/20210511_Python007/"/>
    <id>http://yoursite.com/2021/05/11/20210511_Python007/</id>
    <published>2021-05-11T15:50:09.000Z</published>
    <updated>2021-05-12T07:53:07.322Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><p>👉 Class: blueprint for creating new objects — Human</p><p>👉 Object: instance of a class — John, Mary, Jack</p><h1 id="Creating-Classes"><a href="#Creating-Classes" class="headerlink" title="Creating Classes"></a>Creating Classes</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"draw"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point()</span><br><span class="line">print(type(point))</span><br><span class="line"></span><br><span class="line">print(isinstance(point, Point)) <span class="comment"># 判断point是不是Point的实例</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">__main__</span>.<span class="title">Point</span>'&gt;</span></span><br><span class="line"><span class="class"><span class="title">True</span></span></span><br></pre></td></tr></table></figure><h2 id="Constructors"><a href="#Constructors" class="headerlink" title="Constructors"></a>Constructors</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span><span class="comment"># Constructor</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"Point (<span class="subst">&#123;self.x&#125;</span>, <span class="subst">&#123;self.y&#125;</span>)"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(point.x)</span><br><span class="line">point.draw()</span><br></pre></td></tr></table></figure><p>self 指向当前 working 的 object, 比如 draw 不需要显式写 point.draw(point), 编译器会自动将当前的 object point 作为 draw() 的参数。</p><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">Point (<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h1 id="Class-vs-Instance-Attributes"><a href="#Class-vs-Instance-Attributes" class="headerlink" title="Class vs Instance Attributes"></a>Class vs Instance Attributes</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    default_color = <span class="string">"red"</span><span class="comment"># class attribute</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x<span class="comment"># object/instance attribute</span></span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"Point (<span class="subst">&#123;self.x&#125;</span>, <span class="subst">&#123;self.y&#125;</span>)"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">point.draw()<span class="comment"># x和y是object attribute，每个object不同</span></span><br><span class="line"></span><br><span class="line">another = Point(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">another.draw()</span><br><span class="line"></span><br><span class="line">Point.default_color = <span class="string">"yellow"</span><span class="comment"># 直接用类调用更改。类中所有实例共享</span></span><br><span class="line">print(point.default_color)</span><br><span class="line">print(Point.default_color)</span><br><span class="line">print(another.default_color)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Point (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">Point (<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">yellow</span><br><span class="line">yellow</span><br><span class="line">yellow</span><br></pre></td></tr></table></figure><h1 id="Class-vs-Instance-Methods"><a href="#Class-vs-Instance-Methods" class="headerlink" title="Class vs Instance Methods"></a>Class vs Instance Methods</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">zero</span><span class="params">(cls)</span>:</span>      <span class="comment"># cls指向这个class本身</span></span><br><span class="line">        <span class="keyword">return</span> cls(<span class="number">0</span>, <span class="number">0</span>)   <span class="comment"># Point(0, 0)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"Point (<span class="subst">&#123;self.x&#125;</span>, <span class="subst">&#123;self.y&#125;</span>)"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point.zero()<span class="comment"># 工厂方法:将复杂的对象构造(比如多种初始值)交给类方法去完成</span></span><br><span class="line">point.draw()<span class="comment"># 输出 Point (0, 0)</span></span><br></pre></td></tr></table></figure><h1 id="Magic-Methods"><a href="#Magic-Methods" class="headerlink" title="Magic Methods"></a>Magic Methods</h1><p>编译器会自动调用Magic Methods。</p><p><a href="https://rszalski.github.io/magicmethods/" target="_blank" rel="noopener">guide book</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"Point (<span class="subst">&#123;self.x&#125;</span>, <span class="subst">&#123;self.y&#125;</span>)"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(point)</span><br><span class="line">print(str(point))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;__main__.Point object at 0x0000020E4C1A6FD0&gt;</span><br><span class="line">&lt;__main__.Point object at 0x0000020E4C1A6FD0&gt;</span><br></pre></td></tr></table></figure><p>自定义magic function __str__：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"(<span class="subst">&#123;self.x&#125;</span>, <span class="subst">&#123;self.y&#125;</span>)"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f"Point (<span class="subst">&#123;self.x&#125;</span>, <span class="subst">&#123;self.y&#125;</span>)"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(point)</span><br><span class="line">print(str(point))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="Comparing-Objects"><a href="#Comparing-Objects" class="headerlink" title="Comparing Objects"></a>Comparing Objects</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">other = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(point == other)</span><br></pre></td></tr></table></figure><p>输出：False。因为这样比较的是两个reference，是不同的。</p><p>方法：重定义magic functions</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.x == other.x <span class="keyword">and</span> self.y == other.y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__gt__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.x &gt; other.x <span class="keyword">and</span> self.y &gt; other.y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">other = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(point == other)</span><br><span class="line">print(point &gt; other)</span><br></pre></td></tr></table></figure><p>这时就是比较两个 object 的 x 和 y 的值了</p><h2 id="Supporting-Arithmetic-Operations"><a href="#Supporting-Arithmetic-Operations" class="headerlink" title="Supporting Arithmetic Operations"></a>Supporting Arithmetic Operations</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span><span class="params">(self, other)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Point(self.x + other.x, self.y + other.y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = Point(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">other = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">combined = point + other</span><br><span class="line">print(<span class="string">f"Point (<span class="subst">&#123;combined.x&#125;</span>, <span class="subst">&#123;combined.y&#125;</span>)"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Point (<span class="number">11</span>, <span class="number">22</span>)</span><br></pre></td></tr></table></figure><h1 id="Creating-Custom-Containers"><a href="#Creating-Custom-Containers" class="headerlink" title="Creating Custom Containers"></a>Creating Custom Containers</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagCloud</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.tags = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, tag)</span>:</span></span><br><span class="line">        self.tags[tag.lower()] = self.tags.get(tag.lower(), <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self, tag)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.tags.get(tag.lower(), <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span><span class="params">(self, tag, count)</span>:</span></span><br><span class="line">        self.tags[tag.lower()] = count</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.tags)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span>     <span class="comment"># make it iterable</span></span><br><span class="line">        <span class="keyword">return</span> iter(self.tags)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cloud = TagCloud()</span><br><span class="line">cloud.add(<span class="string">"Python"</span>)</span><br><span class="line">cloud.add(<span class="string">"python"</span>)</span><br><span class="line">cloud.add(<span class="string">"python"</span>)</span><br><span class="line">print(cloud.tags)</span><br><span class="line"></span><br><span class="line">print(cloud[<span class="string">"python"</span>])  <span class="comment"># __getitem__实现</span></span><br><span class="line">cloud[<span class="string">"java"</span>] = <span class="number">10</span>      <span class="comment"># __setitem__实现</span></span><br><span class="line">print(cloud.tags)</span><br><span class="line"></span><br><span class="line">print(len(cloud))       <span class="comment"># __len__实现</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'python'</span>: <span class="number">3</span>&#125;</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&#123;<span class="string">'python'</span>: <span class="number">3</span>, <span class="string">'java'</span>: <span class="number">10</span>&#125;</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="Private-Members"><a href="#Private-Members" class="headerlink" title="Private Members"></a>Private Members</h1><p>将光标放到 tags 那，F2，改成__tags，回车，所有地方都改成__tags了，这就是 private member</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagCloud</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__tags = &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cloud = TagCloud()</span><br><span class="line">print(cloud.__dict__)</span><br><span class="line">print(cloud._TagCloud__tags)</span><br><span class="line">print(cloud.__tags)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'_TagCloud__tags'</span>: &#123;&#125;&#125;</span><br><span class="line">&#123;&#125;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"e:\HelloWorld\app.py"</span>, line <span class="number">24</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(cloud.__tags)</span><br><span class="line">AttributeError: <span class="string">'TagCloud'</span> object has no attribute <span class="string">'__tags'</span></span><br></pre></td></tr></table></figure><p>不能直接用名字调用，但是实际上python的 private member还是外部可见的，用__dict__就能查看到，用那个名字’_TagCloud__tags’也还能访问到。</p><h1 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h1><p>Java 风格的 getter 和 setter，不 pythonic:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, price)</span>:</span></span><br><span class="line">        self.set_price(price)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_price</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__price</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_price</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">"Price cannot be negative."</span>)</span><br><span class="line">        self.__price = value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">product = Product(<span class="number">-50</span>)</span><br></pre></td></tr></table></figure><p>pythonic coding：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, price)</span>:</span></span><br><span class="line">        self.price = price</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">price</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__price</span><br><span class="line"></span><br><span class="line"><span class="meta">    @price.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">price</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">"Price cannot be negative."</span>)</span><br><span class="line">        self.__price = value</span><br><span class="line"></span><br><span class="line">    <span class="comment"># price = property(get_price, set_price)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">product = Product(<span class="number">-10</span>)</span><br><span class="line">print(product.price)</span><br></pre></td></tr></table></figure><p>如果将setter删掉，price 就是只读的。</p><h1 id="Inheritance"><a href="#Inheritance" class="headerlink" title="Inheritance"></a>Inheritance</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"eat"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Animal: Parent, Base</span></span><br><span class="line"><span class="comment"># Mammal: Child, Sub</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mammal</span><span class="params">(Animal)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">walk</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"walk"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fish</span><span class="params">(Animal)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">swim</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"swim"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = Mammal()</span><br><span class="line">m.eat()</span><br><span class="line">print(m.age)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eat</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="The-Object-Class"><a href="#The-Object-Class" class="headerlink" title="The Object Class"></a>The Object Class</h2><p>所有 class 都继承于 object 类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"eat"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Animal: Parent, Base</span></span><br><span class="line"><span class="comment"># Mammal: Child, Sub</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mammal</span><span class="params">(Animal)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">walk</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"walk"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = Mammal()</span><br><span class="line">print(isinstance(m, Animal))<span class="comment"># True</span></span><br><span class="line">print(isinstance(m, Mammal))<span class="comment"># True</span></span><br><span class="line">print(isinstance(m, object))<span class="comment"># True</span></span><br><span class="line">print(issubclass(Mammal, Animal))<span class="comment"># True</span></span><br><span class="line">print(issubclass(Mammal, object))<span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="Method-Overriding"><a href="#Method-Overriding" class="headerlink" title="Method Overriding"></a>Method Overriding</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Animal Constructor"</span>)</span><br><span class="line">        self.age = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"eat"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Animal: Parent, Base</span></span><br><span class="line"><span class="comment"># Mammal: Child, Sub</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mammal</span><span class="params">(Animal)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super().__init__() <span class="comment"># 调用父类的__init__(),否则会被子类的覆盖掉而不执行</span></span><br><span class="line">        print(<span class="string">"Mammal Constructor"</span>)</span><br><span class="line">        self.weight = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">walk</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"walk"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = Mammal()</span><br><span class="line">print(m.age)</span><br><span class="line">print(m.weight)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Animal Constructor</span><br><span class="line">Mammal Constructor</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="Multi-level-Inheritance"><a href="#Multi-level-Inheritance" class="headerlink" title="Multi-level Inheritance"></a>Multi-level Inheritance</h2><p>Abuse inheritance:</p><p>​            Employee - Person - LivingCreature - Thing</p><p>make software complex</p><h2 id="Multiple-Inheritance"><a href="#Multiple-Inheritance" class="headerlink" title="Multiple Inheritance"></a>Multiple Inheritance</h2><p>Abuse case:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Employee Greet"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Person Greet"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span><span class="params">(Employee, Person)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">manager = Manager()</span><br><span class="line">manager.greet()</span><br></pre></td></tr></table></figure><p>将 class Manager(Employee, Person) 中的父类换个顺序就有完全不同的输出：</p><p>(Employee, Person) 输出： Employee Greet</p><p>(Person, Employee) 输出： Person Greet</p><p><strong>Good Example</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flyer</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fly</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Swimmer</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">swim</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlyingFish</span><span class="params">(Flyer, Swimmer)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>子类的两个父类应该是没有什么共同点的，而子类兼具两个父类的method。</p><h2 id="A-Good-Example-of-Inheritance"><a href="#A-Good-Example-of-Inheritance" class="headerlink" title="A Good Example of Inheritance"></a>A Good Example of Inheritance</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InvalidOperationError</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stream</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.opened = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.opened:</span><br><span class="line">            <span class="keyword">raise</span> InvalidOperationError(<span class="string">"Stream is already opened."</span>)</span><br><span class="line">        self.opened = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.opened:</span><br><span class="line">            <span class="keyword">raise</span> InvalidOperationError(<span class="string">"Stream is already closed."</span>)</span><br><span class="line">        self.opened = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileStream</span><span class="params">(Stream)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Reading data from a file."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetworkStream</span><span class="params">(Stream)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Reading data from a network."</span>)</span><br></pre></td></tr></table></figure><h1 id="Abstract-Base-Classes"><a href="#Abstract-Base-Classes" class="headerlink" title="Abstract Base Classes"></a>Abstract Base Classes</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABC, abstractmethod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InvalidOperationError</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stream</span><span class="params">(ABC)</span>:</span><span class="comment"># 继承自ABC(抽象类简写)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.opened = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.opened:</span><br><span class="line">            <span class="keyword">raise</span> InvalidOperationError(<span class="string">"Stream is already opened."</span>)</span><br><span class="line">        self.opened = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.opened:</span><br><span class="line">            <span class="keyword">raise</span> InvalidOperationError(<span class="string">"Stream is already closed."</span>)</span><br><span class="line">        self.opened = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span><span class="comment"># 抽象方法</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileStream</span><span class="params">(Stream)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Reading data from a file."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetworkStream</span><span class="params">(Stream)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Reading data from a network."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemoryStream</span><span class="params">(Stream)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"Reading data from the memory."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stream = MemoryStream()</span><br><span class="line">stream.read()</span><br></pre></td></tr></table></figure><p>👉 Stream 不能创建实例</p><p>👉 Stream 的子类必须实现 read() ,或者也是抽象类</p><h1 id="Polymorphism"><a href="#Polymorphism" class="headerlink" title="Polymorphism"></a>Polymorphism</h1><p>Many Forms</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABC, abstractmethod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UIControl</span><span class="params">(ABC)</span>:</span></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TextBox</span><span class="params">(UIControl)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"TextBox"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DropDownList</span><span class="params">(UIControl)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"DropDownList"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(controls)</span>:</span><span class="comment"># 在run-time才知道control具体是什么</span></span><br><span class="line">    <span class="keyword">for</span> control <span class="keyword">in</span> controls:</span><br><span class="line">        control.draw()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ddl = DropDownList()</span><br><span class="line">textbox = TextBox()</span><br><span class="line">draw([ddl, textbox])<span class="comment"># 多种对象实现一种方法</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DropDownList</span><br><span class="line">TextBox</span><br></pre></td></tr></table></figure><h2 id="Duck-Typing"><a href="#Duck-Typing" class="headerlink" title="Duck Typing"></a>Duck Typing</h2><p><strong>If it walks and quacks like a duck, it is a duck.</strong></p><p>上例中并不需要抽象类UIControl。只要类中实现了draw()方法，python就认为是个UIControl，就能执行draw(controls)方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABC, abstractmethod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TextBox</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"TextBox"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DropDownList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"DropDownList"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(controls)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> control <span class="keyword">in</span> controls:</span><br><span class="line">        control.draw()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ddl = DropDownList()</span><br><span class="line">textbox = TextBox()</span><br><span class="line">draw([ddl, textbox])</span><br></pre></td></tr></table></figure><h1 id="Extending-Built-in-Types"><a href="#Extending-Built-in-Types" class="headerlink" title="Extending Built-in Types"></a>Extending Built-in Types</h1><p><strong>Demo 1: 扩展str类</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Text</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">duplicate</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self + self</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">text = Text(<span class="string">"Python"</span>)</span><br><span class="line">print(text.duplicate())<span class="comment"># 本类方法</span></span><br><span class="line">print(text.lower())     <span class="comment"># 父类方法</span></span><br></pre></td></tr></table></figure><p>输出:</p><p>PythonPython</p><p>python</p><p><strong>Demo 2: 扩展list类</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TrackableList</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, object)</span>:</span></span><br><span class="line">        print(<span class="string">"Append called"</span>)</span><br><span class="line">        super().append(object)<span class="comment"># 调用父类方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list = TrackableList()</span><br><span class="line">list.append(<span class="string">"1"</span>)</span><br></pre></td></tr></table></figure><p>输出:</p><p>Append called</p><h1 id="Data-Classes"><a href="#Data-Classes" class="headerlink" title="Data Classes"></a>Data Classes</h1><p>对于一个只有data而没有方法的类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self, other)</span> -&gt; bool:</span></span><br><span class="line">        <span class="keyword">return</span> self.x == other.x <span class="keyword">and</span> self.y == other.y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1 = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">p2 = Point(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(p1 == p2)</span><br></pre></td></tr></table></figure><p>可以用 namedtuple make code cleaner:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"></span><br><span class="line">Point = namedtuple(<span class="string">"Point"</span>, [<span class="string">"x"</span>, <span class="string">"y"</span>])</span><br><span class="line">p1 = Point(x=<span class="number">1</span>, y=<span class="number">2</span>)        <span class="comment"># must be keyword arguments</span></span><br><span class="line">p2 = Point(x=<span class="number">1</span>, y=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">print(p1 == p2)<span class="comment"># True</span></span><br><span class="line">print(p1.x)<span class="comment"># 像类一样调用：1</span></span><br><span class="line"></span><br><span class="line">p1.x = <span class="number">10</span><span class="comment"># AttributeError: can't set attribute</span></span><br></pre></td></tr></table></figure><p>只能新建一个namedtuple，用p1指向：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p1 = Point(x=<span class="number">10</span>, y=<span class="number">2</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;👉 Class: blueprint for creating new objects — Hu
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(6)--Exceptions</title>
    <link href="http://yoursite.com/2021/05/11/20210511_Python006/"/>
    <id>http://yoursite.com/2021/05/11/20210511_Python006/</id>
    <published>2021-05-11T09:50:09.000Z</published>
    <updated>2021-05-11T12:13:47.869Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Handling-Exceptions"><a href="#Handling-Exceptions" class="headerlink" title="Handling Exceptions"></a>Handling Exceptions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    age = int(input(<span class="string">"Age: "</span>))</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> ex:</span><br><span class="line">    print(<span class="string">"You didn't enter a valid age."</span>)</span><br><span class="line">    print(ex)<span class="comment"># 输出错误信息</span></span><br><span class="line">    print(type(ex))<span class="comment"># 显示错误类型</span></span><br><span class="line"><span class="keyword">else</span>:<span class="comment"># 没有exception就执行这一块</span></span><br><span class="line">    print(<span class="string">"No exceptions were thrown."</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Execution continues."</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;python app.py</span><br><span class="line">Age: <span class="number">10</span></span><br><span class="line">No exceptions were thrown.</span><br><span class="line">Execution continues.</span><br><span class="line"></span><br><span class="line">&gt;python app.py</span><br><span class="line">Age: a</span><br><span class="line">You didn<span class="string">'t enter a valid age.</span></span><br><span class="line"><span class="string">invalid literal for int() with base 10: '</span>a<span class="string">'   </span></span><br><span class="line"><span class="string">&lt;class '</span>ValueErro<span class="string">r'&gt;</span></span><br><span class="line"><span class="string">Execution continues.</span></span><br></pre></td></tr></table></figure><h2 id="Handling-Different-Exceptions"><a href="#Handling-Different-Exceptions" class="headerlink" title="Handling Different Exceptions"></a>Handling Different Exceptions</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    age = int(input(<span class="string">"Age: "</span>))</span><br><span class="line">    xfactor = <span class="number">10</span> / age</span><br><span class="line"><span class="keyword">except</span> (ValueError, ZeroDivisionError):<span class="comment"># 多种exception之一即执行</span></span><br><span class="line">    print(<span class="string">"You didn't enter a valid age."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"No exceptions were thrown."</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; python app.py</span><br><span class="line">Age: <span class="number">0</span></span><br><span class="line">You didn<span class="string">'t enter a valid age.</span></span><br></pre></td></tr></table></figure><h1 id="Cleaning-Up"><a href="#Cleaning-Up" class="headerlink" title="Cleaning Up"></a>Cleaning Up</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file = open(<span class="string">"app.py"</span>)</span><br><span class="line">    age = int(input(<span class="string">"Age: "</span>))</span><br><span class="line">    xfactor = <span class="number">10</span> / age</span><br><span class="line"><span class="keyword">except</span> (ValueError, ZeroDivisionError):</span><br><span class="line">    print(<span class="string">"You didn't enter a valid age."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"No exceptions were thrown."</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    file.close()</span><br></pre></td></tr></table></figure><p>无论有没有出现exception，都要释放资源，那就放在finally块里，无论有没有exception都会执行的。</p><h2 id="The-With-Statement"><a href="#The-With-Statement" class="headerlink" title="The With Statement"></a>The With Statement</h2><p>使用with语句打开文件，随后会自动释放掉，就不用file.close()了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"app.py"</span>) <span class="keyword">as</span> file:</span><br><span class="line">       print(<span class="string">"File opened."</span>)</span><br></pre></td></tr></table></figure><p>file有__enter__和__exit__两个magic function，最后会自动调用__exit__，所以不用手动释放。</p><h1 id="Raising-Exceptions"><a href="#Raising-Exceptions" class="headerlink" title="Raising Exceptions"></a>Raising Exceptions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_xfactor</span><span class="params">(age)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> age &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">"Age cannot be 0 or less."</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span> / age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    calculate_xfactor(<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> error:</span><br><span class="line">    print(error)</span><br></pre></td></tr></table></figure><h1 id="Cost-of-Raising-Exceptions"><a href="#Cost-of-Raising-Exceptions" class="headerlink" title="Cost of Raising Exceptions"></a>Cost of Raising Exceptions</h1><p>Mosh 不建议raise exceptions，因为代价有点大。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> timeit <span class="keyword">import</span> timeit</span><br><span class="line"></span><br><span class="line">code1 = <span class="string">"""</span></span><br><span class="line"><span class="string">def calculate_xfactor(age):</span></span><br><span class="line"><span class="string">    if age &lt;= 0:</span></span><br><span class="line"><span class="string">        raise ValueError("Age cannot be 0 or less.")</span></span><br><span class="line"><span class="string">    return 10 / age</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">try:</span></span><br><span class="line"><span class="string">    calculate_xfactor(-1)</span></span><br><span class="line"><span class="string">except ValueError as error:</span></span><br><span class="line"><span class="string">    pass</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">code2 = <span class="string">"""</span></span><br><span class="line"><span class="string">def calculate_xfactor(age):</span></span><br><span class="line"><span class="string">    if age &lt;= 0:</span></span><br><span class="line"><span class="string">        return None</span></span><br><span class="line"><span class="string">    return 10 / age</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">xfactor = calculate_xfactor(-1)</span></span><br><span class="line"><span class="string">if xfactor == None:</span></span><br><span class="line"><span class="string">    pass</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"first code="</span>, timeit(code1, number=<span class="number">10000</span>))</span><br><span class="line">print(<span class="string">"second code="</span>, timeit(code2, number=<span class="number">10000</span>))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">first code= <span class="number">0.0040202000000000016</span></span><br><span class="line">second code= <span class="number">0.0015166999999999958</span></span><br></pre></td></tr></table></figure><p>可以看到raise exception的用时是普通方法的两倍多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Handling-Exceptions&quot;&gt;&lt;a href=&quot;#Handling-Exce
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(5)--Data Structures</title>
    <link href="http://yoursite.com/2021/05/09/20210509_Python005/"/>
    <id>http://yoursite.com/2021/05/09/20210509_Python005/</id>
    <published>2021-05-09T09:50:09.000Z</published>
    <updated>2021-05-11T07:50:55.554Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="List"><a href="#List" class="headerlink" title="List"></a>List</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">letters = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>]</span><br><span class="line">matrix = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">zeros = [<span class="number">0</span>] * <span class="number">5</span>             <span class="comment"># [0,0,0,0,0]</span></span><br><span class="line">combined = zeros + letters  <span class="comment"># [0, 0, 0, 0, 0, 'a', 'b', 'c']</span></span><br><span class="line">numbers = list(range(<span class="number">20</span>))</span><br><span class="line">chars = list(<span class="string">"Hello World"</span>)<span class="comment"># ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']</span></span><br><span class="line">print(len(chars))           <span class="comment"># 11</span></span><br></pre></td></tr></table></figure><p><strong>Demo 1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">letters = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>]</span><br><span class="line">print(letters[<span class="number">0</span>])</span><br><span class="line">print(letters[<span class="number">-1</span>])</span><br><span class="line">letters[<span class="number">0</span>] = <span class="string">"A"</span></span><br><span class="line">print(letters)</span><br><span class="line">print(letters[:<span class="number">3</span>])</span><br><span class="line">print(letters[::<span class="number">2</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">d</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure><p><strong>Demo 2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">numbers = list(range(<span class="number">10</span>))</span><br><span class="line">print(numbers)</span><br><span class="line">print(numbers[::<span class="number">2</span>])</span><br><span class="line">print(numbers[::<span class="number">-1</span>])<span class="comment"># 倒序输出</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>]</span><br><span class="line">[<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="Unpacking-Lists"><a href="#Unpacking-Lists" class="headerlink" title="Unpacking Lists"></a>Unpacking Lists</h2><p><strong>Demo 1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">first, second, third = numbers<span class="comment"># first=1, second=2, third=3</span></span><br><span class="line">first, second, _ = numbers</span><br></pre></td></tr></table></figure><p><strong>Demo 2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">numbers2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>]</span><br><span class="line">first, second, *other = numbers2</span><br><span class="line">print(first)<span class="comment"># 1</span></span><br><span class="line">print(other)<span class="comment"># [3, 4, 4, 4, 4, 4, 4]</span></span><br></pre></td></tr></table></figure><p>与此同理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    total = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers:</span><br><span class="line">        total *= number</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(multiply(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line">print(multiply(<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>Another demo:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">numbers2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">9</span>]</span><br><span class="line">first, *other, last = numbers2</span><br><span class="line">print(first, last)<span class="comment"># 1 9</span></span><br><span class="line">print(other)<span class="comment"># [2, 3, 4, 4, 4, 4, 4]</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;id&#39;: 1, &#39;name&#39;: &#39;John&#39;, &#39;age&#39;: 22&#125;</span><br><span class="line">John</span><br></pre></td></tr></table></figure><h2 id="Looping-over-Lists"><a href="#Looping-over-Lists" class="headerlink" title="Looping over Lists"></a>Looping over Lists</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">letters = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>]</span><br><span class="line"><span class="keyword">for</span> letter <span class="keyword">in</span> enumerate(letters):</span><br><span class="line">    print(letter)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">0</span>, <span class="string">'a'</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="string">'b'</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="string">'c'</span>)</span><br></pre></td></tr></table></figure><p><strong>unpacking tuple:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">letters = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>]</span><br><span class="line"><span class="keyword">for</span> index, letter <span class="keyword">in</span> enumerate(letters):</span><br><span class="line">    print(index, letter)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> a</span><br><span class="line"><span class="number">1</span> b</span><br><span class="line"><span class="number">2</span> c</span><br></pre></td></tr></table></figure><h2 id="Adding-Removing-Items"><a href="#Adding-Removing-Items" class="headerlink" title="Adding/Removing Items"></a>Adding/Removing Items</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">letters = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add</span></span><br><span class="line">letters.append(<span class="string">"f"</span>)<span class="comment"># 在末尾加入</span></span><br><span class="line">letters.insert(<span class="number">0</span>, <span class="string">"-"</span>)<span class="comment"># 在首部加入</span></span><br><span class="line">print(letters)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove</span></span><br><span class="line">letters.pop()<span class="comment"># 删除最后一个元素</span></span><br><span class="line">print(letters)</span><br><span class="line"></span><br><span class="line">letters.remove(<span class="string">"b"</span>)<span class="comment"># 删除特定元素</span></span><br><span class="line">print(letters)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> letters[<span class="number">0</span>:<span class="number">3</span>]<span class="comment"># 删除多个元素</span></span><br><span class="line">print(letters)</span><br><span class="line"></span><br><span class="line">letters.clear()<span class="comment"># 清除所有元素</span></span><br><span class="line">print(letters)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[&#39;-&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;]</span><br><span class="line">[&#39;-&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</span><br><span class="line">[&#39;-&#39;, &#39;a&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</span><br><span class="line">[&#39;d&#39;, &#39;e&#39;]</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><h2 id="Finding-Items"><a href="#Finding-Items" class="headerlink" title="Finding Items"></a>Finding Items</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">letters = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>]</span><br><span class="line">print(letters.count(<span class="string">"d"</span>))<span class="comment"># 0</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"c"</span> <span class="keyword">in</span> letters:</span><br><span class="line">    print(letters.index(<span class="string">"c"</span>))<span class="comment"># 2</span></span><br></pre></td></tr></table></figure><h2 id="Sorting-Lists"><a href="#Sorting-Lists" class="headerlink" title="Sorting Lists"></a>Sorting Lists</h2><p><strong>Demo 1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = [<span class="number">3</span>, <span class="number">51</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br><span class="line">numbers.sort(reverse=<span class="literal">True</span>)<span class="comment"># 倒序</span></span><br><span class="line">print(numbers)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[51, 8, 6, 3, 2]</span><br></pre></td></tr></table></figure><p><strong>Demo 2</strong></p><p>built-in function: 不改变原数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = [<span class="number">3</span>, <span class="number">51</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br><span class="line">print(sorted(numbers, reverse=<span class="literal">True</span>))</span><br><span class="line">print(numbers)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">51</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br><span class="line">[<span class="number">3</span>, <span class="number">51</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure><p><strong>Demo 3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">items = [</span><br><span class="line">    (<span class="string">"product1"</span>, <span class="number">10</span>),</span><br><span class="line">    (<span class="string">"product2"</span>, <span class="number">9</span>),</span><br><span class="line">    (<span class="string">"product3"</span>, <span class="number">12</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_item</span><span class="params">(item)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> item[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">items.sort(key=sort_item)</span><br><span class="line">print(items)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(<span class="string">'product2'</span>, <span class="number">9</span>), (<span class="string">'product1'</span>, <span class="number">10</span>), (<span class="string">'product3'</span>, <span class="number">12</span>)]</span><br></pre></td></tr></table></figure><h2 id="Lambdas"><a href="#Lambdas" class="headerlink" title="Lambdas"></a>Lambdas</h2><p>改造上述的例子(Demo 3)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">items = [</span><br><span class="line">    (<span class="string">"product1"</span>, <span class="number">10</span>),</span><br><span class="line">    (<span class="string">"product2"</span>, <span class="number">9</span>),</span><br><span class="line">    (<span class="string">"product3"</span>, <span class="number">12</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> item: item[<span class="number">1</span>])</span><br><span class="line">print(items)</span><br></pre></td></tr></table></figure><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lambda</span> parameters:expression</span><br></pre></td></tr></table></figure><h3 id="Map-Function"><a href="#Map-Function" class="headerlink" title="Map Function"></a>Map Function</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">items = [</span><br><span class="line">    (<span class="string">"product1"</span>, <span class="number">10</span>),</span><br><span class="line">    (<span class="string">"product2"</span>, <span class="number">9</span>),</span><br><span class="line">    (<span class="string">"product3"</span>, <span class="number">12</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># prices = []</span></span><br><span class="line"><span class="comment"># for item in items:</span></span><br><span class="line"><span class="comment">#     prices.append(item[1])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(prices)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A better way</span></span><br><span class="line">prices = list(map(<span class="keyword">lambda</span> item: item[<span class="number">1</span>], items))</span><br><span class="line">print(prices)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[10, 9, 12]</span><br></pre></td></tr></table></figure><h3 id="Filter-Function"><a href="#Filter-Function" class="headerlink" title="Filter Function"></a>Filter Function</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">items = [</span><br><span class="line">    (<span class="string">"product1"</span>, <span class="number">10</span>),</span><br><span class="line">    (<span class="string">"product2"</span>, <span class="number">9</span>),</span><br><span class="line">    (<span class="string">"product3"</span>, <span class="number">12</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">filtered = list(filter(<span class="keyword">lambda</span> item: item[<span class="number">1</span>] &gt;= <span class="number">10</span>, items))</span><br><span class="line">print(filtered)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(&#39;product1&#39;, 10), (&#39;product3&#39;, 12)]</span><br></pre></td></tr></table></figure><h2 id="List-Comprehension"><a href="#List-Comprehension" class="headerlink" title="List Comprehension"></a>List Comprehension</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item <span class="keyword">in</span> items]</span><br></pre></td></tr></table></figure><p>改造上面的 map function 和 filter function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prices = [item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> items]</span><br><span class="line"></span><br><span class="line">filtered = [item <span class="keyword">for</span> item <span class="keyword">in</span> items <span class="keyword">if</span> item[<span class="number">1</span>] &gt;= <span class="number">10</span>]</span><br></pre></td></tr></table></figure><h2 id="Zip-Function"><a href="#Zip-Function" class="headerlink" title="Zip Function"></a>Zip Function</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">list2 = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</span><br><span class="line"></span><br><span class="line">print(list(zip(<span class="string">"abc"</span>, list1, list2)))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(&#39;a&#39;, 1, 10), (&#39;b&#39;, 2, 20), (&#39;c&#39;, 3, 30)]</span><br></pre></td></tr></table></figure><h1 id="Stacks"><a href="#Stacks" class="headerlink" title="Stacks"></a>Stacks</h1><p><strong>LIFO: Last In - First Out</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">browsing_session = []</span><br><span class="line">browsing_session.append(<span class="number">1</span>)<span class="comment"># 压栈</span></span><br><span class="line">browsing_session.append(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">not</span> browsing_session:</span><br><span class="line">    print(browsing_session.pop())<span class="comment"># 出栈</span></span><br></pre></td></tr></table></figure><h1 id="Queues"><a href="#Queues" class="headerlink" title="Queues"></a>Queues</h1><p><strong>FIFO: First In - First Out</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">queue = deque([])</span><br><span class="line">queue.append(<span class="number">1</span>)<span class="comment"># 入队</span></span><br><span class="line">queue.append(<span class="number">2</span>)</span><br><span class="line">queue.append(<span class="number">3</span>)</span><br><span class="line">queue.popleft()<span class="comment"># 出队</span></span><br><span class="line">print(queue)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> queue:<span class="comment"># 检查队列是否为空</span></span><br><span class="line">    print(<span class="string">"Empty"</span>)</span><br></pre></td></tr></table></figure><h1 id="Tuples"><a href="#Tuples" class="headerlink" title="Tuples"></a>Tuples</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 都是tuple：</span></span><br><span class="line">point = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"><span class="comment"># point = 1,</span></span><br><span class="line"><span class="comment"># point = ()</span></span><br><span class="line">print(type(point))</span><br></pre></td></tr></table></figure><p><strong>Demo</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">point = (<span class="number">1</span>, <span class="number">2</span>) + (<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">print(point)<span class="comment"># (1, 2, 3, 4)</span></span><br><span class="line"></span><br><span class="line">point = (<span class="number">1</span>, <span class="number">2</span>) * <span class="number">3</span></span><br><span class="line">print(point)<span class="comment"># (1, 2, 1, 2, 1, 2)</span></span><br><span class="line"></span><br><span class="line">point = tuple([<span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">print(point)<span class="comment"># (1, 2)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">point = tuple(<span class="string">"hello"</span>)</span><br><span class="line">print(point)<span class="comment"># ('h', 'e', 'l', 'l', 'o')</span></span><br><span class="line"></span><br><span class="line">point = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">print(point[<span class="number">0</span>:<span class="number">2</span>])<span class="comment"># (1, 2)</span></span><br><span class="line"></span><br><span class="line">x, y, z = point</span><br><span class="line"><span class="keyword">if</span> <span class="number">10</span> <span class="keyword">in</span> point:</span><br><span class="line">    print(<span class="string">"exists"</span>)</span><br></pre></td></tr></table></figure><h2 id="Swapping-Variables"><a href="#Swapping-Variables" class="headerlink" title="Swapping Variables"></a>Swapping Variables</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">z = x</span><br><span class="line">x = y</span><br><span class="line">y = z</span><br><span class="line">print(x, y)<span class="comment"># 11 10</span></span><br></pre></td></tr></table></figure><p>simpler way:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x, y = y, x</span><br><span class="line">print(x, y)</span><br></pre></td></tr></table></figure><p>实际上是先定义了一个tuple，然后给x, y赋值，即 x, y = (11, 10)</p><h1 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> array <span class="keyword">import</span> array</span><br><span class="line"></span><br><span class="line">numbers = array(<span class="string">"i"</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="comment"># numbers[0] = 1.0# TypeError: integer argument expected, got float</span></span><br><span class="line"></span><br><span class="line">list1 = [<span class="number">1.0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(type(list1[<span class="number">0</span>]))<span class="comment"># &lt;class 'float'&gt;</span></span><br><span class="line">print(type(list1[<span class="number">1</span>]))<span class="comment"># &lt;class 'int'&gt;</span></span><br></pre></td></tr></table></figure><p>arrays 可以调用 append, pop, index 等与 lists 相同的 built-in function，但是只能有一种数据类型（由参数 typecode 如 ”i“ 指定）</p><p>而一个 list 里面可以有多种数据类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1.0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">list1.append(<span class="string">"hello"</span>)</span><br><span class="line">print(list1)<span class="comment"># [1.0, 1, 2, 3, 'hello']</span></span><br></pre></td></tr></table></figure><h1 id="Sets"><a href="#Sets" class="headerlink" title="Sets"></a>Sets</h1><p>一个 set 内不能有重复项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">first = set(numbers)</span><br><span class="line">print(first)<span class="comment"># &#123;1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">second = &#123;<span class="number">1</span>, <span class="number">4</span>&#125;</span><br><span class="line">second.add(<span class="number">5</span>)</span><br><span class="line">print(second) <span class="comment"># &#123;1, 4, 5&#125;</span></span><br><span class="line"></span><br><span class="line">second.remove(<span class="number">5</span>)</span><br><span class="line">len(second)</span><br><span class="line">print(second)<span class="comment"># &#123;1, 4&#125;</span></span><br></pre></td></tr></table></figure><p><strong>Demo</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">numbers = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">first = set(numbers)</span><br><span class="line"></span><br><span class="line">second = &#123;<span class="number">1</span>, <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">print(first | second)   <span class="comment"># 在first或在second</span></span><br><span class="line">print(first &amp; second)   <span class="comment"># 在first也在second</span></span><br><span class="line">print(first - second)   <span class="comment"># 在first不在second</span></span><br><span class="line">print(first ^ second)   <span class="comment"># 在first或在second但不同时在两个set</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;1, 2, 3, 4, 5&#125;</span><br><span class="line">&#123;1&#125;</span><br><span class="line">&#123;2, 3, 4&#125;</span><br><span class="line">&#123;2, 3, 4, 5&#125;</span><br></pre></td></tr></table></figure><p>set是无序的，不能用index，如first[0]是不合法的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span> <span class="keyword">in</span> first:<span class="comment"># 判断set里是否有某元素</span></span><br><span class="line">    print(<span class="string">"yes"</span>)</span><br></pre></td></tr></table></figure><h1 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h1><p><strong>创建</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Two ways to create a dictionary</span></span><br><span class="line">point = &#123;<span class="string">"x"</span>: <span class="number">1</span>, <span class="string">"y"</span>: <span class="number">2</span>&#125;</span><br><span class="line">point = dict(x=<span class="number">1</span>, y=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><strong>增改</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">point[<span class="string">"x"</span>] = <span class="number">10</span><span class="comment"># modify element</span></span><br><span class="line">print(point)<span class="comment"># &#123;'x': 10, 'y': 2&#125;</span></span><br><span class="line">point[<span class="string">"z"</span>] = <span class="number">20</span><span class="comment"># create new element</span></span><br><span class="line">print(point)<span class="comment"># &#123;'x': 10, 'y': 2, 'z': 20&#125;</span></span><br></pre></td></tr></table></figure><p><strong>获取</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(point.get(<span class="string">"a"</span>))<span class="comment"># None</span></span><br><span class="line">print(point.get(<span class="string">"a"</span>, <span class="number">0</span>))<span class="comment"># 0 (若没有指定的key,则返回指定值0)</span></span><br></pre></td></tr></table></figure><p><strong>删除</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> point[<span class="string">"x"</span>]<span class="comment"># 删除元素</span></span><br><span class="line">print(point)<span class="comment"># &#123;'y': 2, 'z': 20&#125;</span></span><br></pre></td></tr></table></figure><p><strong>for loop</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> point:</span><br><span class="line">    print(key, point[key])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> point.items():<span class="comment"># 返回tuple</span></span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> point.items():</span><br><span class="line">    print(key, value)</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">y <span class="number">2</span></span><br><span class="line">z <span class="number">20</span></span><br><span class="line">(<span class="string">'y'</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="string">'z'</span>, <span class="number">20</span>)</span><br><span class="line">y <span class="number">2</span></span><br><span class="line">z <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="Dictionary-Comprehensions"><a href="#Dictionary-Comprehensions" class="headerlink" title="Dictionary Comprehensions"></a>Dictionary Comprehensions</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># values = []</span></span><br><span class="line"><span class="comment"># for x in range(5):</span></span><br><span class="line"><span class="comment">#    values.append(x * 2)</span></span><br><span class="line"></span><br><span class="line">values = [x * <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>)]<span class="comment"># 作用同上</span></span><br></pre></td></tr></table></figure><p>set、dictionary 的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">values = &#123;x * <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>)&#125;</span><br><span class="line">print(values)<span class="comment"># &#123;0, 2, 4, 6, 8&#125;</span></span><br><span class="line"></span><br><span class="line">values = &#123;x: x * <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>)&#125;</span><br><span class="line">print(values)<span class="comment"># &#123;0: 0, 1: 2, 2: 4, 3: 6, 4: 8&#125;</span></span><br></pre></td></tr></table></figure><h1 id="Generators"><a href="#Generators" class="headerlink" title="Generators"></a>Generators</h1><p>用于有大量（无限）元素，要节省内存空间的情形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> getsizeof</span><br><span class="line"></span><br><span class="line">values = (x * <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">100000</span>))<span class="comment"># generator</span></span><br><span class="line">print(<span class="string">"gen:"</span>, getsizeof(values))</span><br><span class="line"></span><br><span class="line">values = [x * <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">100000</span>)]<span class="comment"># list</span></span><br><span class="line">print(<span class="string">"list:"</span>, getsizeof(values))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gen: <span class="number">112</span></span><br><span class="line">list: <span class="number">800984</span></span><br></pre></td></tr></table></figure><p>对于 generator object, 无论有多少元素，都只占112的位置（就算只有一个元素也是）。generator object 在迭代时才生成元素，而不是将所有的元素都存在内存中。</p><h1 id="Unpacking-Operator"><a href="#Unpacking-Operator" class="headerlink" title="Unpacking Operator"></a>Unpacking Operator</h1><p><strong>Demo 1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(numbers)<span class="comment"># [1, 2, 3]</span></span><br><span class="line">print(*numbers)<span class="comment"># 1 2 3</span></span><br></pre></td></tr></table></figure><p>numbers 是一个list, 而 *numbers 是 unpack 之后的3个独立的数</p><p><strong>Demo 2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">values = list(range(<span class="number">5</span>))</span><br><span class="line">values = [*range(<span class="number">5</span>), *<span class="string">"Hello"</span>] </span><br><span class="line">print(values)<span class="comment"># [0, 1, 2, 3, 4, 'H', 'e', 'l', 'l', 'o']</span></span><br></pre></td></tr></table></figure><p><strong>Demo 3</strong></p><p>组合两个lists：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">first = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">second = [<span class="number">3</span>]</span><br><span class="line">values = [*first, <span class="string">"a"</span>, *second, *<span class="string">"Hello"</span>]</span><br><span class="line">print(values)<span class="comment"># [1, 2, 'a', 3, 'H', 'e', 'l', 'l', 'o']</span></span><br></pre></td></tr></table></figure><p><strong>Demo 4</strong></p><p>组合两个字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">first = &#123;<span class="string">"x"</span>: <span class="number">1</span>&#125;</span><br><span class="line">second = &#123;<span class="string">"x"</span>: <span class="number">10</span>, <span class="string">"y"</span>: <span class="number">2</span>&#125;</span><br><span class="line">combined = &#123;**first, **second, <span class="string">"z"</span>: <span class="number">1</span>&#125;</span><br><span class="line">print(combined) <span class="comment"># &#123;'x': 10, 'y': 2, 'z': 1&#125;</span></span><br></pre></td></tr></table></figure><p>相同 key 值的元素 (“x”) 取最后一个元素的 value (10)</p><h1 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h1><p>得出一个句子中出现频率最高的字母：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line">sentence = <span class="string">"This is a common interview question"</span></span><br><span class="line"></span><br><span class="line">char_frequency = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> sentence:</span><br><span class="line">    <span class="keyword">if</span> char <span class="keyword">in</span> char_frequency:</span><br><span class="line">        char_frequency[char] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        char_frequency[char] = <span class="number">1</span></span><br><span class="line">pprint(char_frequency, width=<span class="number">1</span>) <span class="comment"># 一行只打印一个</span></span><br><span class="line"></span><br><span class="line">char_frequency_sorted = sorted(</span><br><span class="line">    char_frequency.items(),</span><br><span class="line">    key=<span class="keyword">lambda</span> kv: kv[<span class="number">1</span>],</span><br><span class="line">    reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">print(char_frequency_sorted[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">' '</span>: <span class="number">5</span>,</span><br><span class="line"> <span class="string">'T'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'a'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'c'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'e'</span>: <span class="number">3</span>,</span><br><span class="line"> <span class="string">'h'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'i'</span>: <span class="number">5</span>,</span><br><span class="line"> <span class="string">'m'</span>: <span class="number">2</span>,</span><br><span class="line"> <span class="string">'n'</span>: <span class="number">3</span>,</span><br><span class="line"> <span class="string">'o'</span>: <span class="number">3</span>,</span><br><span class="line"> <span class="string">'q'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'r'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'s'</span>: <span class="number">3</span>,</span><br><span class="line"> <span class="string">'t'</span>: <span class="number">2</span>,</span><br><span class="line"> <span class="string">'u'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'v'</span>: <span class="number">1</span>,</span><br><span class="line"> <span class="string">'w'</span>: <span class="number">1</span>&#125;</span><br><span class="line">(<span class="string">'i'</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>我的改进：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#char_frequency = &#123;&#125;</span></span><br><span class="line"><span class="comment">#for char in sentence:</span></span><br><span class="line"><span class="comment">#    if char in char_frequency:</span></span><br><span class="line"><span class="comment">#        char_frequency[char] += 1</span></span><br><span class="line"><span class="comment">#    else:</span></span><br><span class="line"><span class="comment">#        char_frequency[char] = 1</span></span><br><span class="line"><span class="comment"># pprint(char_frequency, width=1) # 一行只打印一个</span></span><br><span class="line"></span><br><span class="line">char_frequency = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> sentence:</span><br><span class="line">    char_frequency[char] = char_frequency.get(char, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">pprint(char_frequency, width=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;List&quot;&gt;&lt;a href=&quot;#List&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(4)--Functions</title>
    <link href="http://yoursite.com/2021/05/06/20210506_Python004/"/>
    <id>http://yoursite.com/2021/05/06/20210506_Python004/</id>
    <published>2021-05-06T09:50:09.000Z</published>
    <updated>2021-05-09T09:11:54.430Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Arguments"><a href="#Arguments" class="headerlink" title="Arguments"></a>Arguments</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(first_name, last_name)</span>:</span></span><br><span class="line">    print(<span class="string">f"Hi <span class="subst">&#123;first_name&#125;</span> <span class="subst">&#123;last_name&#125;</span>"</span>)</span><br><span class="line">    print(<span class="string">"Welcome aboard"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greet(<span class="string">"Stone"</span>, <span class="string">"Purple"</span>)</span><br><span class="line">greet(<span class="string">"Stephen"</span>, <span class="string">"Curry"</span>)</span><br></pre></td></tr></table></figure><h1 id="Types-of-Functions"><a href="#Types-of-Functions" class="headerlink" title="Types of Functions"></a>Types of Functions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">👉 <span class="number">1</span> - Perform a task</span><br><span class="line">👉 <span class="number">2</span> - Return a value</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="string">""" Type 1 function """</span></span><br><span class="line">    print(<span class="string">f"Hi <span class="subst">&#123;name&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_greeting</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="string">""" Type 2 function """</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f"Hi <span class="subst">&#123;name&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message = get_greeting(<span class="string">"Stone"</span>)</span><br><span class="line">file = open(<span class="string">"content.txt"</span>, <span class="string">"w"</span>)</span><br><span class="line">file.write(message)</span><br></pre></td></tr></table></figure><p>python return <strong>None</strong> by default.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(greet(<span class="string">"Stone"</span>))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">None</span><br></pre></td></tr></table></figure><h1 id="Types-of-Arguments"><a href="#Types-of-Arguments" class="headerlink" title="Types of Arguments"></a>Types of Arguments</h1><h2 id="Keyword-Arguments"><a href="#Keyword-Arguments" class="headerlink" title="Keyword Arguments"></a>Keyword Arguments</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">increment</span><span class="params">(number, by)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> number + by</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># more readable: by=...</span></span><br><span class="line">print(increment(<span class="number">2</span>, by=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h2 id="Default-Arguments"><a href="#Default-Arguments" class="headerlink" title="Default Arguments"></a>Default Arguments</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">increment</span><span class="params">(number, by=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> number + by</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(increment(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>所有 optional arguments 应该在无 default value 的 argument 后面</p><h2 id="args"><a href="#args" class="headerlink" title="*args"></a>*args</h2><p>输入参数数量可变(存成一个tuple，且iterable)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(*numbers)</span>:</span></span><br><span class="line">    total = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers:</span><br><span class="line">        total *= number</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(multiply(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line">print(multiply(<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">120</span><br><span class="line">1200</span><br></pre></td></tr></table></figure><h2 id="args-1"><a href="#args-1" class="headerlink" title="**args"></a>**args</h2><p>打包 keyword arguments 成 dict 给函数体调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_user</span><span class="params">(**user)</span>:</span></span><br><span class="line">    print(user)</span><br><span class="line">    print(user[<span class="string">"name"</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">save_user(id=<span class="number">1</span>, name=<span class="string">"John"</span>, age=<span class="number">22</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;id&#39;: 1, &#39;name&#39;: &#39;John&#39;, &#39;age&#39;: 22&#125;</span><br><span class="line">John</span><br></pre></td></tr></table></figure><h1 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h1><p>局部变量局部可见</p><p>全局变量全局可见</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">message = <span class="string">"a"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span><span class="params">(name)</span>:</span></span><br><span class="line">    message = <span class="string">"b"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greet(<span class="string">"Stone"</span>)</span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure><p>因为 Python 将 greet 函数内的 message 视为 local variable，尽管它与全局变量同名。</p><h1 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">👉 F9 -- 设置断点</span><br><span class="line">👉 F5 -- 开始调试</span><br><span class="line">👉 F10 -- 下一步</span><br><span class="line">👉 F11 -- 进入 function 内单步 debug</span><br><span class="line">👉 Shift+F11 -- 退出 function 内单步 debug</span><br></pre></td></tr></table></figure><h1 id="VSCode-Tricks-Windows"><a href="#VSCode-Tricks-Windows" class="headerlink" title="VSCode Tricks (Windows)"></a>VSCode Tricks (Windows)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">👉 Home 光标移到行首</span><br><span class="line">👉 End 光标移到行尾</span><br><span class="line">👉 Ctrl+Home 光标移到文件头</span><br><span class="line">👉 Ctrl+End 光标移到文件尾</span><br><span class="line">👉 Ctrl+L 选择当前行</span><br><span class="line">👉 Alt+↑or↓ 代码上移或下移</span><br><span class="line">👉 Shift+Alt+↓选中某（几）行后用此组合键复制粘贴</span><br><span class="line">👉 Ctrl+&#x2F;多行注释</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Arguments&quot;&gt;&lt;a href=&quot;#Arguments&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(3)--Control Flow</title>
    <link href="http://yoursite.com/2021/05/06/20210506_Python003/"/>
    <id>http://yoursite.com/2021/05/06/20210506_Python003/</id>
    <published>2021-05-06T08:50:09.000Z</published>
    <updated>2021-05-06T08:03:04.903Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Comparison-Operators"><a href="#Comparison-Operators" class="headerlink" title="Comparison Operators"></a>Comparison Operators</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &gt; <span class="number">3</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &gt;= <span class="number">3</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> &lt; <span class="number">20</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> == <span class="number">10</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> == <span class="string">"10"</span> </span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> != <span class="string">"10"</span> </span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"bag"</span> &gt; <span class="string">"apple"</span> </span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"bag"</span> == <span class="string">"BAG"</span>  </span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">"b"</span>) </span><br><span class="line"><span class="number">98</span>  </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">"B"</span>) </span><br><span class="line"><span class="number">66</span></span><br></pre></td></tr></table></figure><h2 id="Chaining-Comparison-Operators"><a href="#Chaining-Comparison-Operators" class="headerlink" title="Chaining Comparison Operators"></a>Chaining Comparison Operators</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># age should be between 18 and 65</span></span><br><span class="line">age = <span class="number">22</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">18</span> &lt;= age &lt; <span class="number">65</span>:</span><br><span class="line">    print(<span class="string">"Eligible"</span>)</span><br></pre></td></tr></table></figure><h1 id="Conditional-Statements"><a href="#Conditional-Statements" class="headerlink" title="Conditional Statements"></a>Conditional Statements</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">temperature = <span class="number">15</span></span><br><span class="line"><span class="keyword">if</span> temperature &gt; <span class="number">30</span>:</span><br><span class="line">    print(<span class="string">"It is warm"</span>)</span><br><span class="line">    print(<span class="string">"Drink water"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> temperature &gt; <span class="number">20</span>:</span><br><span class="line">    print(<span class="string">"It's nice"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"It's cold"</span>)</span><br><span class="line">    </span><br><span class="line">print(<span class="string">"Done"</span>)</span><br></pre></td></tr></table></figure><h1 id="Ternary-Operator"><a href="#Ternary-Operator" class="headerlink" title="Ternary Operator"></a>Ternary Operator</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if age &gt;= 18:</span></span><br><span class="line"><span class="comment">#     message = "Eligible"</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     message = "Not eligible"</span></span><br><span class="line"></span><br><span class="line">message = <span class="string">"Eligible"</span> <span class="keyword">if</span> age &gt;= <span class="number">18</span> <span class="keyword">else</span> <span class="string">"Not eligible"</span></span><br><span class="line"></span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure><h1 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># logical operators: and, or, not</span></span><br><span class="line"></span><br><span class="line">high_income = <span class="literal">True</span></span><br><span class="line">good_credit = <span class="literal">False</span></span><br><span class="line">student = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (high_income <span class="keyword">or</span> good_credit) <span class="keyword">and</span> <span class="keyword">not</span> student:</span><br><span class="line">    print(<span class="string">"Eligible"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Not eligible"</span>)</span><br></pre></td></tr></table></figure><h2 id="Short-circuit-Evaluation"><a href="#Short-circuit-Evaluation" class="headerlink" title="Short-circuit Evaluation"></a>Short-circuit Evaluation</h2><p>多条件判断时：</p><p>and 前面的 expression 为 False, 则不再(执行)判断后面的expression</p><p>or 前面的 expression 为 True, 则不再(执行)判断后面的expression</p><h1 id="For-Loops"><a href="#For-Loops" class="headerlink" title="For Loops"></a>For Loops</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>):<span class="comment"># step: 2</span></span><br><span class="line">    print(<span class="string">"Attempt"</span>, number, number * <span class="string">"."</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Attempt 1 .</span><br><span class="line">Attempt 3 ...</span><br><span class="line">Attempt 5 .....</span><br><span class="line">Attempt 7 .......</span><br><span class="line">Attempt 9 .........</span><br></pre></td></tr></table></figure><h2 id="For…Else"><a href="#For…Else" class="headerlink" title="For…Else"></a>For…Else</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">successful = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    print(<span class="string">"Attempt"</span>)</span><br><span class="line">    <span class="keyword">if</span> successful:</span><br><span class="line">        print(<span class="string">"Successful"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Attempted 3 times and failed."</span>)</span><br></pre></td></tr></table></figure><p>如果一直没有执行break，就执行下面的else</p><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Attempt</span><br><span class="line">Attempt</span><br><span class="line">Attempt</span><br><span class="line">Attempted <span class="number">3</span> times <span class="keyword">and</span> failed</span><br></pre></td></tr></table></figure><h2 id="Nested-Loops"><a href="#Nested-Loops" class="headerlink" title="Nested Loops"></a>Nested Loops</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">f"(<span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y&#125;</span>)"</span>)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="number">0</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="Iterables"><a href="#Iterables" class="headerlink" title="Iterables"></a>Iterables</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Iterable : range(), string, list...</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">"Python"</span>:</span><br><span class="line">    print(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">P</span><br><span class="line">y</span><br><span class="line">t</span><br><span class="line">h</span><br><span class="line">o</span><br><span class="line">n</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="While-Loops"><a href="#While-Loops" class="headerlink" title="While Loops"></a>While Loops</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">command = <span class="string">""</span></span><br><span class="line"><span class="keyword">while</span> command.lower() != <span class="string">"quit"</span>:</span><br><span class="line">    command = input(<span class="string">"&gt;"</span>)</span><br><span class="line">    print(<span class="string">"ECHO"</span>, command)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">2</span>+<span class="number">2</span></span><br><span class="line">ECHO <span class="number">2</span>+<span class="number">2</span></span><br><span class="line">&gt;<span class="number">3</span>*<span class="number">4</span>    </span><br><span class="line">ECHO <span class="number">3</span>*<span class="number">4</span></span><br><span class="line">&gt;quit   </span><br><span class="line">ECHO quit</span><br></pre></td></tr></table></figure><h1 id="Infinite-Loops"><a href="#Infinite-Loops" class="headerlink" title="Infinite Loops"></a>Infinite Loops</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    command = input(<span class="string">"&gt;"</span>)</span><br><span class="line">    print(<span class="string">"ECHO"</span>, command)</span><br><span class="line">    <span class="keyword">if</span> command.lower() == <span class="string">"quit"</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="Exercise"><a href="#Exercise" class="headerlink" title="Exercise"></a>Exercise</h1><p>编写一段code，输出1~10之间（不含10）的偶数，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line">We have <span class="number">4</span> even numbers</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Comparison-Operators&quot;&gt;&lt;a href=&quot;#Comparison-O
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(2)--基本类型</title>
    <link href="http://yoursite.com/2021/05/06/20210506_Python002/"/>
    <id>http://yoursite.com/2021/05/06/20210506_Python002/</id>
    <published>2021-05-06T06:25:09.000Z</published>
    <updated>2021-05-06T08:02:40.964Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Primitive-Types"><a href="#Primitive-Types" class="headerlink" title="Primitive Types"></a>Primitive Types</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">students_count = <span class="number">1000</span></span><br><span class="line">rating = <span class="number">4.99</span></span><br><span class="line">is_published = <span class="literal">False</span>    <span class="comment"># case sensitive (区分大小写)</span></span><br><span class="line">course_name = <span class="string">"Python Programming"</span></span><br></pre></td></tr></table></figure><h1 id="String"><a href="#String" class="headerlink" title="String"></a>String</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">course_name = <span class="string">"Python Programming"</span></span><br><span class="line">message = <span class="string">"""</span></span><br><span class="line"><span class="string">Hi John</span></span><br><span class="line"><span class="string">This is Stone from China</span></span><br><span class="line"><span class="string">blablabla</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">course_name = <span class="string">"Python Programming"</span></span><br><span class="line">print(len(course_name))<span class="comment"># 18</span></span><br><span class="line">print(course_name[<span class="number">0</span>])<span class="comment"># P</span></span><br><span class="line">print(course_name[<span class="number">-1</span>])<span class="comment"># g</span></span><br><span class="line">print(course_name[<span class="number">0</span>:<span class="number">3</span>])<span class="comment"># Pyt</span></span><br><span class="line">print(course_name[<span class="number">0</span>:])<span class="comment"># Python Programming</span></span><br><span class="line">print(course_name[:<span class="number">3</span>])<span class="comment"># Pyt</span></span><br><span class="line">print(course_name[:])<span class="comment"># Python Programming</span></span><br></pre></td></tr></table></figure><h2 id="Escape-Sequences"><a href="#Escape-Sequences" class="headerlink" title="Escape Sequences"></a>Escape Sequences</h2><p>转义字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">course_name = <span class="string">"Python \"Programming"</span></span><br><span class="line">print(course_name) <span class="comment"># Python "Programming</span></span><br><span class="line"><span class="comment"># \"    \'   \\   \n</span></span><br></pre></td></tr></table></figure><h2 id="Formatted-Strings"><a href="#Formatted-Strings" class="headerlink" title="Formatted Strings"></a>Formatted Strings</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">first = <span class="string">"Stone"</span></span><br><span class="line">last = <span class="string">"Purple"</span></span><br><span class="line">full = <span class="string">f"<span class="subst">&#123;first&#125;</span> <span class="subst">&#123;last&#125;</span>"</span></span><br><span class="line">print(full)<span class="comment"># Stone Purple</span></span><br><span class="line">print(<span class="string">f"<span class="subst">&#123;len(first)&#125;</span> <span class="subst">&#123;<span class="number">2</span> + <span class="number">2</span>&#125;</span>"</span>)<span class="comment"># 5 4</span></span><br></pre></td></tr></table></figure><h2 id="String-Methods"><a href="#String-Methods" class="headerlink" title="String Methods"></a>String Methods</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">course = <span class="string">"  Python Programming"</span></span><br><span class="line">print(course.upper())</span><br><span class="line">print(course.lower())</span><br><span class="line">print(course.title())</span><br><span class="line">print(course.strip())  <span class="comment"># lstrip, rstrip</span></span><br><span class="line">print(course.find(<span class="string">"Pro"</span>))</span><br><span class="line">print(course.replace(<span class="string">"P"</span>, <span class="string">"J"</span>))</span><br><span class="line">print(<span class="string">"Pro"</span> <span class="keyword">in</span> course)</span><br><span class="line">print(<span class="string">"swift"</span> <span class="keyword">not</span> <span class="keyword">in</span> course)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  PYTHON PROGRAMMING</span><br><span class="line">  python programming</span><br><span class="line">  Python Programming</span><br><span class="line">Python Programming</span><br><span class="line"><span class="number">9</span></span><br><span class="line">  Jython Jrogramming</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h1 id="Numbers"><a href="#Numbers" class="headerlink" title="Numbers"></a>Numbers</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">x = <span class="number">1.1</span></span><br><span class="line">x = <span class="number">1</span> + <span class="number">2j</span>  <span class="comment"># complex number</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># + - * / % // **</span></span><br><span class="line">print(<span class="number">10</span> / <span class="number">3</span>)   <span class="comment"># 3.3333333333333335</span></span><br><span class="line">print(<span class="number">10</span> // <span class="number">3</span>)<span class="comment"># 3</span></span><br><span class="line">print(<span class="number">10</span> ** <span class="number">3</span>)<span class="comment"># 1000</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">10</span></span><br><span class="line">x = x + <span class="number">3</span></span><br><span class="line">x += <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="Working-with-Numbers"><a href="#Working-with-Numbers" class="headerlink" title="Working with Numbers"></a>Working with Numbers</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">print(round(<span class="number">2.9</span>))<span class="comment"># 3</span></span><br><span class="line">print(abs(<span class="number">-2.9</span>))<span class="comment"># 2.9</span></span><br><span class="line"></span><br><span class="line">print(math.ceil(<span class="number">2.2</span>))<span class="comment"># 3</span></span><br></pre></td></tr></table></figure><h2 id="Type-Conversion"><a href="#Type-Conversion" class="headerlink" title="Type Conversion"></a>Type Conversion</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = input(<span class="string">"x: "</span>)</span><br><span class="line">print(type(x))</span><br><span class="line">y = int(x) + <span class="number">1</span><span class="comment"># type conversion</span></span><br><span class="line">print(<span class="string">f"x: <span class="subst">&#123;x&#125;</span>, y: <span class="subst">&#123;y&#125;</span>"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x: <span class="number">2</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line"><span class="class"><span class="title">x</span>:</span> <span class="number">2</span>, y: <span class="number">3</span></span><br></pre></td></tr></table></figure><p>对于bool(x)，为 False 的情况<strong>只有</strong>：“”，0，None</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(bool(<span class="string">""</span>))<span class="comment"># False</span></span><br></pre></td></tr></table></figure><h1 id="Quiz"><a href="#Quiz" class="headerlink" title="Quiz"></a>Quiz</h1><p>👉 What are the primitive types in Python?</p><p>👉 What are the results?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fruit = <span class="string">"Apple"</span></span><br><span class="line">print(fruit[<span class="number">1</span>])</span><br><span class="line">print(fruit[<span class="number">1</span>:<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><p>👉 What are the results?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">10</span> % <span class="number">3</span>)</span><br><span class="line">print(bool(<span class="string">"False"</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Primitive-Types&quot;&gt;&lt;a href=&quot;#Primitive-Types&quot; 
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Python课程笔记(1)--VSCode的Python扩展使用</title>
    <link href="http://yoursite.com/2021/05/06/20210506_Python001/"/>
    <id>http://yoursite.com/2021/05/06/20210506_Python001/</id>
    <published>2021-05-06T04:50:09.000Z</published>
    <updated>2021-05-06T06:25:57.984Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><p>使用<strong>VSCode</strong>：用ctrl+`调出terminal</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"*"</span> * <span class="number">10</span>) <span class="comment"># print ********** (10 times) on the terminal</span></span><br></pre></td></tr></table></figure><h1 id="Python-Extension"><a href="#Python-Extension" class="headerlink" title="Python Extension"></a>Python Extension</h1><p>在VSCode下载python扩展</p><p>👉 Linting: finding potential errors in our code</p><p>👉 Debugging</p><p>👉 Autocompletion: help us write code faster</p><p>👉 Code Formatting</p><p>👉 Unit Testing</p><p>👉 Code Snippets: reusable code blocks</p><h2 id="Linting"><a href="#Linting" class="headerlink" title="Linting"></a>Linting</h2><p>下载pylint，显示错误提示</p><p>ctrl+shift+M：调出problem显示框，可以显示所有错误处</p><p>ctrl+shift+P：搜索</p><h2 id="Formatting-Code"><a href="#Formatting-Code" class="headerlink" title="Formatting Code"></a>Formatting Code</h2><p>Python Enhancement Proposals (<strong>PEPs</strong>)</p><p><a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">PEP 8</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Example</span></span><br><span class="line">x=<span class="number">1</span> <span class="comment">#ugly</span></span><br><span class="line">x = <span class="number">1</span><span class="comment">#PEP 8 suggests.</span></span><br></pre></td></tr></table></figure><p>ctrl+shift+P 搜索format，选择 format document，提示下载，就下载</p><p>然后在File &gt; Preference &gt; Setting 搜索 formatOnSave, 勾选。</p><p><img src="/images/Python/001.png" alt="001"></p><p>这样在save python文件的时候，就自动reformat了。</p><h2 id="Running-Python-Code"><a href="#Running-Python-Code" class="headerlink" title="Running Python Code"></a>Running Python Code</h2><p>下载code runner extension, ctrl+alt+n 直接运行</p><h1 id="Python-Implementation"><a href="#Python-Implementation" class="headerlink" title="Python Implementation"></a>Python Implementation</h1><p>Python指一种编程语言，但是python的实现是一个program</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CPython C 实现</span><br><span class="line">Jython Java 实现</span><br><span class="line">IronPython C# 实现</span><br><span class="line">PyPy Subset of Python</span><br></pre></td></tr></table></figure><p>比如你想在 python 中加一些 Java 代码，最好用 Jython 而不是 CPython</p><h2 id="How-Python-Code-Is-Executed"><a href="#How-Python-Code-Is-Executed" class="headerlink" title="How Python Code Is Executed"></a>How Python Code Is Executed</h2><p>C → C Compiler → Machine Code → Processor</p><p>Machine Code 对 Processor 特定，windows 机器无法识别 Mac的 machine code.</p><p>Java 则可以在不同的 platform 运行相同的code：</p><p>Java → Compiler → Java Bytecode → Java Virtual Machine → Machine Code</p><p>比如 Windows JVM → Windows Machine Code</p><p>Python 采用了相同的方法：</p><p>Python→ CPython → Python Bytecode → Python Virtual Machine → Machine Code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CPython → Python Bytecode</span><br><span class="line">   &#x2F;</span><br><span class="line">Python </span><br><span class="line">   \</span><br><span class="line">Jython →  Java Bytecode</span><br></pre></td></tr></table></figure><p>所以用 Jython 可以在 python code 中植入一些 Java code.</p><h1 id="Quiz"><a href="#Quiz" class="headerlink" title="Quiz"></a>Quiz</h1><p>👉 What is an expression?</p><p>👉 What is an syntax error?</p><p>👉 What does a linter do?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;strong&gt;VSCode&lt;/strong&gt;：用ctrl+`调出terminal&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="job notes-python" scheme="http://yoursite.com/tags/job-notes-python/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Git课程笔记(6)--Rewriting History</title>
    <link href="http://yoursite.com/2021/04/29/20210429_Git006/"/>
    <id>http://yoursite.com/2021/04/29/20210429_Git006/</id>
    <published>2021-04-29T13:50:09.000Z</published>
    <updated>2021-04-30T09:33:59.740Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Why-Rewrite-History"><a href="#Why-Rewrite-History" class="headerlink" title="Why Rewrite History?"></a>Why Rewrite History?</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------ Bad History ------</span><br><span class="line">👉 Poor commit messages</span><br><span class="line">👉 Large commits</span><br><span class="line">👉 Small commits</span><br></pre></td></tr></table></figure><p>我们想要 clean history， 知道我们改了啥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">------------- Tools -------------</span><br><span class="line">👉 Squash small, related commits</span><br><span class="line">👉 Split large commits</span><br><span class="line">👉 Reword commit messages</span><br><span class="line">👉 Drop unwanted commits</span><br><span class="line">👉 Modify commits</span><br></pre></td></tr></table></figure><h1 id="The-Golden-Rule-of-Rewriting-History"><a href="#The-Golden-Rule-of-Rewriting-History" class="headerlink" title="The Golden Rule of Rewriting History"></a>The Golden Rule of Rewriting History</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DON&#39;T REWRITE PUBLIC HISTORY!</span><br></pre></td></tr></table></figure><h1 id="Example-of-a-Bad-History"><a href="#Example-of-a-Bad-History" class="headerlink" title="Example of a Bad History"></a>Example of a Bad History</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 475ea30 (HEAD -&gt; master) .</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">17de14d 应该是Render restaurants on the map.(少了一个on)</span><br><span class="line">127cf78 Fix a typo是一个noise of history，应该合到17de14d去</span><br><span class="line">24f3009 也应该合到17de14d去，形成一个单一逻辑的commit</span><br><span class="line">175d394 应该在17de14d之前commit，没有reference怎么使用这个map？</span><br><span class="line">db94b15 noise of history，扔掉或者更改提交信息</span><br><span class="line">b0201fc 应该分成两个commit</span><br><span class="line">688a4d0 同db94b15</span><br><span class="line">475ea30 不知道干了啥，扔掉吧</span><br></pre></td></tr></table></figure><h1 id="Undoing-Commits"><a href="#Undoing-Commits" class="headerlink" title="Undoing Commits"></a>Undoing Commits</h1><p>soft：相当于回到git commit之前的状态→Removes the commit only</p><p><img src="/images/Git/6_1.png" alt="6_1" style="zoom:50%;"></p><p>mixed：相当于回到git add之前的状态，即还没放进staging area→Unstages files</p><p><img src="/images/Git/6_2.png" alt="6_2" style="zoom: 50%;"></p><p>hard：最初的起点，啥都还没干→Discards local changes</p><p><img src="/images/Git/6_3.png" alt="6_3" style="zoom:50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reset --hard HEAD~1</span><br><span class="line">HEAD is now at 688a4d0 WIP</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 688a4d0 (HEAD -&gt; master) WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>好的，最近的commit就扔掉了，仿佛没有存在过。</p><h1 id="Reverting-Commits"><a href="#Reverting-Commits" class="headerlink" title="Reverting Commits"></a>Reverting Commits</h1><p>如果commit已经share with others，就不能直接reset了，而是用revert，保留log中的记录。</p><p>将最近的三条commit撤销（反做），其中 HEAD~3 指的是175d394，是不含在内的（是不会被反做的）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git revert HEAD~3..HEAD</span><br><span class="line">[master 12ad6f2] Revert <span class="string">"WIP"</span></span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line">[master 83527ab] Revert <span class="string">"Update terms of service and Google Map SDK version."</span></span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line">[master 667bde8] Revert <span class="string">"WIP"</span></span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br></pre></td></tr></table></figure><p>但是这就有三条commit history了，一点都不clean：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 667bde8 (HEAD -&gt; master) Revert <span class="string">"WIP"</span></span><br><span class="line">* 83527ab Revert <span class="string">"Update terms of service and Google Map SDK version."</span></span><br><span class="line">* 12ad6f2 Revert <span class="string">"WIP"</span></span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>所以可以不commit，反做的记录都在staging area里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git revert --no-commit HEAD~3..</span><br><span class="line"></span><br><span class="line">(master|REVERTING)$ git status -s</span><br><span class="line">M  file1.txt</span><br></pre></td></tr></table></figure><p>用—continue来继续，并手动将commit message改为”Revert bad code.“：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master|REVERTING)$ git revert --<span class="built_in">continue</span></span><br><span class="line">[master 5322dae] Revert bad code.</span><br><span class="line"> 1 file changed, 3 deletions(-)</span><br></pre></td></tr></table></figure><p>这样就只有一条history啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5322dae (HEAD -&gt; master) Revert bad code.</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><h1 id="Recovering-Lost-Commits"><a href="#Recovering-Lost-Commits" class="headerlink" title="Recovering Lost Commits"></a>Recovering Lost Commits</h1><p>不小心reset了HEAD：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reset --hard HEAD~6</span><br><span class="line">HEAD is now at 127cf78 Fix a typo</span><br></pre></td></tr></table></figure><p>log都没了咋办：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 127cf78 (HEAD -&gt; master) Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>其实人家Git给你存得好好的呢：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reflog</span><br><span class="line">127cf78 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to HEAD~6</span><br><span class="line">5322dae HEAD@&#123;1&#125;: commit: Revert bad code.</span><br><span class="line">688a4d0 HEAD@&#123;2&#125;: reset: moving to HEAD~3</span><br><span class="line">667bde8 HEAD@&#123;3&#125;: revert: Revert <span class="string">"WIP"</span></span><br><span class="line">83527ab HEAD@&#123;4&#125;: revert: Revert <span class="string">"Update terms of service and Google Map SDK version."</span></span><br><span class="line">12ad6f2 HEAD@&#123;5&#125;: revert: Revert <span class="string">"WIP"</span></span><br><span class="line">688a4d0 HEAD@&#123;6&#125;: reset: moving to 688a4d0</span><br><span class="line">fd52d6e HEAD@&#123;7&#125;: revert: Revert <span class="string">"Update terms of service and Google Map SDK version."</span></span><br><span class="line">f2139a9 HEAD@&#123;8&#125;: revert: Revert <span class="string">"WIP"</span></span><br><span class="line">688a4d0 HEAD@&#123;9&#125;: reset: moving to HEAD~1</span><br><span class="line">475ea30 HEAD@&#123;10&#125;: commit: .</span><br><span class="line">688a4d0 HEAD@&#123;11&#125;: commit: WIP</span><br><span class="line">b0201fc HEAD@&#123;12&#125;: commit: Update terms of service and Google Map SDK version.</span><br><span class="line">db94b15 HEAD@&#123;13&#125;: commit: WIP</span><br><span class="line">175d394 HEAD@&#123;14&#125;: commit: Add a reference to Google Map SDK.</span><br><span class="line">24f3009 HEAD@&#123;15&#125;: commit: Change the color of restaurant icons.</span><br><span class="line">127cf78 (HEAD -&gt; master) HEAD@&#123;16&#125;: commit: Fix a typo</span><br><span class="line">17de14d HEAD@&#123;17&#125;: commit: Render restaurants the map.</span><br><span class="line">00315a1 HEAD@&#123;18&#125;: commit (initial): Initial commit</span><br></pre></td></tr></table></figure><p>用 commit ID 或者 entry ID 都可以恢复（此处用entry ID）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reset --hard HEAD@&#123;1&#125;</span><br><span class="line">HEAD is now at 5322dae Revert bad code.</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5322dae (HEAD -&gt; master) Revert bad code.</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>假如有个Pointer是feature：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog show feature</span><br></pre></td></tr></table></figure><p>可以看到这个pointer的所有历史。</p><h1 id="Amending-Commit"><a href="#Amending-Commit" class="headerlink" title="Amending Commit"></a>Amending Commit</h1><h2 id="Amending-the-Last-Commit"><a href="#Amending-the-Last-Commit" class="headerlink" title="Amending the Last Commit"></a>Amending the Last Commit</h2><p>假如现在有个 commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ <span class="built_in">echo</span> cafes &gt;&gt; file1.txt</span><br><span class="line"></span><br><span class="line">(master)$ git commit -am <span class="string">"Render cafes on the map"</span></span><br><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> file1.txt.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory</span><br><span class="line">[master b4c943f] Render cafes on the map</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>交了之后发现我们不是想写 cafes，而是想写 blue cafes 啊，但是这是个小错，能不能小修补？当然可以。</p><p>先打开 file1.txt 编辑，然后存入 staging area，最后使用 —amend 选项 commit，commit message 不变：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ code file1.txt</span><br><span class="line"></span><br><span class="line">(master)$ git add .</span><br><span class="line"></span><br><span class="line">(master)$ git commit --amend</span><br><span class="line">[master a60e09a] Render cafes on the map</span><br><span class="line"> Date: Fri Apr 30 14:38:19 2021 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>可以看到还是这条commit，但是file1.txt里的内容已经改过来了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* a60e09a (HEAD -&gt; master) Render cafes on the map</span><br><span class="line">* 5322dae Revert bad code.</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git show HEAD</span><br><span class="line">commit a60e09a0bff95afbb3c83ca20591cec3c9afe638 (HEAD -&gt; master)</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 30 14:38:19 2021 +0800</span><br><span class="line"></span><br><span class="line">    Render cafes on the map</span><br><span class="line"></span><br><span class="line">diff --git a/file1.txt b/file1.txt</span><br><span class="line">index cb224a0..c44f4be 100644</span><br><span class="line">--- a/file1.txt</span><br><span class="line">+++ b/file1.txt</span><br><span class="line">@@ -3,3 +3,4 @@ restaurants</span><br><span class="line"> fix a typo</span><br><span class="line"> color-red</span><br><span class="line"> ref-of-sdk</span><br><span class="line">+blue cafes//-------看这里-----------</span><br></pre></td></tr></table></figure><p>假如是想增加一个新文件，还是一样的操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(master)$ <span class="built_in">echo</span> hello &gt; file2.txt</span><br><span class="line"></span><br><span class="line">(master)$ git add .</span><br><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> file2.txt.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory</span><br><span class="line"></span><br><span class="line">(master)$ git commit --amend</span><br><span class="line">[master 5bbe8a7] Render cafes on the map</span><br><span class="line"> Date: Fri Apr 30 14:38:19 2021 +0800</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 file2.txt</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5bbe8a7 (HEAD -&gt; master) Render cafes on the map</span><br><span class="line">* 5322dae Revert bad code.</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>看到在HEAD指向的commit里，不仅有file1.txt的内容修改，还能看到新增了一个file2.txt的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git show HEAD</span><br><span class="line">commit 5bbe8a7f4cabf9011ff28c32e97e0c4a79f10f8f (HEAD -&gt; master)</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 30 14:38:19 2021 +0800</span><br><span class="line"></span><br><span class="line">    Render cafes on the map</span><br><span class="line"></span><br><span class="line">diff --git a/file1.txt b/file1.txt</span><br><span class="line">index cb224a0..c44f4be 100644</span><br><span class="line">--- a/file1.txt</span><br><span class="line">+++ b/file1.txt</span><br><span class="line">@@ -3,3 +3,4 @@ restaurants</span><br><span class="line"> fix a typo</span><br><span class="line"> color-red</span><br><span class="line"> ref-of-sdk</span><br><span class="line">+blue cafes</span><br><span class="line">diff --git a/file2.txt b/file2.txt</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..ce01362</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/file2.txt</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+hello</span><br></pre></td></tr></table></figure><p>如果这个file2.txt是不小心加上去的，其实不要，就先回到前一个状态，此时修改在本地目录，但不在staging area（用git status查看是红色的）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reset --mixed HEAD~1</span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M       file1.txt</span><br><span class="line"></span><br><span class="line">(master)$ git status -s</span><br><span class="line"> M file1.txt</span><br><span class="line">?? file2.txt</span><br></pre></td></tr></table></figure><p>删去untracked file，再 add 到 staging area，最后commit就行了。此时commit的就只有file1.txt的内容修改，而没有新增file2.txt：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git clean -fd</span><br><span class="line">Removing file2.txt</span><br><span class="line"></span><br><span class="line">(master)$ git add .</span><br><span class="line"></span><br><span class="line">(master)$ git commit -m <span class="string">"Render cafes on the map."</span></span><br><span class="line">[master e47642a] Render cafes on the map.</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* e47642a (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 5322dae Revert bad code.</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git show HEAD</span><br><span class="line">commit e47642a4cd59cfec5697d82acbbfa7372547823e (HEAD -&gt; master)</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 30 14:42:11 2021 +0800</span><br><span class="line"></span><br><span class="line">    Render cafes on the map.</span><br><span class="line"></span><br><span class="line">diff --git a/file1.txt b/file1.txt</span><br><span class="line">index cb224a0..c44f4be 100644</span><br><span class="line">--- a/file1.txt</span><br><span class="line">+++ b/file1.txt</span><br><span class="line">@@ -3,3 +3,4 @@ restaurants</span><br><span class="line"> fix a typo</span><br><span class="line"> color-red</span><br><span class="line"> ref-of-sdk</span><br><span class="line">+blue cafes</span><br></pre></td></tr></table></figure><h2 id="Amending-an-Ealier-Commit"><a href="#Amending-an-Ealier-Commit" class="headerlink" title="Amending an Ealier Commit"></a>Amending an Ealier Commit</h2><p>需要rebase到想要修改的commit。</p><hr><p><strong>REBASING REWRITES HISTORY.</strong></p><p>原始的history：</p><p><img src="/images/Git/6_5.png" alt="6_5"></p><p>假如现在想修改commit B，就变成B*了。而history是不可变的，commit C不能以commit B*为parent commit，只能创建一个与C一摸一样的commit C*，然后以commit B*为parent commit，commit D同理。所以，虽然只有B要改，但实际上C和D都要重新创建。</p><p><img src="/images/Git/6_6.png" alt="6_6"></p><hr><p>我们现在想修改commit ID为 175d394 的commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* e47642a (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 5322dae Revert bad code.</span><br><span class="line">* 688a4d0 WIP</span><br><span class="line">* b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">* db94b15 WIP</span><br><span class="line">* 175d394 Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git show 175d394</span><br><span class="line">commit 175d3944118590daf26ba25c46da4061c0ad641b</span><br><span class="line">Author: Stone &lt;1140525895@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 30 10:01:56 2021 +0800</span><br><span class="line"></span><br><span class="line">    Add a reference to Google Map SDK.</span><br><span class="line"></span><br><span class="line">diff --git a/file1.txt b/file1.txt</span><br><span class="line">index 1cd7c63..cb224a0 100644</span><br><span class="line">--- a/file1.txt</span><br><span class="line">+++ b/file1.txt</span><br><span class="line">@@ -2,3 +2,4 @@ hello</span><br><span class="line"> restaurants</span><br><span class="line"> fix a typo</span><br><span class="line"> color-red</span><br><span class="line">+ref-of-sdk//----------看这里--------------</span><br></pre></td></tr></table></figure><p>首先要rebase到它的上一个commit，即ID为24f3009的commit，在弹出的窗口改pick为edit：</p><p><img src="/images/Git/6_4.png" alt="6_4"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git rebase -i 24f3009</span><br><span class="line">Stopped at 175d394...  Add a reference to Google Map SDK.</span><br><span class="line">You can amend the commit now, with</span><br><span class="line"></span><br><span class="line">  git commit --amend</span><br><span class="line"></span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line"></span><br><span class="line">  git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure><p>所以会需要你edit完这个commit用—amend修正了再continue。</p><p>修改内容是增加一个文件license.txt：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(master|REBASE 1/6)$ <span class="built_in">echo</span> license &gt; license.txt</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/6)$ git add .</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/6)$ git commit --amend</span><br><span class="line">[detached HEAD 0eb205c] Add a reference to Google Map SDK.</span><br><span class="line"> Date: Fri Apr 30 10:01:56 2021 +0800</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 license.txt</span><br></pre></td></tr></table></figure><p>可以看到分了支了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(master|REBASE 1/6)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 0eb205c (HEAD) Add a reference to Google Map SDK.</span><br><span class="line">| * e47642a (master) Render cafes on the map.</span><br><span class="line">| * 5322dae Revert bad code.</span><br><span class="line">| * 688a4d0 WIP</span><br><span class="line">| * b0201fc Update terms of service and Google Map SDK version.</span><br><span class="line">| * db94b15 WIP</span><br><span class="line">| * 175d394 Add a reference to Google Map SDK.</span><br><span class="line">|/</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>继续rebase，把后面的commit调整完成（简单的pick），可以看到从修改的那条commit开始，ID全变了，尽管操作为pick的commit内容未变（其实是重新创建了这些commit）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(master|REBASE 1/6)$ git rebase --<span class="built_in">continue</span></span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 0d35c4a (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 6f2b578 Revert bad code.</span><br><span class="line">* fce1354 WIP</span><br><span class="line">* a3f2e62 Update terms of service and Google Map SDK version.</span><br><span class="line">* e67e73d WIP</span><br><span class="line">* 0eb205c Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>检查一下，确实修改成功了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git show 0eb205c</span><br><span class="line">commit 0eb205cde3b4c6d852681d59d2821914f3a37a69</span><br><span class="line">Author: Stone &lt;1140525895@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 30 10:01:56 2021 +0800</span><br><span class="line"></span><br><span class="line">    Add a reference to Google Map SDK.</span><br><span class="line"></span><br><span class="line">diff --git a/file1.txt b/file1.txt</span><br><span class="line">index 1cd7c63..cb224a0 100644</span><br><span class="line">--- a/file1.txt</span><br><span class="line">+++ b/file1.txt</span><br><span class="line">@@ -2,3 +2,4 @@ hello</span><br><span class="line"> restaurants</span><br><span class="line"> fix a typo</span><br><span class="line"> color-red</span><br><span class="line">+ref-of-sdk</span><br><span class="line">diff --git a/license.txt b/license.txt      //----新增license.txt---</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..8da8489</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/license.txt</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+license</span><br></pre></td></tr></table></figure><h1 id="Dropping-a-Commit"><a href="#Dropping-a-Commit" class="headerlink" title="Dropping a Commit"></a>Dropping a Commit</h1><p>比如我们想删掉 6f2b578，fce1354 和 e67e73d 的commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 0d35c4a (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 6f2b578 Revert bad code.     //-------------</span><br><span class="line">* fce1354 WIP   //-------------</span><br><span class="line">* a3f2e62 Update terms of service and Google Map SDK version.</span><br><span class="line">* e67e73d WIP   //-------------</span><br><span class="line">* 0eb205c Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>rebase到0eb205c，在弹出的窗口直接删掉第1，3，4行就行了：</p><p><img src="/images/Git/6_7.png" alt="6_7"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git rebase -i 0eb205c</span><br><span class="line">error: could not apply a3f2e62... Update terms of service and Google Map SDK version.</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply a3f2e62... Update terms of service and Google Map SDK version.</span><br><span class="line">Auto-merging file1.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> file1.txt</span><br></pre></td></tr></table></figure><p>有冲突就解决冲突：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">(master|REBASE 1/2)$ git mergetool</span><br><span class="line">Merging:</span><br><span class="line">file1.txt</span><br><span class="line"></span><br><span class="line">Normal merge conflict <span class="keyword">for</span> <span class="string">'file1.txt'</span>:</span><br><span class="line">  &#123;<span class="built_in">local</span>&#125;: modified file</span><br><span class="line">  &#123;remote&#125;: modified file</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git rebase --<span class="built_in">continue</span></span><br><span class="line">[detached HEAD b153f53] Update terms of service and Google Map SDK version.</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">error: could not apply 0d35c4a... Render cafes on the map.</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply 0d35c4a... Render cafes on the map.</span><br><span class="line">Auto-merging file1.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> file1.txt</span><br><span class="line"></span><br><span class="line">(master|REBASE 2/2)$ git mergetool</span><br><span class="line">Merging:</span><br><span class="line">file1.txt</span><br><span class="line"></span><br><span class="line">Normal merge conflict <span class="keyword">for</span> <span class="string">'file1.txt'</span>:</span><br><span class="line">  &#123;<span class="built_in">local</span>&#125;: modified file</span><br><span class="line">  &#123;remote&#125;: modified file</span><br></pre></td></tr></table></figure><p>好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(master|REBASE 2/2)$ git rebase --<span class="built_in">continue</span></span><br><span class="line">[detached HEAD 3b55d73] Render cafes on the map.</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3b55d73 (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* b153f53 Update terms of service and Google Map SDK version.</span><br><span class="line">* 0eb205c Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><h1 id="Rewording-Commit-Messages"><a href="#Rewording-Commit-Messages" class="headerlink" title="Rewording Commit Messages"></a>Rewording Commit Messages</h1><p>比如要修改17de14d和b153f53的commit message：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3b55d73 (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* b153f53 Update terms of service and Google Map SDK version.</span><br><span class="line">* 0eb205c Add a reference to Google Map SDK.</span><br><span class="line">* 24f3009 Change the color of restaurant icons.</span><br><span class="line">* 127cf78 Fix a typo</span><br><span class="line">* 17de14d Render restaurants the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>首先rebase到17de14d的parent commit（用^表示），在弹出的窗口将对应的这两条的command由pick改为reword（此处不展示），关闭此窗口。然后又有两次弹窗，直接修改message即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git rebase -i 17de14d^</span><br><span class="line">[detached HEAD 38b49e0] Render restaurants on the map.</span><br><span class="line"> Date: Fri Apr 30 09:59:03 2021 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">[detached HEAD dd32e6e] Add a reference to Google Map SDK v1.0.0.</span><br><span class="line"> Date: Fri Apr 30 10:01:56 2021 +0800</span><br><span class="line"> 2 files changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 license.txt</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br></pre></td></tr></table></figure><p>看看，改好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 526429c (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* e3efdfd Update terms of service and Google Map SDK version.</span><br><span class="line">* dd32e6e Add a reference to Google Map SDK v1.0.0.   //-----v1.0.0------</span><br><span class="line">* 1ca0331 Change the color of restaurant icons.</span><br><span class="line">* cacde15 Fix a typo</span><br><span class="line">* 38b49e0 Render restaurants on the map.  //------on--------</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>依然，00315a1之后的全部commit，ID都变了。</p><h1 id="Re-ordering-Commits"><a href="#Re-ordering-Commits" class="headerlink" title="Re-ordering Commits"></a>Re-ordering Commits</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 2879b9f (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 95cd9e7 Update terms of service and Google Map SDK version.</span><br><span class="line">* 398859b Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 1ca0331 Change the color of restaurant icons.</span><br><span class="line">* cacde15 Fix a typo</span><br><span class="line">* 38b49e0 Render restaurants on the map.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>要将398859b调到38b49e0前面去：</p><p>git rebase后弹出的窗口将398859b对应行移到最上边（选中该行，Atl+↑ 调整）：</p><p><img src="/images/Git/6_8.png" alt="6_8"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git rebase -i 00315a1</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3a8e00e (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 7a97000 Update terms of service and Google Map SDK version.</span><br><span class="line">* 031bd2e Change the color of restaurant icons.</span><br><span class="line">* f8bce71 Fix a typo</span><br><span class="line">* 8eb9241 Render restaurants on the map.//---------------</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.//---------------</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><h1 id="Squashing-Commits"><a href="#Squashing-Commits" class="headerlink" title="Squashing Commits"></a>Squashing Commits</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3a8e00e (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 7a97000 Update terms of service and Google Map SDK version.</span><br><span class="line">* 031bd2e Change the color of restaurant icons.</span><br><span class="line">* f8bce71 Fix a typo</span><br><span class="line">* 8eb9241 Render restaurants on the map.</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>希望将8eb9241，f8bce71，031bd2e合并成一条commit。</p><h2 id="Method-1-squash"><a href="#Method-1-squash" class="headerlink" title="Method 1: squash"></a>Method 1: squash</h2><p>git rebase之后弹出的窗口改pick为squash表示该条commit与前一条commit合并：</p><p><img src="/images/Git/6_9.png" alt="6_9"></p><p>关闭该窗口，之后弹出的窗口，删除f8bce71，031bd2e的commit message，只留下8eb9241的commit message。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git rebase -i 2e926d2</span><br><span class="line">[detached HEAD dffab6e] Render restaurants on the map.</span><br><span class="line"> Date: Fri Apr 30 09:59:03 2021 +0800</span><br><span class="line"> 1 file changed, 3 insertions(+)</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 42732b9 (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 56eb52d Update terms of service and Google Map SDK version.</span><br><span class="line">* dffab6e Render restaurants on the map.</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>Nice.</p><h2 id="Method-2-fixup"><a href="#Method-2-fixup" class="headerlink" title="Method 2: fixup"></a>Method 2: fixup</h2><p>git rebase -i 弹出窗口，用fixup，就不需要手动删改commit message（Git不会pick用了fixup的那一条的message）。而是直接就用8eb9241的commit message：</p><p><img src="/images/Git/6_10.png" alt="6_10"></p><p>log同上。</p><h1 id="Splitting-a-Commit"><a href="#Splitting-a-Commit" class="headerlink" title="Splitting a Commit"></a>Splitting a Commit</h1><p>将549d310拆成两个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* de27a35 (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* 549d310 Update terms of service and Google Map SDK version.</span><br><span class="line">* 8014c85 Render restaurants on the map.</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure><p>pick改为edit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git rebase -i 549d310^</span><br><span class="line">Stopped at 549d310...  Update terms of service and Google Map SDK version.</span><br><span class="line">You can amend the commit now, with</span><br><span class="line"></span><br><span class="line">  git commit --amend</span><br><span class="line"></span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line"></span><br><span class="line">  git rebase --<span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* de27a35 (master) Render cafes on the map.</span><br><span class="line">* 549d310 (HEAD) Update terms of service and Google Map SDK version.</span><br><span class="line">* 8014c85 Render restaurants on the map.</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 00315a1 Initial commit</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git reset HEAD^    //---default：mixed-------</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git status -s//------都是红色的状态-------</span><br><span class="line"> M file1.txt</span><br><span class="line">?? sdkversion.txt</span><br></pre></td></tr></table></figure><p>分两次提交两个不同的修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">(master|REBASE 1/2)$ git add file1.txt</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git commit -m <span class="string">"Add terms of service."</span></span><br><span class="line">[detached HEAD 1d17606] Add terms of service.</span><br><span class="line"> 1 file changed, 4 insertions(+)</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git add .</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git commit -m <span class="string">"Update Google Map SDK version."</span></span><br><span class="line">[detached HEAD 55d127c] Update Google Map SDK version.</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 sdkversion.txt</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* ed8737e (HEAD) Update Google Map SDK version.</span><br><span class="line">* 44220a0 Add terms of service.</span><br><span class="line">| * de27a35 (master) Render cafes on the map.</span><br><span class="line">| * 549d310 Update terms of service and Google Map SDK version.</span><br><span class="line">|/</span><br><span class="line">* 8014c85 Render restaurants on the map.</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 00315a1 Initial commit</span><br><span class="line"></span><br><span class="line">(master|REBASE 1/2)$ git rebase --<span class="built_in">continue</span></span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br></pre></td></tr></table></figure><p>整挺好：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* a6ea6fd (HEAD -&gt; master) Render cafes on the map.</span><br><span class="line">* ed8737e Update Google Map SDK version.   //---------------</span><br><span class="line">* 44220a0 Add terms of service.            //---------------</span><br><span class="line">* 8014c85 Render restaurants on the map.</span><br><span class="line">* 2e926d2 Add a reference to Google Map SDK v1.0.0.</span><br><span class="line">* 00315a1 Initial commit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Why-Rewrite-History&quot;&gt;&lt;a href=&quot;#Why-Rewrite-H
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="job notes-git" scheme="http://yoursite.com/tags/job-notes-git/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Git课程笔记(5)--Collaboration</title>
    <link href="http://yoursite.com/2021/04/27/20210427_Git005/"/>
    <id>http://yoursite.com/2021/04/27/20210427_Git005/</id>
    <published>2021-04-27T13:50:09.000Z</published>
    <updated>2021-05-09T08:54:44.637Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Workflows"><a href="#Workflows" class="headerlink" title="Workflows"></a>Workflows</h1><p>👉 Centralized: a single repository<br><strong>👉 Distributed：every developer has a repository √</strong></p><h2 id="Centralized-Workflow"><a href="#Centralized-Workflow" class="headerlink" title="Centralized Workflow"></a>Centralized Workflow</h2><p>平时与中央服务器交互，万一中央服务器瘫痪，各repository之间可以交互。</p><p><img src="/images/Git/5_01.png" alt="5_01" style="zoom: 33%;"></p><p><img src="/images/Git/5_02.png" alt="5_02" style="zoom: 33%;"></p><p>中央服务器放在哪？</p><p>👉 private server</p><p>👉 cloud, 如 GitHub，GitLab</p><p>具体场景：</p><ol><li>John 和 Amy 都将 repository 拷贝到本地</li></ol><p><img src="/images/Git/5_03.png" alt="5_03" style="zoom:50%;"></p><ol><li>John commit了一些内容，想 share 给 Amy，就从本地 repository 拷贝到中央 repository</li></ol><p><img src="/images/Git/5_04.png" alt="5_04" style="zoom:50%;"></p><ol><li>Amy 将这些 commit 从中央 repository pull 到本地</li></ol><p><img src="/images/Git/5_05.png" alt="5_05" style="zoom:50%;"></p><ol><li>如果和 Amy 自己的 commit 有 conflict，Amy 解决之后 push 到中央 repository</li></ol><p><img src="/images/Git/5_06.png" alt="5_06" style="zoom:50%;"></p><h2 id="Integration-Manager"><a href="#Integration-Manager" class="headerlink" title="Integration-Manager"></a>Integration-Manager</h2><p>多用于Open-source project。通常有 maintainer 管理 project repository，其他的 contributors 不能直接 commit 到 project repository。</p><ol><li>Fork  project repository 到自己的 repository，然后拷贝到本地</li></ol><p><img src="/images/Git/5_07.png" alt="5_07" style="zoom:50%;"></p><ol><li>Contributor 将自己的 commit push 到  repository</li></ol><p><img src="/images/Git/5_08.png" alt="5_08" style="zoom:50%;"></p><ol><li>Contributor 向 maintainer 发出 pull request，希望在 project repository commit 自己的贡献</li></ol><p><img src="/images/Git/5_09.png" alt="5_09" style="zoom:50%;"></p><ol><li>Maintainer 同意的话就从 contributor 的 repository pull 到自己的本地目录</li></ol><p><img src="/images/Git/5_10.png" alt="5_10" style="zoom:50%;"></p><ol><li>Maintainer review 过这些 commit 觉得没问题，就可以 push 到 project repository 了。</li></ol><p><img src="/images/Git/5_11.png" alt="5_11" style="zoom:50%;"></p><h1 id="Cloning-a-Repository"><a href="#Cloning-a-Repository" class="headerlink" title="Cloning a Repository"></a>Cloning a Repository</h1><p>拷贝远程仓库到本地，仓库目前只有一个commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/PurpleMStone/Mars.git MarsProject</span><br><span class="line">Cloning into <span class="string">'MarsProject'</span>...</span><br><span class="line">remote: Enumerating objects: 3, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Receiving objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> MarsProject/</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 7216ded (HEAD -&gt; master, origin/master, origin/HEAD) Initial commit</span><br></pre></td></tr></table></figure><p>origin 指代的是远程仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git remote -v</span><br><span class="line">origin  https:&#x2F;&#x2F;github.com&#x2F;PurpleMStone&#x2F;Mars.git (fetch)</span><br><span class="line">origin  https:&#x2F;&#x2F;github.com&#x2F;PurpleMStone&#x2F;Mars.git (push)</span><br></pre></td></tr></table></figure><h1 id="Fetching"><a href="#Fetching" class="headerlink" title="Fetching"></a>Fetching</h1><p><img src="/images/Git/5_12.png" alt="5_12" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 7216ded (HEAD -&gt; master, origin/master, origin/HEAD) Initial commit</span><br></pre></td></tr></table></figure><p>在 remote repository 进行修改（update README.md，增加了第二行）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Mars</span><br><span class="line">A new line of code</span><br></pre></td></tr></table></figure><p>用 git fetch 获取到本地，此时 origin/master 前进了，但是本地 master 还没动：</p><p><img src="/images/Git/5_13.png" alt="5_13" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git fetch</span><br><span class="line">remote: Enumerating objects: 5, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), 645 bytes | 1024 bytes/s, <span class="keyword">done</span>.</span><br><span class="line">From https://github.com/PurpleMStone/Mars</span><br><span class="line">   7216ded..e27337b  master     -&gt; origin/master</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* e27337b (origin/master, origin/HEAD) Update README.md</span><br><span class="line">* 7216ded (HEAD -&gt; master) Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git branch -vv</span><br><span class="line">* master 7216ded [origin/master: behind 1] Initial commit</span><br></pre></td></tr></table></figure><p>由于没有diverse branch， 直接让本地 master fast-forward merge origin/master 就行了：</p><p><img src="/images/Git/5_14.png" alt="5_14" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git merge origin/master</span><br><span class="line">Updating 7216ded..e27337b</span><br><span class="line">Fast-forward</span><br><span class="line"> README.md | 3 ++-</span><br><span class="line"> 1 file changed, 2 insertions(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* e27337b (HEAD -&gt; master, origin/master, origin/HEAD) Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git branch -vv</span><br><span class="line">* master e27337b [origin/master] Update README.md</span><br><span class="line"></span><br><span class="line">(master)$ cat README.md</span><br><span class="line"><span class="comment"># Mars</span></span><br><span class="line">A new line of code</span><br></pre></td></tr></table></figure><p>而如果有 diverse branch，可能 merge 的时候会有 conflict，解决了再 merge 就行了。 </p><h1 id="Pulling"><a href="#Pulling" class="headerlink" title="Pulling"></a>Pulling</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pull &#x3D; fetch + merge</span><br></pre></td></tr></table></figure><p>比如在本地有个commit B, 在 remote repository 有个 commit C：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(master)$ <span class="built_in">echo</span> hello &gt; file1.txt</span><br><span class="line"></span><br><span class="line">(master)$ git add .</span><br><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> file1.txt.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory</span><br><span class="line"></span><br><span class="line">(master)$ git commit -m <span class="string">"Add file1.txt"</span></span><br><span class="line">[master ce83c2f] Add file1.txt</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 file1.txt</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* ce83c2f (HEAD -&gt; master) Add file1.txt</span><br><span class="line">* e27337b (origin/master, origin/HEAD) Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br></pre></td></tr></table></figure><p>在 remote repository 将 README.md update 了两次（commit C ）。</p><p>现在可以用 git pull 获取 commit C 并进行 3-way merge:</p><p><img src="/images/Git/5_15.png" alt="5_15" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git pull</span><br><span class="line">remote: Enumerating objects: 8, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (8/8), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (4/4), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (6/6), 1.28 KiB | 1024 bytes/s, <span class="keyword">done</span>.</span><br><span class="line">From https://github.com/PurpleMStone/Mars</span><br><span class="line">   e27337b..4085604  master     -&gt; origin/master</span><br><span class="line">Merge made by the <span class="string">'recursive'</span> strategy.</span><br><span class="line"> README.md | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   b6e7d23 (HEAD -&gt; master) Merge branch <span class="string">'master'</span> of https://github.com/PurpleMStone/Mars</span><br><span class="line">|\</span><br><span class="line">| * 4085604 (origin/master, origin/HEAD) Update README.md</span><br><span class="line">| * 3e40ffc Update README.md</span><br><span class="line">* | ce83c2f Add file1.txt</span><br><span class="line">|/</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br></pre></td></tr></table></figure><p>也可以用 git pull —rebase 将 B rebase，然后就是 linear history 了：</p><p><img src="/images/Git/5_18.png" alt="5_18" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* ce83c2f (HEAD -&gt; master) Add file1.txt</span><br><span class="line">| * 4085604 (origin/master, origin/HEAD) Update README.md</span><br><span class="line">| * 3e40ffc Update README.md</span><br><span class="line">|/</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git pull --rebase</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* ec68ae1 (HEAD -&gt; master) Add file1.txt</span><br><span class="line">* 4085604 (origin/master, origin/HEAD) Update README.md</span><br><span class="line">* 3e40ffc Update README.md</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br></pre></td></tr></table></figure><h1 id="Pushing"><a href="#Pushing" class="headerlink" title="Pushing"></a>Pushing</h1><p>将本地的 commit push 到 remote repository，然后 remote repository 的 master 会 move forward，然后 origin/master 会 move forward.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git push</span><br></pre></td></tr></table></figure><p>有些情况，push 会被拒绝：</p><p>如想将C push 到 remote，但是此时别人push了个D到remote，Git为了防止你overwrite别人的work，就不让push：</p><p><img src="/images/Git/5_19.png" alt="5_19" style="zoom: 50%;"></p><p><img src="/images/Git/5_17.png" alt="5_17" style="zoom: 50%;"></p><p>如果用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -f</span><br></pre></td></tr></table></figure><p>remote就会丢掉D，然后让C push到remote, remote 的 master 指向C。（别用，谨慎）</p><p>好的做法是：用 git pull 在本地存下 D，然后用 3-way merge 或 rebase 的方法结合 local master 和 D，有冲突就解决冲突，然后再 git push 到 remote repository。这样，local 和remote 就一致了。 </p><p><img src="/images/Git/5_20.png" alt="5_20" style="zoom:50%;"></p><h1 id="Storing-Credentials"><a href="#Storing-Credentials" class="headerlink" title="Storing Credentials"></a>Storing Credentials</h1><p>windows 在 <a href="https://github.com/Microsoft/Git-Credential-Manager-for-Windows" target="_blank" rel="noopener">https://github.com/Microsoft/Git-Credential-Manager-for-Windows</a> 下载</p><p>不用每次 push 都登录一次。</p><h1 id="Sharing-Tags"><a href="#Sharing-Tags" class="headerlink" title="Sharing Tags"></a>Sharing Tags</h1><p>给最近的一次 commit 加tag，并且share 到 github 上去：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git tag v1.0</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 125409a (HEAD -&gt; master, tag: v1.0, origin/master, origin/HEAD) add file2.txt</span><br><span class="line">* ec68ae1 Add file1.txt</span><br><span class="line">* 4085604 Update README.md</span><br><span class="line">* 3e40ffc Update README.md</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br><span class="line"></span><br><span class="line">(master)$ git push origin v1.0</span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line"> * [new tag]         v1.0 -&gt; v1.0</span><br></pre></td></tr></table></figure><p>更新 github 的页面会发现多了一个 tag。</p><p>删除tag:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin --delete v1.0</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line"> - [deleted]         v1.0</span><br></pre></td></tr></table></figure><p>更新 github 的页面会发现这个 tag被删了。但是在本地目录，tag还在：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 125409a (HEAD -&gt; master, tag: v1.0, origin/master, origin/HEAD) add file2.txt</span><br><span class="line">* ec68ae1 Add file1.txt</span><br><span class="line">* 4085604 Update README.md</span><br><span class="line">* 3e40ffc Update README.md</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br><span class="line"></span><br><span class="line">$ git tag -d v1.0</span><br><span class="line">Deleted tag <span class="string">'v1.0'</span> (was 125409a)</span><br></pre></td></tr></table></figure><h1 id="Releases"><a href="#Releases" class="headerlink" title="Releases"></a>Releases</h1><p>在 github 上release, 会给当前 commit 版本打一个 tag。</p><p>加上Release Notes。</p><p>如果还不是stable的版本，勾上“Pre-release”。</p><p><img src="/images/Git/5_21.png" alt="5_21" style="zoom: 67%;"></p><h1 id="Sharing-branches"><a href="#Sharing-branches" class="headerlink" title="Sharing branches"></a>Sharing branches</h1><h2 id="增加分支"><a href="#增加分支" class="headerlink" title="增加分支"></a>增加分支</h2><p>在本地创建了一个新分支，git push 的报错信息意思是这个branch 没有 link to origin 的 branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C feature/change-password</span><br><span class="line">Switched to a new branch <span class="string">'feature/change-password'</span></span><br><span class="line"></span><br><span class="line">(feature/change-password)$ git push</span><br><span class="line">fatal: The current branch feature/change-password has no upstream branch.</span><br><span class="line">To push the current branch and <span class="built_in">set</span> the remote as upstream, use</span><br><span class="line"></span><br><span class="line">    git push --<span class="built_in">set</span>-upstream origin feature/change-password</span><br></pre></td></tr></table></figure><p>-vv 查看当前的本地分支与远程分支的关联关系</p><p>-r 查看tracked branch (远程分支)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-password)$ git branch -vv</span><br><span class="line">* feature/change-password 125409a add file2.txt</span><br><span class="line">  master                  125409a [origin/master] add file2.txt</span><br><span class="line"></span><br><span class="line">(feature/change-password)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure><p>将新分支push上去（-u中的u是upstream的意思）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-password)$ git push -u origin feature/change-password</span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">remote:</span><br><span class="line">remote: Create a pull request <span class="keyword">for</span> <span class="string">'feature/change-password'</span> on GitHub by visiting:</span><br><span class="line">remote:      https://github.com/PurpleMStone/Mars/pull/new/feature/change-password</span><br><span class="line">remote:</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line"> * [new branch]      feature/change-password -&gt; feature/change-password</span><br><span class="line">Branch <span class="string">'feature/change-password'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'feature/change-password'</span> from <span class="string">'origin'</span>.</span><br></pre></td></tr></table></figure><p>再查看一下：</p><p>本地分支和远程分支关联起来了，github上也能看到新增的分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-password)$ git branch -vv</span><br><span class="line">* feature/change-password 125409a [origin/feature/change-password] add file2.txt</span><br><span class="line">  master                  125409a [origin/master] add file2.txt</span><br><span class="line"></span><br><span class="line">(feature/change-password)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/feature/change-password</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><p>删除远程分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-password)$ git push -d origin feature/change-password</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line"> - [deleted]         feature/change-password</span><br><span class="line"></span><br><span class="line">(feature/change-password)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure><p>但是本地分支还在，要切换回master分支删掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-password)$ git branch -vv</span><br><span class="line">* feature/change-password 125409a [origin/feature/change-password: gone] add file2.txt</span><br><span class="line">  master                  125409a [origin/master] add file2.txt</span><br><span class="line"></span><br><span class="line">(feature/change-password)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line">Your branch is up to date with <span class="string">'origin/master'</span>.</span><br><span class="line"></span><br><span class="line">(master)$ git branch -d feature/change-password</span><br><span class="line">Deleted branch feature/change-password (was 125409a).</span><br><span class="line"></span><br><span class="line">(master)$ git branch</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><h1 id="Collaboration-Workflow"><a href="#Collaboration-Workflow" class="headerlink" title="Collaboration Workflow"></a>Collaboration Workflow</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本Demo展示了两个contributor是如何通过GitHub来协作的</span><br><span class="line">协作者：👉 我 👉 Amy</span><br></pre></td></tr></table></figure><h2 id="1-我来创建新分支"><a href="#1-我来创建新分支" class="headerlink" title="1. 我来创建新分支"></a>1. 我来创建新分支</h2><p>在GitHub上创建一个新分支feature/change-password，然后在本地目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git fetch</span><br><span class="line">From https://github.com/PurpleMStone/Mars</span><br><span class="line"> * [new branch]      feature/change-passwork -&gt; origin/feature/change-passwork</span><br><span class="line"> * [new tag]         v1.0                    -&gt; v1.0</span><br><span class="line"></span><br><span class="line">(master)$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">(master)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/feature/change-passwork</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure><p>我们只得到一个remote tacked branch origin/feature/change-passwork，而本地没有一个branch是feature/change-passwork。</p><p>创建一个feature/change-passwork分支，相当于一个指针指向remote branch origin/feature/change-passwork：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C feature/change-passwork origin/feature/change-passwork</span><br><span class="line">Switched to a new branch <span class="string">'feature/change-passwork'</span></span><br><span class="line">Branch <span class="string">'feature/change-passwork'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'feature/change-passwork'</span> from <span class="string">'origin'</span>.</span><br></pre></td></tr></table></figure><h2 id="2-另一个contributor"><a href="#2-另一个contributor" class="headerlink" title="2. 另一个contributor"></a>2. 另一个contributor</h2><p>现在比如说有另一个协作者Amy，将这个库clone下来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Amy$ git <span class="built_in">clone</span> https://github.com/PurpleMStone/Mars.git</span><br><span class="line">Cloning into <span class="string">'Mars'</span>...</span><br><span class="line">remote: Enumerating objects: 17, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (17/17), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (10/10), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 17 (delta 1), reused 4 (delta 0), pack-reused 0</span><br><span class="line">Receiving objects: 100% (17/17), <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (1/1), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">Amy$ <span class="built_in">cd</span> Mars</span><br></pre></td></tr></table></figure><p>查看本地分支，依然只有一个master，所以也要创建一个feature/change-passwork分支，相当于一个指针指向remote branch origin/feature/change-passwork：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Amy/Mars (master)$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">Amy/Mars (master)$ </span><br><span class="line">git switch -C feature/change-passwork origin/feature/change-passwork</span><br><span class="line">Switched to a new branch <span class="string">'feature/change-passwork'</span></span><br><span class="line">Branch <span class="string">'feature/change-passwork'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'feature/change-passwork'</span> from <span class="string">'origin'</span>.</span><br></pre></td></tr></table></figure><p>在这个分支下进行修改并commit，然后push到github，可以在 github 的该分支下看到这个修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Amy/Mars (feature/change-passwork)$ <span class="built_in">echo</span> password &gt; file1.txt</span><br><span class="line"></span><br><span class="line">Amy/Mars (feature/change-passwork)</span><br><span class="line">$ git commit -am <span class="string">"Update file1"</span></span><br><span class="line">[feature/change-passwork 244f7a7] Update file1</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">Amy/Mars (feature/change-passwork)$ git push</span><br><span class="line">Enumerating objects: 5, <span class="keyword">done</span>.</span><br><span class="line">Counting objects: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">Delta compression using up to 4 threads</span><br><span class="line">Compressing objects: 100% (2/2), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 306 bytes | 306.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line">   125409a..244f7a7  feature/change-passwork -&gt; feature/change-passwork</span><br></pre></td></tr></table></figure><h2 id="3-我来Merge"><a href="#3-我来Merge" class="headerlink" title="3. 我来Merge"></a>3. 我来Merge</h2><p>这时本人将GitHub的变化pull到本地，并且发现HEAD指向feature/change-passwork分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-passwork)$ git pull</span><br><span class="line">remote: Enumerating objects: 5, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (2/2), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), 286 bytes | 0 bytes/s, <span class="keyword">done</span>.</span><br><span class="line">From https://github.com/PurpleMStone/Mars</span><br><span class="line">   125409a..244f7a7  feature/change-passwork -&gt; origin/feature/change-passwork</span><br><span class="line">Updating 125409a..244f7a7</span><br><span class="line">Fast-forward</span><br><span class="line"> file1.txt | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(feature/change-passwork)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 244f7a7 (HEAD -&gt; feature/change-passwork, origin/feature/change-passwork) Update file1</span><br><span class="line">* 125409a (tag: v1.0, origin/master, origin/HEAD, master) add file2.txt</span><br><span class="line">* ec68ae1 Add file1.txt</span><br><span class="line">* 4085604 Update README.md</span><br><span class="line">* 3e40ffc Update README.md</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br></pre></td></tr></table></figure><p>现在希望将分支merge到master，可以发现是一个Fast-forward merge，并且查看log，两个分支在本地确实是merge了，但是origin的远程master分支还是原样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(feature/change-passwork)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line">Your branch is up to date with <span class="string">'origin/master'</span>.</span><br><span class="line"></span><br><span class="line">(master)$ git merge feature/change-passwork</span><br><span class="line">Updating 125409a..244f7a7</span><br><span class="line">Fast-forward</span><br><span class="line"> file1.txt | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 244f7a7 (HEAD -&gt; master, origin/feature/change-passwork, feature/change-passwork) Update file1</span><br><span class="line">* 125409a (tag: v1.0, origin/master, origin/HEAD) add file2.txt</span><br><span class="line">* ec68ae1 Add file1.txt</span><br><span class="line">* 4085604 Update README.md</span><br><span class="line">* 3e40ffc Update README.md</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br></pre></td></tr></table></figure><p>这就需要用 git push 提交merge更改。再次查看log，远程分支也merge了。并且github上也可看到merge结果（feature/change-passwork的commit merge到master上了）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git push</span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line">   125409a..244f7a7  master -&gt; master</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 244f7a7 (HEAD -&gt; master, origin/master, origin/feature/change-passwork, origin/HEAD, feature/change-passwork) Update file1</span><br><span class="line">* 125409a (tag: v1.0) add file2.txt</span><br><span class="line">* ec68ae1 Add file1.txt</span><br><span class="line">* 4085604 Update README.md</span><br><span class="line">* 3e40ffc Update README.md</span><br><span class="line">* e27337b Update README.md</span><br><span class="line">* 7216ded Initial commit</span><br></pre></td></tr></table></figure><h2 id="4-我来删除分支"><a href="#4-我来删除分支" class="headerlink" title="4. 我来删除分支"></a>4. 我来删除分支</h2><p>既然 merge 了，分支留着也没用了，咱就把这分支删了吧，先删 remote branch，再删 local branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git push -d origin feature/change-passwork</span><br><span class="line">To https://github.com/PurpleMStone/Mars.git</span><br><span class="line"> - [deleted]         feature/change-passwork</span><br><span class="line"></span><br><span class="line">(master)$ git branch</span><br><span class="line">  feature/change-passwork</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">(master)$ git branch -d feature/change-passwork</span><br><span class="line">Deleted branch feature/change-passwork (was 244f7a7).</span><br></pre></td></tr></table></figure><p>看看是不是真的删了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">(master)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure><p>NICE.</p><h2 id="5-另一个contributor的同步"><a href="#5-另一个contributor的同步" class="headerlink" title="5. 另一个contributor的同步"></a>5. 另一个contributor的同步</h2><p>git pull 获取GitHub变化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Amy/Mars (master)$ git pull</span><br><span class="line">From https://github.com/PurpleMStone/Mars</span><br><span class="line">   125409a..244f7a7  master     -&gt; origin/master</span><br><span class="line">Updating 125409a..244f7a7</span><br><span class="line">Fast-forward</span><br><span class="line"> file1.txt | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure><p>本地还有这个branch，删掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Amy/Mars (master)$ git branch</span><br><span class="line">  feature/change-passwork</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">Amy/Mars (master)$ git branch -d feature/change-passwork</span><br><span class="line">Deleted branch feature/change-passwork (was 244f7a7).</span><br></pre></td></tr></table></figure><p>会发现origin还有这个branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Amy/Mars (master)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/feature/change-passwork</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure><p>可以这样移除（可以刷新本地仓库与远程仓库，保持这些改动的同步）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Amy/Mars (master)$ git remote prune origin</span><br><span class="line">Pruning origin</span><br><span class="line">URL: https://github.com/PurpleMStone/Mars.git</span><br><span class="line"> * [pruned] origin/feature/change-passwork</span><br><span class="line"></span><br><span class="line">Amy/Mars (master)$ git branch -r</span><br><span class="line">  origin/HEAD -&gt; origin/master</span><br><span class="line">  origin/master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Workflows&quot;&gt;&lt;a href=&quot;#Workflows&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="job notes-git" scheme="http://yoursite.com/tags/job-notes-git/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Git课程笔记(4)--Branching</title>
    <link href="http://yoursite.com/2021/04/26/20210426_Git004/"/>
    <id>http://yoursite.com/2021/04/26/20210426_Git004/</id>
    <published>2021-04-26T13:50:09.000Z</published>
    <updated>2021-04-30T07:18:13.064Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="What-are-Branches"><a href="#What-are-Branches" class="headerlink" title="What are Branches?"></a>What are Branches?</h1><ul><li>master分支一般存着stable的commit版本，另一个分支如feature存着还不stable的版本，等到改到完善了，才将feature分支merge到master中。</li><li>MASTER指针指向master分支中最近commit的版本，其他分支同理。</li><li>HEAD指针可以指向master，也可以指向feature，用于方便地调整working branch。</li></ul><p><img src="/images/Git/4_01.png" alt="4_01" style="zoom: 50%;"></p><h1 id="Working-with-Branches"><a href="#Working-with-Branches" class="headerlink" title="Working with Branches"></a>Working with Branches</h1><p>创建分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch bugfix</span><br></pre></td></tr></table></figure><p>查看现有分支，其中标*的表示当前working branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">  bugfix</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>也可以这样查看当前working branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><p>切换到bugfix branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git switch bugfix</span><br><span class="line">Switched to branch <span class="string">'bugfix'</span></span><br></pre></td></tr></table></figure><hr><p>Shortcut：创建并切换分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git switch -C bugfix</span><br></pre></td></tr></table></figure><p>-C表示creating</p><hr><p>重命名分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(bugfix)$ git branch -m bugfix bugfix-signup-form</span><br><span class="line"></span><br><span class="line">(bugfix-signup-form)$</span><br></pre></td></tr></table></figure><p>假如在创建这个bugfix-signup-form分支之前，在master创建了一个audience.txt文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AUDIENCE</span><br><span class="line"></span><br><span class="line">This course is <span class="keyword">for</span> anyone who wants to learn Git.</span><br><span class="line">No prior experience is required.</span><br></pre></td></tr></table></figure><p>创建并切换当前分支为bugfix-signup-form分支之后将该文件的内容改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHO THIS COURSE IS FOR </span><br><span class="line">======================</span><br><span class="line">This course is <span class="keyword">for</span> anyone who wants to learn Git.</span><br></pre></td></tr></table></figure><p>并提交更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(bugfix-signup-form)$ code audience.txt</span><br><span class="line"></span><br><span class="line">(bugfix-signup-form)$ git add .</span><br><span class="line"></span><br><span class="line">(bugfix-signup-form)$ git commit -m <span class="string">"fix the bug that prevented the users from signing up"</span></span><br><span class="line">[bugfix-signup-form 7a5cdb3] fix the bug that prevented the users from signing up</span><br><span class="line"> 1 file changed, 3 insertions(+), 4 deletions(-)</span><br></pre></td></tr></table></figure><p>查看一下，HEAD指向当前分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(bugfix-signup-form)$ git <span class="built_in">log</span> --oneline</span><br><span class="line">7a5cdb3 (HEAD -&gt; bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">82ca774 (master) add audience.txt</span><br></pre></td></tr></table></figure><p>切换回master分支并查看audience.txt内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(bugfix-signup-form)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master‘</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">(master)$ code audience.txt</span></span><br></pre></td></tr></table></figure><p>发现audience.txt内容依然是旧版的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AUDIENCE</span><br><span class="line"></span><br><span class="line">This course is <span class="keyword">for</span> anyone who wants to learn Git.</span><br><span class="line">No prior experience is required.</span><br></pre></td></tr></table></figure><p>查看修改log，会发现看不到bugfix-signup-form分支的更改log：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline</span><br><span class="line">82ca774 (HEAD -&gt; master) add audience.txt</span><br></pre></td></tr></table></figure><p>除非用—all：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">82ca774 (HEAD -&gt; master) add audience.txt</span><br></pre></td></tr></table></figure><p>如果想删除bugfix-signup-form分支，由于还没merge，所以会报错。若确定真的要删，用-D：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch -d bugfix-signup-form</span><br><span class="line">error: The branch <span class="string">'bugfix-signup-form'</span> is not fully merged.</span><br><span class="line">If you are sure you want to delete it, run <span class="string">'git branch -D bugfix-signup-form'</span>.</span><br></pre></td></tr></table></figure><h1 id="Comparing-Branches"><a href="#Comparing-Branches" class="headerlink" title="Comparing Branches"></a>Comparing Branches</h1><p>在将分支merge到master之前，先看看改了啥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> master..bugfix-signup-form</span><br><span class="line">commit 7a5cdb3ea29a72530f598fa7fee1358a6c4dcb23 (bugfix-signup-form)</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 23 21:56:15 2021 +0800</span><br><span class="line"></span><br><span class="line">    fix the bug that prevented the users from signing up</span><br></pre></td></tr></table></figure><p>查看具体改了啥内容（由于当前分支就是master, master..也可以省略不写）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git diff master..bugfix-signup-form</span><br><span class="line">diff --git a/audience.txt b/audience.txt</span><br><span class="line">index 01fd2e1..ecbc229 100644</span><br><span class="line">--- a/audience.txt</span><br><span class="line">+++ b/audience.txt</span><br><span class="line">@@ -1,4 +1,3 @@</span><br><span class="line">-AUDIENCE</span><br><span class="line">-</span><br><span class="line">-This course is <span class="keyword">for</span> anyone who wants to learn Git.</span><br><span class="line">-No prior experience is required.</span><br><span class="line">\ No newline at end of file</span><br><span class="line">+WHO THIS COURSE IS FOR</span><br><span class="line">+======================</span><br><span class="line">+This course is <span class="keyword">for</span> anyone who wants to learn Git.</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><p>看简略的修改状态信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git diff --name-status bugfix-signup-form</span><br><span class="line">M       audience.txt</span><br></pre></td></tr></table></figure><h1 id="Stashing"><a href="#Stashing" class="headerlink" title="Stashing"></a>Stashing</h1><p>bugfix-signup-form分支对audience.txt修改后，该分支尚未merge到master分支，此时master分支却又对audience.txt进行了修改，此时不允许切换到分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch bugfix-signup-form</span><br><span class="line">error: Your <span class="built_in">local</span> changes to the following files would be overwritten by checkout:</span><br><span class="line">        audience.txt</span><br><span class="line">Please commit your changes or stash them before you switch branches.</span><br><span class="line">Aborting</span><br><span class="line"></span><br><span class="line">(master)$</span><br></pre></td></tr></table></figure><p>如果我们还不想commit在master分支对audience.txt的修改，可以先用stash保存工作现场：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git stash push -m <span class="string">"New tax rules."</span></span><br><span class="line">Saved working directory and index state On master: New tax rules.</span><br></pre></td></tr></table></figure><p>By default, new untracked files are not included in the stash, 要用-a放入stash:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(master)$ <span class="built_in">echo</span> hello &gt; newfile.txt</span><br><span class="line"></span><br><span class="line">(master)$ git status -s</span><br><span class="line">?? newfile.txt</span><br><span class="line"></span><br><span class="line">(master)$ git stash push -m <span class="string">"My new stash with newfile1.txt"</span></span><br><span class="line">No <span class="built_in">local</span> changes to save//------这样不行的--------------</span><br><span class="line"></span><br><span class="line">(master)$ git stash push -am <span class="string">"My new stash"</span></span><br><span class="line">Saved working directory and index state On master: My new stash</span><br></pre></td></tr></table></figure><p>查看stash:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git stash list</span><br><span class="line">stash@&#123;0&#125;: On master: My new stash</span><br><span class="line">stash@&#123;1&#125;: On master: New tax rules.</span><br></pre></td></tr></table></figure><p>Stashing了就可以成功切换分支了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch bugfix-signup-form</span><br><span class="line">Switched to branch <span class="string">'bugfix-signup-form'</span></span><br></pre></td></tr></table></figure><p>在分支的工作做完，换回master分支，想恢复工作现场，先看看改了啥（根据stash号）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git stash show 1</span><br><span class="line"> audience.txt | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure><p>可以的话就apply到本地目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git stash apply 1</span><br></pre></td></tr></table></figure><p>用 git stash apply恢复后，保存的现场并不删除，需要用git stash drop 删除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git stash drop 1</span><br><span class="line">Dropped refs/stash@&#123;1&#125; (92b61ede11aa9f3c076aed7c1409c7cc683e4efb)</span><br></pre></td></tr></table></figure><p>清除全部stash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git stash clear</span><br></pre></td></tr></table></figure><h1 id="Merging"><a href="#Merging" class="headerlink" title="Merging"></a>Merging</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;******Merges*******&#x2F;</span><br><span class="line">👉 Fast-forward merges (if branches have not diverged)</span><br><span class="line">👉 3-way merges (if branches have diverged)</span><br></pre></td></tr></table></figure><hr><p><strong>Fast-forward merges</strong></p><p>当前分支合并另一个分支的时候，如果合并的过程中没有冲突，则会通过直接移动两个分支的指针，来达到合并。</p><p><img src="/images/Git/4_02.png" alt="4_02" style="zoom: 67%;"></p><p>只有bugfix分支在改动，改到stable了，直接移动master指针到bugfix指向的位置，然后丢弃bugfix指针就行了。</p><hr><p><strong>3-way merges</strong></p><p><img src="/images/Git/4_03.png" alt="4_03" style="zoom: 50%;"></p><p>两个分支都在改动，最后merge到一起。</p><hr><h2 id="Fast-forward-Merges"><a href="#Fast-forward-Merges" class="headerlink" title="Fast-forward Merges"></a>Fast-forward Merges</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 (HEAD -&gt; master) add audience.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git merge bugfix-signup-form</span><br><span class="line">Updating 82ca774..7a5cdb3</span><br><span class="line">Fast-forward</span><br><span class="line"> audience.txt | 7 +++----</span><br><span class="line"> 1 file changed, 3 insertions(+), 4 deletions(-)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 7a5cdb3 (HEAD -&gt; master, bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br></pre></td></tr></table></figure><p><strong>No fast-forward merges</strong></p><p>merge 了 master 和 bugfix-signup-form 分支后，创建并切换到新分支bugfix-login-form。此时假如对已有文件 file1.js 进行 modify 并 commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C bugfix-login-form</span><br><span class="line">Switched to and reset branch <span class="string">'bugfix-login-form'</span></span><br><span class="line"></span><br><span class="line">(bugfix-login-form)$ code file1.js</span><br><span class="line"></span><br><span class="line">(bugfix-login-form)$ git add .</span><br><span class="line"></span><br><span class="line">(bugfix-login-form)$ git commit -m <span class="string">"update file1.js"</span></span><br><span class="line">[bugfix-login-form 1ad00a7] update file1.js</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(bugfix-login-form)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 1ad00a7 (HEAD -&gt; bugfix-login-form) update file1.js</span><br><span class="line">* 7a5cdb3 (master, bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br></pre></td></tr></table></figure><p>此时master和bugfix-signup-form指向同一commit，bugfix-login-form 指向本 modify commit。然后用 No fast-forward 的方式来合并两分支，可以看到 git merge 命令的返回结果中不再有“Fast-forward”出现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(bugfix-login-form)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$ git merge --no-ff bugfix-login-form</span><br><span class="line">Merge made by the <span class="string">'recursive'</span> strategy.</span><br><span class="line"> file1.js | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   9612ab4 (HEAD -&gt; master) Merge branch <span class="string">'bugfix-login-form'</span></span><br><span class="line">|\</span><br><span class="line">| * 1ad00a7 (bugfix-login-form) update file1.js</span><br><span class="line">|/</span><br><span class="line">* 7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**使用No fast-forward merges的优缺点（两派观点）**/</span><br><span class="line">👉 CONS：pollutes the <span class="built_in">history</span> (those who prefer linear <span class="built_in">history</span>)</span><br><span class="line">👉 PROS：1) True reflection of <span class="built_in">history</span></span><br><span class="line"> 2) Allow reverting a feature (easier <span class="keyword">for</span> us to undo a feature)</span><br></pre></td></tr></table></figure><p>如果使用No fast-forward merges：</p><p><img src="/images/Git/4_04.png" alt="4_04" style="zoom:50%;"></p><p>红色标记的commit 是F1和F2的结合，如果红标的commit是个bad commit, 蓝标的commit 是和红标完全相反的commit，我们只需要revert 一个commit就行了。</p><p>而如果使用fast-forward merges：</p><p><img src="/images/Git/4_05.png" alt="4_05" style="zoom:75%;"></p><p>要revert两个commit，会更加复杂。</p><h2 id="3-way-merges"><a href="#3-way-merges" class="headerlink" title="3-way merges"></a>3-way merges</h2><p>创建新分支并在此分支commit新修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C feature-change-password</span><br><span class="line">Switched to a new branch <span class="string">'feature-change-password'</span></span><br><span class="line"></span><br><span class="line">(feature-change-password)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   9612ab4 (HEAD -&gt; feature-change-password, master) Merge branch <span class="string">'bugfix-login-form'</span></span><br><span class="line">|\</span><br><span class="line">| * 1ad00a7 (bugfix-login-form) update file1.js</span><br><span class="line">|/</span><br><span class="line">* 7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br><span class="line"></span><br><span class="line">(feature-change-password)$ <span class="built_in">echo</span> hello &gt; change-password.txt</span><br><span class="line"></span><br><span class="line">(feature-change-password)$ git add .</span><br><span class="line"></span><br><span class="line">(feature-change-password)$ git commit -m <span class="string">"Build the change password form."</span></span><br><span class="line">[feature-change-password 49f4f13] Build the change password form.</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 change-password.txt</span><br><span class="line"></span><br><span class="line">(feature-change-password)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 49f4f13 (HEAD -&gt; feature-change-password) Build the change password form.</span><br><span class="line">*   9612ab4 (master) Merge branch <span class="string">'bugfix-login-form'</span></span><br><span class="line">|\</span><br><span class="line">| * 1ad00a7 (bugfix-login-form) update file1.js</span><br><span class="line">|/</span><br><span class="line">* 7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br></pre></td></tr></table></figure><p>返回master分支并在此分支commit新修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(feature-change-password)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$ code audience.txt</span><br><span class="line"></span><br><span class="line">(master)$ git commit -am <span class="string">"Update audience.txt"</span></span><br><span class="line">[master 4aa3534] Update audience.txt</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 4aa3534 (HEAD -&gt; master) Update audience.txt</span><br><span class="line">| * 49f4f13 (feature-change-password) Build the change password form.</span><br><span class="line">|/</span><br><span class="line">*   9612ab4 Merge branch <span class="string">'bugfix-login-form'</span></span><br><span class="line">|\</span><br><span class="line">| * 1ad00a7 (bugfix-login-form) update file1.js</span><br><span class="line">|/</span><br><span class="line">* 7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br></pre></td></tr></table></figure><p>Merge这两个分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git merge feature-change-password</span><br><span class="line">Merge made by the <span class="string">'recursive'</span> strategy.</span><br><span class="line"> change-password.txt | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 change-password.txt</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   91dd8b9 (HEAD -&gt; master) Merge branch <span class="string">'feature-change-password'</span></span><br><span class="line">|\</span><br><span class="line">| * 49f4f13 (feature-change-password) Build the change password form.</span><br><span class="line">* | 4aa3534 Update audience.txt</span><br><span class="line">|/</span><br><span class="line">*   9612ab4 Merge branch <span class="string">'bugfix-login-form'</span></span><br><span class="line">|\</span><br><span class="line">| * 1ad00a7 (bugfix-login-form) update file1.js</span><br><span class="line">|/</span><br><span class="line">* 7a5cdb3 (bugfix-signup-form) fix the bug that prevented the users from signing up</span><br><span class="line">* 82ca774 add audience.txt</span><br></pre></td></tr></table></figure><h2 id="Viewing-the-Merged-Branches"><a href="#Viewing-the-Merged-Branches" class="headerlink" title="Viewing the Merged Branches"></a>Viewing the Merged Branches</h2><p>查看merge到master的branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch --merged</span><br><span class="line">  bugfix-login-form</span><br><span class="line">  bugfix-signup-form</span><br><span class="line">  feature-change-password</span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>这些分支已经merge了，就可以安全地删除了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch -d bugfix-login-form</span><br><span class="line">Deleted branch bugfix-login-form (was 1ad00a7).</span><br></pre></td></tr></table></figure><p>查看还没merge的分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch --no-merged</span><br></pre></td></tr></table></figure><h2 id="Merge-Conflicts"><a href="#Merge-Conflicts" class="headerlink" title="Merge Conflicts"></a>Merge Conflicts</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Conflicts (difference <span class="keyword">in</span> two branches)</span><br><span class="line">👉 Change1, Change2</span><br><span class="line">👉 Change, Delete</span><br><span class="line">👉 Add1, Add2</span><br></pre></td></tr></table></figure><p>Demo:</p><ol><li>创建新分支bugfix-change-password并提交对change-password.txt的修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C bugfix-change-password</span><br><span class="line">Switched to a new branch <span class="string">'bugfix-change-password'</span></span><br><span class="line"></span><br><span class="line">(bugfix-change-password)$ code change-password.txt</span><br><span class="line"></span><br><span class="line">(bugfix-change-password)$ git commit -am <span class="string">"Update change-password.txt"</span></span><br><span class="line">[bugfix-change-password.txt 7e3da10] Update change-password.txt</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol><li>切换到master分支，提交对change-password.txt的修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(bugfix-change-password)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$ code change-password.txt</span><br><span class="line"></span><br><span class="line">(master)$ git commit -am <span class="string">"Update change-password.txt"</span></span><br><span class="line">[master adebbcf] Update change-password.txt</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><ol><li>Merge两个分支时出现conflict:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git merge bugfix-change-password</span><br><span class="line">merge: bugfix-change-password - not something we can merge</span><br><span class="line"></span><br><span class="line">(master)$ git merge bugfix-change-password.txt</span><br><span class="line">Auto-merging change-password.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> change-password.txt</span><br><span class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</span><br><span class="line"></span><br><span class="line">(master|MERGING)$ git status</span><br><span class="line">On branch master</span><br><span class="line">You have unmerged paths.</span><br><span class="line">  (fix conflicts and run <span class="string">"git commit"</span>)</span><br><span class="line">  (use <span class="string">"git merge --abort"</span> to abort the merge)</span><br><span class="line"></span><br><span class="line">Unmerged paths:      //---------merge失败的原因所在------------------</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to mark resolution)</span><br><span class="line">        both modified:   change-password.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br></pre></td></tr></table></figure><p>看看文件：</p><p><img src="/images/Git/4_06.png" alt="4_06"></p><p>VSCode提供了几种（可以直接点击的）：Accept Current Change等三种方法消除conflict</p><p>也可以手动改，但此时不能增加新的内容，只能选择两个分支的修改内容。最后改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line"></span><br><span class="line">change in the master branch.</span><br><span class="line">change in the bugfix branch.</span><br></pre></td></tr></table></figure><p>这回就可以成功提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(master|MERGING)$ git add change-password.txt</span><br><span class="line"></span><br><span class="line">(master|MERGING)$ git status</span><br><span class="line">On branch master</span><br><span class="line">All conflicts fixed but you are still merging.</span><br><span class="line">  (use <span class="string">"git commit"</span> to conclude merge)</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">        modified:   change-password.txt</span><br><span class="line">        </span><br><span class="line">(master|MERGING)$ git commit</span><br><span class="line">[master 74c5e1c] Merge branch <span class="string">'bugfix-change-password.txt'</span></span><br><span class="line"></span><br><span class="line">(master)$</span><br></pre></td></tr></table></figure><h2 id="Visual-Merge-Tools"><a href="#Visual-Merge-Tools" class="headerlink" title="Visual Merge Tools"></a>Visual Merge Tools</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">👉 Kdiff </span><br><span class="line">👉 P4Merge</span><br><span class="line">👉 WinMerge (Windows Only)</span><br></pre></td></tr></table></figure><p>在官网下载P4Merge并安装，然后配置（安装路径）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global merge.tool p4merge</span><br><span class="line"></span><br><span class="line">$ git config --global mergetool.p4merge.path &quot;D:&#x2F;Program Files&#x2F;P4Merge&#x2F;p4merge.exe&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/Git/4_07.png" alt="4_07" style="zoom: 50%;"></p><h2 id="Aborting-a-Merge"><a href="#Aborting-a-Merge" class="headerlink" title="Aborting a Merge"></a>Aborting a Merge</h2><p>想merge却发现有冲突，此时没有时间处理冲突，要回到merge之前的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git merge bugfix-change-password</span><br><span class="line">Auto-merging change-password.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> change-password.txt</span><br><span class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</span><br><span class="line"></span><br><span class="line">(master|MERGING)$ git merge --abort</span><br><span class="line"></span><br><span class="line">(master)$</span><br></pre></td></tr></table></figure><h2 id="Undoing-a-Faulty-Merge"><a href="#Undoing-a-Faulty-Merge" class="headerlink" title="Undoing a Faulty Merge"></a>Undoing a Faulty Merge</h2><p>merge了之后发现这个merge不合适，又不想merge了：</p><p><img src="/images/Git/4_08.png" alt="4_08" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   bbf6499 (HEAD -&gt; master) Merge branch <span class="string">'bugfix-change-password'</span></span><br><span class="line">|\</span><br><span class="line">| * fdfcee5 (bugfix-change-password) Update change-password.txt</span><br><span class="line">* | 5975f40 Update change-password.txt</span><br><span class="line">|/</span><br><span class="line">* 3c6ba48 Update change-password.txt</span><br></pre></td></tr></table></figure><p><img src="/images/Git/4_09.png" alt="4_09" style="zoom:50%;"></p><p>用reset回到上一个master指向的commit，这之后的commit都会消失（看log）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reset --hard HEAD~1</span><br><span class="line">HEAD is now at 5975f40 Update change-password.txt</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5975f40 (HEAD -&gt; master) Update change-password.txt</span><br><span class="line">| * fdfcee5 (bugfix-change-password) Update change-password.txt</span><br><span class="line">|/</span><br><span class="line">* 3c6ba48 Update change-password.txt</span><br></pre></td></tr></table></figure><p>现在没有一个指针指向红标的commit，Git会将其视为垃圾，一段时间后自动将其删除：</p><p><img src="/images/Git/4_10.png" alt="4_10" style="zoom:50%;"></p><p> 但是在Git删除前它还在，还可以恢复出来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git reset --hard bbf6499</span><br><span class="line">HEAD is now at bbf6499 Merge branch <span class="string">'bugfix-change-password'</span></span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   bbf6499 (HEAD -&gt; master) Merge branch <span class="string">'bugfix-change-password'</span></span><br><span class="line">|\</span><br><span class="line">| * fdfcee5 (bugfix-change-password) Update change-password.txt</span><br><span class="line">* | 5975f40 Update change-password.txt</span><br><span class="line">|/</span><br><span class="line">* 3c6ba48 Update change-password.txt</span><br></pre></td></tr></table></figure><p><img src="/images/Git/4_11.png" alt="4_11" style="zoom:50%;"></p><p><img src="/images/Git/4_12.png" alt="4_12" style="zoom:50%;"></p><p><img src="/images/Git/4_13.png" alt="4_13" style="zoom:50%;"></p><p>git revert是用于“反做”某一个版本，以达到撤销该版本的修改的目的。比如，我们commit了三个版本（版本一、版本二、 版本三），突然发现版本二不行（如：有bug），想要撤销版本二，但又不想影响撤销版本三的提交，就可以用 git revert 命令来反做版本二，生成新的版本四，这个版本四里会保留版本三的东西，但撤销了版本二的东西。</p><p><strong>适用场景：</strong> 如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法</p><p>Demo:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">*   bbf6499 (HEAD -&gt; master) Merge branch <span class="string">'bugfix-change-password'</span></span><br><span class="line">|\</span><br><span class="line">| * fdfcee5 (bugfix-change-password) Update change-password.txt</span><br><span class="line">* | 5975f40 Update change-password.txt</span><br><span class="line">|/</span><br><span class="line">* 3c6ba48 Update change-password.txt</span><br><span class="line"></span><br><span class="line">(master)$ git revert -m 1 HEAD</span><br><span class="line">[master 5f99ab9] Revert <span class="string">"Merge branch 'bugfix-change-password'"</span></span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 5f99ab9 (HEAD -&gt; master) Revert <span class="string">"Merge branch 'bugfix-change-password'"</span></span><br><span class="line">*   bbf6499 Merge branch <span class="string">'bugfix-change-password'</span></span><br><span class="line">|\</span><br><span class="line">| * fdfcee5 (bugfix-change-password) Update change-password.txt</span><br><span class="line">* | 5975f40 Update change-password.txt</span><br><span class="line">|/</span><br><span class="line">* 3c6ba48 Update change-password.txt</span><br></pre></td></tr></table></figure><p>由于当前commit有两个parent commit (因为有两分支)，所以用 -m 1 表示回到第一个parent commit (即上一个master指向的commit)，可以看到所有的commit都保留了。</p><p><strong>参考</strong></p><p><a href="https://blog.csdn.net/yxlshk/article/details/79944535" target="_blank" rel="noopener">https://blog.csdn.net/yxlshk/article/details/79944535</a></p><h2 id="Squash-Merging"><a href="#Squash-Merging" class="headerlink" title="Squash Merging"></a>Squash Merging</h2><p><img src="/images/Git/4_14.png" alt="4_14" style="zoom: 50%;"></p><p>可能B1和B2只是小改动，checkpoint之类的，我们不想让它们pollute了commit history, 所以用一个总的commit结合了这两个commit。而事实上并没有merge两个分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C bugfix-photo-upload</span><br><span class="line">Switched to a new branch <span class="string">'bugfix-photo-upload'</span></span><br><span class="line"></span><br><span class="line">(bugfix-photo-upload)$ <span class="built_in">echo</span> bigfix &gt;&gt; audience.txt</span><br><span class="line"></span><br><span class="line">(bugfix-photo-upload)$ git commit -am <span class="string">"Update audience.txt"</span></span><br><span class="line">[bugfix-photo-upload c699541] Update audience.txt</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(bugfix-photo-upload)$ <span class="built_in">echo</span> bigfix &gt;&gt; file1.js</span><br><span class="line"></span><br><span class="line">(bugfix-photo-upload)$ git commit -am <span class="string">"Update file1.js"</span></span><br><span class="line">[bugfix-photo-upload abb7001] Update file1.js</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(bugfix-photo-upload)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$ git merge --squash bugfix-photo-upload</span><br><span class="line">Updating 5f99ab9..abb7001</span><br><span class="line">Fast-forward</span><br><span class="line">Squash commit -- not updating HEAD</span><br><span class="line"> audience.txt | 2 +-</span><br><span class="line"> file1.js     | 2 +-</span><br><span class="line"> 2 files changed, 2 insertions(+), 2 deletions(-)</span><br><span class="line"></span><br><span class="line">(master)$ git status -s</span><br><span class="line">M  audience.txt</span><br><span class="line">M  file1.js</span><br><span class="line"></span><br><span class="line">(master)$ git commit -m <span class="string">"Fix the bug on the photo upload page"</span></span><br><span class="line">[master 3a99538] Fix the bug on the photo upload page</span><br><span class="line"> 2 files changed, 2 insertions(+), 2 deletions(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3a99538 (HEAD -&gt; master) Fix the bug on the photo upload page</span><br><span class="line">| * abb7001 (bugfix-photo-upload) Update file1.js</span><br><span class="line">| * c699541 Update audience.txt</span><br><span class="line">|/</span><br><span class="line">* 5f99ab9 Revert <span class="string">"Merge branch 'bugfix-change-password'"</span></span><br></pre></td></tr></table></figure><p>实际上并没有merge:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch</span><br><span class="line">  bugfix-change-password</span><br><span class="line">  bugfix-photo-upload</span><br><span class="line">  bugfix-signup-form</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">(master)$ git branch --merge</span><br><span class="line">  bugfix-change-password</span><br><span class="line">  bugfix-signup-form</span><br><span class="line">* master</span><br><span class="line"></span><br><span class="line">(master)$ git branch --no-merge</span><br><span class="line">  bugfix-photo-upload</span><br></pre></td></tr></table></figure><p>删除bugfix-photo-upload后可以看到，只剩一个总的commit记录了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git branch -D bugfix-photo-upload</span><br><span class="line">Deleted branch bugfix-photo-upload (was abb7001).</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3a99538 (HEAD -&gt; master) Fix the bug on the photo upload page</span><br><span class="line">* 5f99ab9 Revert <span class="string">"Merge branch 'bugfix-change-password'"</span></span><br></pre></td></tr></table></figure><h1 id="Rebasing"><a href="#Rebasing" class="headerlink" title="Rebasing"></a>Rebasing</h1><p>（图与 demo 不十分吻合，在 demo 中 feature 分支只有一个 commit）</p><ol><li>初始状态：master 和 feature-shopping-cart 是 diverse 的，要么用 3-way merge,要么将feature-shopping-cart 分支 rebase，总之是不能 fast-forward merge 的</li></ol><p><img src="/images/Git/4_15.png" alt="4_15" style="zoom: 50%;"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 4026973 (HEAD -&gt; master) update toc.txt</span><br><span class="line">| * 34112c9 (feature-shopping-cart) add cart.txt</span><br><span class="line">|/</span><br><span class="line">* 7370c4a update</span><br></pre></td></tr></table></figure><ol><li><p>将 feature-shopping-cart 分支 rebase 到 master 指向的 commit:</p><p><img src="/images/Git/4_17.png" alt="4_17" style="zoom:50%;"></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch feature-shopping-cart</span><br><span class="line">Switched to branch <span class="string">'feature-shopping-cart'</span></span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ git rebase master</span><br><span class="line">Successfully rebased and updated refs/heads/feature-shopping-cart.</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 21dc4d0 (HEAD -&gt; feature-shopping-cart) add cart.txt</span><br><span class="line">* 4026973 (master) update toc.txt</span><br><span class="line">* 7370c4a update</span><br></pre></td></tr></table></figure><ol><li><p>现在可以 fast-forward merge 了：</p><p><img src="/images/Git/4_18.png" alt="4_18" style="zoom:50%;"></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(feature-shopping-cart)</span><br><span class="line">$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$ git merge feature-shopping-cart</span><br><span class="line">Updating 4026973..21dc4d0</span><br><span class="line">Fast-forward</span><br><span class="line"> cart.txt | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 cart.txt</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 21dc4d0 (HEAD -&gt; master, feature-shopping-cart) add cart.txt</span><br><span class="line">* 4026973 update toc.txt</span><br><span class="line">* 7370c4a update</span><br></pre></td></tr></table></figure><hr><p>但是，rebasing 很有可能会有 conflict，如下例中 master 和 feature-shopping-cart 各自更改toc.txt，就不能将 feature-shopping-cart rebase 到 master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">(master)$ <span class="built_in">echo</span> ocean &gt; toc.txt</span><br><span class="line"></span><br><span class="line">(master)$ git commit -am <span class="string">"Update toc.txt"</span></span><br><span class="line">[master f2e571a] Update toc.txt</span><br><span class="line"> 1 file changed, 1 insertion(+), 2 deletions(-)</span><br><span class="line"></span><br><span class="line">(master)$ git switch feature-shopping-cart</span><br><span class="line">Switched to branch <span class="string">'feature-shopping-cart'</span></span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ <span class="built_in">echo</span> mountain &gt; toc.txt</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ git commit -am <span class="string">"add mountain to toc.txt"</span></span><br><span class="line">[feature-shopping-cart 06ee042] add mountain to toc.txt</span><br><span class="line"> 1 file changed, 1 insertion(+), 2 deletions(-)</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 06ee042 (HEAD -&gt; feature-shopping-cart) add mountain to toc.txt</span><br><span class="line">| * f2e571a (master) Update toc.txt</span><br><span class="line">|/</span><br><span class="line">* 21dc4d0 add cart.txt</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ git rebase master</span><br><span class="line">error: could not apply 06ee042... add mountain to toc.txt</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply 06ee042... add mountain to toc.txt</span><br><span class="line">Auto-merging toc.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> toc.txt</span><br></pre></td></tr></table></figure><p>用p4merge解决一下conflict：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(feature-shopping-cart|REBASE 1/1)$ git mergetool</span><br><span class="line">Merging:</span><br><span class="line">toc.txt</span><br><span class="line"></span><br><span class="line">Normal merge conflict <span class="keyword">for</span> <span class="string">'toc.txt'</span>:</span><br><span class="line">  &#123;<span class="built_in">local</span>&#125;: modified file</span><br><span class="line">  &#123;remote&#125;: modified file</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart|REBASE 1/1)$ git rebase --abort</span><br></pre></td></tr></table></figure><p>toc.txt.orig 是解决冲突的时候产生的额外文件，删掉就好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(feature-shopping-cart)$ git status</span><br><span class="line">On branch feature-shopping-cart</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        toc.txt.orig</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">"git add"</span> to track)</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ cat toc.txt.orig</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">ocean</span><br><span class="line">=======</span><br><span class="line">mountain</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06ee042 (add mountain to toc.txt)</span><br><span class="line"></span><br><span class="line">(feature-shopping-cart)$ git clean -fd</span><br><span class="line">Removing toc.txt.orig</span><br></pre></td></tr></table></figure><p>为了不产生这种文件，可以设置一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(feature-shopping-cart)$ git config --global mergetool.keepBackup <span class="literal">false</span></span><br></pre></td></tr></table></figure><h1 id="Cherry-Picking"><a href="#Cherry-Picking" class="headerlink" title="Cherry Picking"></a>Cherry Picking</h1><p><img src="/images/Git/4_19.png" alt="4_19" style="zoom:50%;"></p><p>比如 F1 是有意思的commit，我们想要提交到master，但是我们还没有准备好将feature分支merge 到 master 分支，可以 cherry picking F1 到 master。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 06ee042 (feature-shopping-cart) add mountain to toc.txt</span><br><span class="line">| * f2e571a (HEAD -&gt; master) Update toc.txt</span><br><span class="line">|/</span><br><span class="line">* dc9b37f add toc.txt</span><br><span class="line"></span><br><span class="line">(master)$ git cherry-pick 06ee042</span><br><span class="line">Auto-merging toc.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> toc.txt</span><br><span class="line">error: could not apply 06ee042... add mountain to toc.txt</span><br><span class="line">hint: after resolving the conflicts, mark the corrected paths</span><br><span class="line">hint: with <span class="string">'git add &lt;paths&gt;'</span> or <span class="string">'git rm &lt;paths&gt;'</span></span><br><span class="line">hint: and commit the result with <span class="string">'git commit'</span></span><br><span class="line"></span><br><span class="line">(master|CHERRY-PICKING)$ git mergetool</span><br><span class="line">Merging:</span><br><span class="line">toc.txt</span><br><span class="line"></span><br><span class="line">Normal merge conflict <span class="keyword">for</span> <span class="string">'toc.txt'</span>:</span><br><span class="line">  &#123;<span class="built_in">local</span>&#125;: modified file</span><br><span class="line">  &#123;remote&#125;: modified file</span><br><span class="line"></span><br><span class="line">(master|CHERRY-PICKING)$ git status -s</span><br><span class="line">M  toc.txt</span><br><span class="line"></span><br><span class="line">(master|CHERRY-PICKING)$ git commit</span><br><span class="line">[master 3fcca9a] add mountain to toc.txt</span><br><span class="line"> Date: Mon Apr 26 21:54:11 2021 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all --graph</span><br><span class="line">* 3fcca9a (HEAD -&gt; master) add mountain to toc.txt</span><br><span class="line">* f2e571a Update toc.txt</span><br><span class="line">| * 06ee042 (feature-shopping-cart) add mountain to toc.txt</span><br><span class="line">|/</span><br><span class="line">* dc9b37f add toc.txt</span><br></pre></td></tr></table></figure><p>最后可以看到master前进了一个commit，而且是pick了feature-shopping-cart分支的commit。</p><h1 id="Picking-Files-from-Another-Branch"><a href="#Picking-Files-from-Another-Branch" class="headerlink" title="Picking Files from Another Branch"></a>Picking Files from Another Branch</h1><p>是 picking files, 而不是 picking commit 了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git switch -C feature-send-email</span><br><span class="line">Switched to a new branch <span class="string">'feature-send-email'</span></span><br><span class="line"></span><br><span class="line">(feature-send-email)$ <span class="built_in">echo</span> river &gt; toc.txt</span><br><span class="line"></span><br><span class="line">(feature-send-email)$ git commit -am <span class="string">"Update toc.txt"</span></span><br><span class="line">[feature-send-email 4680781] Update toc.txt</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line"></span><br><span class="line">(feature-send-email)$ git switch master</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br></pre></td></tr></table></figure><p>使用 git restore：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git restore --<span class="built_in">source</span>=feature-send-email -- toc.txt</span><br><span class="line"></span><br><span class="line">(master)$ git status -s</span><br><span class="line"> M toc.txt</span><br><span class="line"></span><br><span class="line">(master)$ cat toc.txt</span><br><span class="line">river</span><br></pre></td></tr></table></figure><p>然后就可以在 master 分支上提交了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;What-are-Branches&quot;&gt;&lt;a href=&quot;#What-are-Branch
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="job notes-git" scheme="http://yoursite.com/tags/job-notes-git/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Git课程笔记(3)--Browsing History</title>
    <link href="http://yoursite.com/2021/04/23/20210423_Git003/"/>
    <id>http://yoursite.com/2021/04/23/20210423_Git003/</id>
    <published>2021-04-23T13:50:09.000Z</published>
    <updated>2021-04-30T07:19:04.509Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="Viewing-the-History"><a href="#Viewing-the-History" class="headerlink" title="Viewing the History"></a>Viewing the History</h1><p>基本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>用 —oneline 查看简略信息，—stat 显示每个文件增删的行数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><p>—patch 查看每个文件具体的内容更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --patch</span><br></pre></td></tr></table></figure><h1 id="Filtering-the-History"><a href="#Filtering-the-History" class="headerlink" title="Filtering the History"></a>Filtering the History</h1><p>用 -3 表示只查看前三条历史commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 Initial commit</span><br><span class="line">3fd1e3e Remove unused code</span><br><span class="line">b184de1 Remove unused code</span><br><span class="line">dd03e4e Fix the bug</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br><span class="line">568c0fc Initial commit.</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --oneline -3</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br></pre></td></tr></table></figure><p>用 author 名字过滤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --author=<span class="string">"Stone"</span></span><br></pre></td></tr></table></figure><p>用时间过滤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --after=<span class="string">"2021-04-21"</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --after=<span class="string">"yesterday"</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline --after=<span class="string">"one week ago"</span></span><br></pre></td></tr></table></figure><p>用 commit 时的 message 过滤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --grep=<span class="string">"add"</span></span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br></pre></td></tr></table></figure><p>用具体更改的内容过滤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline -S<span class="string">"world"</span> --patch</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">deleted file mode 100644</span><br><span class="line">index 29887f9..0000000</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ /dev/null</span><br><span class="line">@@ -1,3 +0,0 @@</span><br><span class="line">-hello world</span><br><span class="line">-sky</span><br><span class="line">-sun</span><br></pre></td></tr></table></figure><p>根据 ID 选取某区间的 commit 历史：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js            //----------到此为止--------------</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files              //---------从这上一行往上-----------</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 Initial commit</span><br><span class="line">3fd1e3e Remove unused code</span><br><span class="line">b184de1 Remove unused code</span><br><span class="line">dd03e4e Fix the bug</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br><span class="line">568c0fc Initial commit.</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --oneline 62416e2..9b82d1b</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br></pre></td></tr></table></figure><p>查看某个文件的修改 commit 历史：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline file1.js</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br></pre></td></tr></table></figure><p>如果报错说不清楚，就在文件名之前加—</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline -- file1.js</span><br></pre></td></tr></table></figure><p>查看该文件的具体内容修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --patch -- file1.js</span><br></pre></td></tr></table></figure><h1 id="Formatting-the-Log-Output"><a href="#Formatting-the-Log-Output" class="headerlink" title="Formatting the Log Output"></a>Formatting the Log Output</h1><p>调整 log 格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --pretty=format:<span class="string">"%Cgreen%an%Creset committed %h on %cd"</span></span><br></pre></td></tr></table></figure><p><img src="/images/Git/3_01.png" alt="3_01"></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%Cgreen</span></span><br><span class="line"><span class="keyword">switch</span> color to green</span><br><span class="line"></span><br><span class="line"><span class="comment">%an</span></span><br><span class="line">author name</span><br><span class="line"></span><br><span class="line"><span class="comment">%Creset</span></span><br><span class="line">reset color</span><br><span class="line"></span><br><span class="line"><span class="comment">%H</span></span><br><span class="line">commit hash</span><br><span class="line"></span><br><span class="line"><span class="comment">%h</span></span><br><span class="line">abbreviated commit hash</span><br><span class="line"></span><br><span class="line"><span class="comment">%cd</span></span><br><span class="line">committer date (format respects --date= option)</span><br></pre></td></tr></table></figure><h1 id="Creating-Aliases"><a href="#Creating-Aliases" class="headerlink" title="Creating Aliases"></a>Creating Aliases</h1><p>给加格式的 log 命令起个别名： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global alias.lg <span class="string">"log --pretty=format:'%an committed %h'"</span></span><br></pre></td></tr></table></figure><p>就可以方便地使用啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git lg</span><br><span class="line">Stone committed d7d9bfb</span><br><span class="line">Stone committed d2acf0e</span><br><span class="line">Stone committed 9b82d1b</span><br><span class="line">Stone committed 78daaab</span><br></pre></td></tr></table></figure><p>起别名的另一个例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global alias.unstage <span class="string">"restore --staged ."</span></span><br><span class="line"></span><br><span class="line">$ git unstage</span><br></pre></td></tr></table></figure><h1 id="Viewing-a-Commit"><a href="#Viewing-a-Commit" class="headerlink" title="Viewing a Commit"></a>Viewing a Commit</h1><p>查看详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git show HEAD~2</span><br><span class="line">commit 9b82d1b30e0ea17c2a63732ede1652f7ad0da29b</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Thu Apr 22 19:04:57 2021 +0800</span><br><span class="line"></span><br><span class="line">    Add file1.js</span><br><span class="line"></span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..ce01362</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+hello</span><br></pre></td></tr></table></figure><p>查看该commit版本的某文件的具体内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git show HEAD~2:file1.js</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>查看简略信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ git show HEAD~2 --name-only</span><br><span class="line">commit 9b82d1b30e0ea17c2a63732ede1652f7ad0da29b</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Thu Apr 22 19:04:57 2021 +0800</span><br><span class="line"></span><br><span class="line">    Add file1.js</span><br><span class="line"></span><br><span class="line">file1.js</span><br><span class="line"></span><br><span class="line">$ git show HEAD~2 --name-status</span><br><span class="line">commit 9b82d1b30e0ea17c2a63732ede1652f7ad0da29b</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Thu Apr 22 19:04:57 2021 +0800</span><br><span class="line"></span><br><span class="line">    Add file1.js</span><br><span class="line"></span><br><span class="line">A       file1.js</span><br></pre></td></tr></table></figure><p>最后一行的A 表示“added”</p><h1 id="Viewing-the-Changes-Across-Commits"><a href="#Viewing-the-Changes-Across-Commits" class="headerlink" title="Viewing the Changes Across Commits"></a>Viewing the Changes Across Commits</h1><p>查看两个commit版本的区别：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git diff HEAD~2 HEAD</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">index ce01362..24defb6 100644</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -1 +1,2 @@</span><br><span class="line"> hello</span><br><span class="line">+A new line of code</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><p>查看区别的简略信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git diff HEAD~2 HEAD --name-only</span><br><span class="line">file1.js</span><br><span class="line"></span><br><span class="line">$ git diff HEAD~2 HEAD --name-status</span><br><span class="line">M       file1.js</span><br></pre></td></tr></table></figure><p>上面代码块的最后一行中的“M”表示“modified”。</p><p>查看两个commit版本中某个文件的区别：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git diff HEAD~2 HEAD file1.js</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">index ce01362..24defb6 100644</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -1 +1,2 @@</span><br><span class="line"> hello</span><br><span class="line">+A new line of code</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><h1 id="Checking-Out-a-Commit"><a href="#Checking-Out-a-Commit" class="headerlink" title="Checking Out a Commit"></a>Checking Out a Commit</h1><p>LAST表示最近commit，FIRST表示最初commit:</p><p><img src="/images/Git/3_03 (7).png" alt="3_03 (7)" style="zoom: 25%;"></p><p>MASTER分支指针指向该分支最近的commit:</p><p><img src="/images/Git/3_03 (1).png" alt="3_03 (1)" style="zoom:25%;"></p><p>master只是其中的一个分支，事实上一个project可能会有许多分支，所以要用HEAD指向当前working的分支：</p><p><img src="/images/Git/3_03 (2).png" alt="3_03 (2)" style="zoom:25%;"></p><p>使用 git checkout 命令之后，HEAD指向指定的commit了：</p><p><img src="/images/Git/3_03 (3).png" alt="3_03 (3)" style="zoom:25%;"></p><p>具体例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git checkout d6f4cc6</span><br><span class="line">Note: switching to <span class="string">'d6f4cc6'</span>.</span><br><span class="line"></span><br><span class="line">You are <span class="keyword">in</span> <span class="string">'detached HEAD'</span> state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make <span class="keyword">in</span> this</span><br><span class="line">state without impacting any branches by switching back to a branch.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line"><span class="keyword">do</span> so (now or later) by using -c with the switch <span class="built_in">command</span>. Example:</span><br><span class="line"></span><br><span class="line">  git switch -c &lt;new-branch-name&gt;</span><br><span class="line"></span><br><span class="line">Or undo this operation with:</span><br><span class="line"></span><br><span class="line">  git switch -</span><br><span class="line"></span><br><span class="line">Turn off this advice by setting config variable advice.detachedHead to <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">HEAD is now at d6f4cc6 Initial commit</span><br></pre></td></tr></table></figure><p>HEAD指向d6f4cc6而不是master了，所以是’detached HEAD’ state。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">((d6f4cc6...))$ git <span class="built_in">log</span> --oneline</span><br><span class="line">d6f4cc6 (HEAD) Initial commit</span><br><span class="line">3fd1e3e Remove unused code</span><br><span class="line">b184de1 Remove unused code</span><br><span class="line">dd03e4e Fix the bug</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br><span class="line">568c0fc Initial commit.</span><br><span class="line"></span><br><span class="line">((d6f4cc6...))$ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">d7d9bfb (master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 (HEAD) Initial commit</span><br><span class="line">3fd1e3e Remove unused code</span><br><span class="line">b184de1 Remove unused code</span><br><span class="line">dd03e4e Fix the bug</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br><span class="line">568c0fc Initial commit.</span><br></pre></td></tr></table></figure><p>此时不能有new commit了，因为如果有new commit:</p><p><img src="/images/Git/3_03 (5).png" alt="3_03 (5)" style="zoom:25%;"></p><p>当HEAD指回master时：</p><p><img src="/images/Git/3_03 (6).png" alt="3_03 (6)" style="zoom:25%;"></p><p>这个new commit再也无法被访问到，就是一个dead commit了。</p><p>HEAD指回master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">((6f4cc6...))$ git checkout master</span><br><span class="line">Previous HEAD position was d6f4cc6 Initial commit</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$</span><br></pre></td></tr></table></figure><h1 id="Finding-Bugs-Using-Bisect"><a href="#Finding-Bugs-Using-Bisect" class="headerlink" title="Finding Bugs Using Bisect"></a>Finding Bugs Using Bisect</h1><p>可以用Bisect查找是哪次commit有bug</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 Initial commit</span><br></pre></td></tr></table></figure><p>开始。如果当前commit是bad commit，告诉它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master)$ git bisect start</span><br><span class="line"></span><br><span class="line">(master|BISECTING)$ git bisect bad</span><br></pre></td></tr></table></figure><p>检查发现最开始的commit是good commit，告诉它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(master|BISECTING)$ git bisect good d6f4cc6</span><br><span class="line">Bisecting: 5 revisions left to <span class="built_in">test</span> after this (roughly 3 steps)</span><br><span class="line">[fdb7fb6ef27ebfafaa2f7941201c2492c9f9d5ce] add data</span><br></pre></td></tr></table></figure><p>说是需要检查5个修改，大概要3个步骤。</p><p>可以看到HEAD detach了，指向 good commit 和 bad commit 中间的 commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">((fdb7fb6...)|BISECTING) $ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">d7d9bfb (master, refs/bisect/bad) refactor file1    //---------bad--------</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 (HEAD) add data//---------HEAD--------</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 (refs/bisect/good-d6f4cc6574d699b11d91e52aa10543baf65c9af3) Initial commit//---------good--------</span><br></pre></td></tr></table></figure><p>当前commit是good commit，告诉它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">((fdb7fb6...)|BISECTING)$ git bisect good</span><br><span class="line">Bisecting: 2 revisions left to <span class="built_in">test</span> after this (roughly 2 steps)</span><br><span class="line">[78daaab1d24ce993cbd82ab972cfeb9612369ed8] Delete file1.js</span><br></pre></td></tr></table></figure><p>说是还需要检查2个修改，大概要2个步骤。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">((78daaab...)|BISECTING)$ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">d7d9bfb (master, refs/bisect/bad) refactor file1//---------bad--------</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab (HEAD) Delete file1.js//---------HEAD--------</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 (refs/bisect/good-fdb7fb6ef27ebfafaa2f7941201c2492c9f9d5ce) add data//---------new good--------</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 (refs/bisect/good-d6f4cc6574d699b11d91e52aa10543baf65c9af3) Initial commit//---------old good--------</span><br></pre></td></tr></table></figure><p>Once again:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">((78daaab...)|BISECTING)$ git bisect good</span><br><span class="line">Bisecting: 0 revisions left to <span class="built_in">test</span> after this (roughly 1 step)</span><br><span class="line">[d2acf0efae32ea3ffc555fbfc6e432a656dba66c] Refactor code</span><br><span class="line"></span><br><span class="line">((d2acf0e...)|BISECTING)$ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">d7d9bfb (master, refs/bisect/bad) refactor file1//----------bad--------</span><br><span class="line">d2acf0e (HEAD) Refactor code//---------HEAD--------</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">78daaab (refs/bisect/good-78daaab1d24ce993cbd82ab972cfeb9612369ed8) Delete file1.js//---------new good--------</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 (refs/bisect/good-fdb7fb6ef27ebfafaa2f7941201c2492c9f9d5ce) add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 (refs/bisect/good-d6f4cc6574d699b11d91e52aa10543baf65c9af3) Initial commit</span><br></pre></td></tr></table></figure><p>Once again:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">((d2acf0e...)|BISECTING)$ git bisect bad</span><br><span class="line">Bisecting: 0 revisions left to <span class="built_in">test</span> after this (roughly 0 steps)</span><br><span class="line">[9b82d1b30e0ea17c2a63732ede1652f7ad0da29b] Add file1.js</span><br><span class="line"></span><br><span class="line">((9b82d1b...)|BISECTING)$ git <span class="built_in">log</span> --oneline --all</span><br><span class="line">d7d9bfb (master) refactor file1</span><br><span class="line">d2acf0e (refs/bisect/bad) Refactor code</span><br><span class="line">9b82d1b (HEAD) Add file1.js</span><br><span class="line">78daaab (refs/bisect/good-78daaab1d24ce993cbd82ab972cfeb9612369ed8) Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 (refs/bisect/good-fdb7fb6ef27ebfafaa2f7941201c2492c9f9d5ce) add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 (refs/bisect/good-d6f4cc6574d699b11d91e52aa10543baf65c9af3) Initial commit</span><br></pre></td></tr></table></figure><p>也可以用HEAD：好的，终于找到了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">((9b82d1b...)|BISECTING)$ git bisect bad</span><br><span class="line">9b82d1b30e0ea17c2a63732ede1652f7ad0da29b is the first bad commit</span><br><span class="line">commit 9b82d1b30e0ea17c2a63732ede1652f7ad0da29b</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Thu Apr 22 19:04:57 2021 +0800</span><br><span class="line"></span><br><span class="line">    Add file1.js</span><br><span class="line"></span><br><span class="line"> file1.js | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 file1.js</span><br></pre></td></tr></table></figure><p>HEAD指回master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">((9b82d1b...)|BISECTING)$ git bisect reset</span><br><span class="line">Previous HEAD position was 9b82d1b Add file1.js</span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line"></span><br><span class="line">(master)$</span><br></pre></td></tr></table></figure><h1 id="Finding-Contributors-Using-Shortlog"><a href="#Finding-Contributors-Using-Shortlog" class="headerlink" title="Finding Contributors Using Shortlog"></a>Finding Contributors Using Shortlog</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ git shortlog -n</span><br><span class="line">Stone (19):</span><br><span class="line">      Initial commit.</span><br><span class="line">      add line</span><br><span class="line">      add Lines</span><br><span class="line">      Fix the bug</span><br><span class="line">      Remove unused code</span><br><span class="line">      Remove unused code</span><br><span class="line">      Initial commit</span><br><span class="line">      Refactor code</span><br><span class="line">      Add gitignore</span><br><span class="line">      modified</span><br><span class="line">      modified</span><br><span class="line">      add files</span><br><span class="line">      add data</span><br><span class="line">      remove all js files</span><br><span class="line">      commit file1.ls</span><br><span class="line">      Delete file1.js</span><br><span class="line">      Add file1.js</span><br><span class="line">      Refactor code</span><br><span class="line">      refactor file1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git shortlog -n -s</span><br><span class="line">    19  Stone</span><br><span class="line"></span><br><span class="line">$ git shortlog -n -s -e</span><br><span class="line">    19  Stone &lt;masaike@qq.com&gt;</span><br><span class="line"></span><br><span class="line">$ git shortlog -n -s -e --after=<span class="string">"2020-04-21"</span></span><br><span class="line">    19  Stone &lt;masaike@qq.com&gt;</span><br><span class="line"></span><br><span class="line">$ git shortlog -n -s -e --before=<span class="string">"2021-04-22"</span></span><br><span class="line">    12  Stone &lt;masaike@qq.com&gt;</span><br></pre></td></tr></table></figure><h1 id="Viewing-the-History-of-a-File"><a href="#Viewing-the-History-of-a-File" class="headerlink" title="Viewing the History of a File"></a>Viewing the History of a File</h1><p>查看某文件的修改历史（简略信息）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline file1.js</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br></pre></td></tr></table></figure><p>查看文件修改的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --<span class="built_in">stat</span> file1.js</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line"> file1.js | 2 +-</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line"> file1.js | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line"> file1.js | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure><p>具体信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --patch file1.js</span><br><span class="line">d7d9bfb (HEAD -&gt; master) refactor file1</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">index 56f593b..24defb6 100644</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -1,2 +1,2 @@</span><br><span class="line"> hello</span><br><span class="line">-A new line of code</span><br><span class="line">+A new line of code</span><br><span class="line">\ No newline at end of file</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">index ce01362..56f593b 100644</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -1 +1,2 @@</span><br><span class="line"> hello</span><br><span class="line">+A new line of code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..ce01362</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+hello</span><br></pre></td></tr></table></figure><h1 id="Restoring-a-Deleted-File"><a href="#Restoring-a-Deleted-File" class="headerlink" title="Restoring a Deleted File"></a>Restoring a Deleted File</h1><p>不小心删除了文件file1.js：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git rm file1.js</span><br><span class="line">rm <span class="string">'file1.js'</span></span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Remove file1.js"</span></span><br><span class="line">[master e2ebefd] Remove file1.js</span><br><span class="line"> 1 file changed, 2 deletions(-)</span><br><span class="line"> delete mode 100644 file1.js</span><br></pre></td></tr></table></figure><p>想恢复它，就从d7d9bfb的commit恢复到本地目录，然后重新commit到仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline -- file1.js</span><br><span class="line">e2ebefd (HEAD -&gt; master) Remove file1.js</span><br><span class="line">d7d9bfb refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br><span class="line"></span><br><span class="line">$ git checkout d7d9bfb file1.js</span><br><span class="line">Updated 1 path from 8623496</span><br><span class="line"></span><br><span class="line">$ git status -s</span><br><span class="line">A  file1.js</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Restore file1.js"</span></span><br><span class="line">[master 9328b9b] Restore file1.js</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 file1.js</span><br></pre></td></tr></table></figure><h1 id="Blaming"><a href="#Blaming" class="headerlink" title="Blaming"></a>Blaming</h1><p>Find the author of a perticular line （看看是谁写的烂代码）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git blame file1.js</span><br><span class="line">9328b9b8 (Stone 2021-04-23 15:10:50 +0800 1) hello</span><br><span class="line">49019215 (Stone 2021-04-23 15:19:09 +0800 2) A new line of code</span><br><span class="line">49019215 (Stone 2021-04-23 15:19:09 +0800 3) Sky</span><br><span class="line">49019215 (Stone 2021-04-23 15:19:09 +0800 4) Moon</span><br></pre></td></tr></table></figure><p>加上-e看邮件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git blame -e file1.js</span><br><span class="line">9328b9b8 (&lt;masaike@qq.com&gt; 2021-04-23 15:10:50 +0800 1) hello</span><br><span class="line">49019215 (&lt;masaike@qq.com&gt; 2021-04-23 15:19:09 +0800 2) A new line of code</span><br><span class="line">49019215 (&lt;masaike@qq.com&gt; 2021-04-23 15:19:09 +0800 3) Sky</span><br><span class="line">49019215 (&lt;masaike@qq.com&gt; 2021-04-23 15:19:09 +0800 4) Moon</span><br></pre></td></tr></table></figure><p>加上-L看某几行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git blame -e -L 1,2 file1.js</span><br><span class="line">9328b9b8 (&lt;masaike@qq.com&gt; 2021-04-23 15:10:50 +0800 1) hello</span><br><span class="line">49019215 (&lt;masaike@qq.com&gt; 2021-04-23 15:19:09 +0800 2) A new line of code</span><br></pre></td></tr></table></figure><h1 id="Tagging"><a href="#Tagging" class="headerlink" title="Tagging"></a>Tagging</h1><p>给某次commit加个tag（实际上是个指向该commit的指针）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag v1.0 9328b9b</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline</span><br><span class="line">4901921 (HEAD -&gt; master) add 2 lines <span class="keyword">in</span> file1.js</span><br><span class="line">9328b9b (tag: v1.0) Restore file1.js      //----------------------------</span><br><span class="line">e2ebefd Remove file1.js</span><br><span class="line">d7d9bfb refactor file1</span><br><span class="line">d2acf0e Refactor code</span><br><span class="line">9b82d1b Add file1.js</span><br></pre></td></tr></table></figure><p>然后就可以用这个tag表示这个commit了，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout v1.0</span><br></pre></td></tr></table></figure><p>给当前commit（即MASTER指向的）起个详细的tag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v1.1 -m <span class="string">"My version 1.1"</span></span><br></pre></td></tr></table></figure><p>查看目前的所有tags：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git tag</span><br><span class="line">v1.0</span><br><span class="line">v1.1</span><br><span class="line"></span><br><span class="line">$ git tag -n</span><br><span class="line">v1.0            Restore file1.js       //-----和commit信息一样-----</span><br><span class="line">v1.1            My version 1.1   //------tag信息------------</span><br></pre></td></tr></table></figure><p>在此例中，v1.0是个lightweight tag，v1.1是个annotated tag。</p><p>annotated tag可以显示更详细的信息：加tag者的信息和commit的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ git show v1.1</span><br><span class="line">tag v1.1</span><br><span class="line">Tagger: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 23 15:27:43 2021 +0800</span><br><span class="line"></span><br><span class="line">My version 1.1</span><br><span class="line"></span><br><span class="line">commit 490192157cd80c704f4f85e2b2883685e3423f91 (HEAD -&gt; master, tag: v1.1)</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Fri Apr 23 15:19:09 2021 +0800</span><br><span class="line"></span><br><span class="line">    add 2 lines <span class="keyword">in</span> file1.js</span><br><span class="line"></span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">index 24defb6..e27584b 100644</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -1,2 +1,4 @@</span><br><span class="line"> hello</span><br><span class="line">-A new line of code</span><br><span class="line">\ No newline at end of file</span><br><span class="line">+A new line of code</span><br><span class="line">+Sky</span><br><span class="line">+Moon</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><p>删除tag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -d v1.1</span><br><span class="line">Deleted tag <span class="string">'v1.1'</span> (was c847e27)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Viewing-the-History&quot;&gt;&lt;a href=&quot;#Viewing-the-H
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="job notes-git" scheme="http://yoursite.com/tags/job-notes-git/"/>
    
  </entry>
  
  <entry>
    <title>Mosh的Git课程笔记(2)--Creating Snapshots</title>
    <link href="http://yoursite.com/2021/04/21/20210421_Git002/"/>
    <id>http://yoursite.com/2021/04/21/20210421_Git002/</id>
    <published>2021-04-21T13:50:09.000Z</published>
    <updated>2021-04-30T07:19:26.960Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codewithmosh.com/" target="_blank" rel="noopener">Mosh的课程网址</a></p><h1 id="初始化一个仓库"><a href="#初始化一个仓库" class="headerlink" title="初始化一个仓库"></a>初始化一个仓库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir Moon</span><br><span class="line"><span class="built_in">cd</span> Moon</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p>在目录Moon下有一个.git隐藏文件夹，可以用以下命令看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -a</span><br></pre></td></tr></table></figure><p>删除.git：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .git</span><br></pre></td></tr></table></figure><h1 id="Git-Workflow"><a href="#Git-Workflow" class="headerlink" title="Git Workflow"></a>Git Workflow</h1><p>本地directory→staging area (index)→repository</p><h2 id="Staging-Files"><a href="#Staging-Files" class="headerlink" title="Staging Files"></a>Staging Files</h2><p><img src="/images/Git/01.png" alt="01"></p><p>用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>查看，标红是因为新建的两个txt文件还没在staging area中。</p><p>使用下面的命令将两个文件的<strong>变化</strong>（新建/删除文件，文件内容更改）存入staging area中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add file1.txt file2.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add *.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>上面三种方式，（1）就add这两个文件;（2）add所有txt文件;（3）add所有文件</p><p>然后再查看，就绿了：</p><p><img src="/images/Git/02.png" alt="02"></p><h2 id="Committing-Changes"><a href="#Committing-Changes" class="headerlink" title="Committing Changes"></a>Committing Changes</h2><p>提交到仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"Initial commit."</span></span><br></pre></td></tr></table></figure><h2 id="Committing-Best-Practices"><a href="#Committing-Best-Practices" class="headerlink" title="Committing Best Practices"></a>Committing Best Practices</h2><ul><li>commit的时候文件的变化量应该适中（不要太多，也不要太少）</li><li>Commit often: 想要记录下某个状态时，就commit</li><li>Make it mean something</li></ul><p>例如：对于两个改变 (1) Bug Fix,  (2) Typo 最好不要一起commit，不然不知道改了啥，最好分开commit</p><h2 id="Skipping-the-Staging-Area"><a href="#Skipping-the-Staging-Area" class="headerlink" title="Skipping the Staging Area"></a>Skipping the Staging Area</h2><p>使用 -a 选项跳过git add</p><p>可以将两个选项 -a 和 -m 合并写成 -am</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am <span class="string">"Fix the bug"</span></span><br></pre></td></tr></table></figure><h1 id="Remove-Files"><a href="#Remove-Files" class="headerlink" title="Remove Files"></a>Remove Files</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ rm file1.txt</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git restore &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        deleted:    file1.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line"></span><br><span class="line">$ git ls-files</span><br><span class="line">file1.txt</span><br><span class="line">file2.txt</span><br></pre></td></tr></table></figure><p>在本地目录下删除file1.txt，但是用git ls-files查看staging area中的文件会发现file1.txt还在其中。使用git add更新staging area然后commit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ git add file1.txt</span><br><span class="line"></span><br><span class="line">$ git ls-files</span><br><span class="line">file2.txt</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git restore --staged &lt;file&gt;..."</span> to unstage)</span><br><span class="line">        deleted:    file1.txt</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Remove unused code"</span></span><br><span class="line">[master b184de1] Remove unused code</span><br><span class="line"> 1 file changed, 7 deletions(-)</span><br><span class="line"> delete mode 100644 file1.txt</span><br></pre></td></tr></table></figure><p>除了上面的方法，也可以使用以下方法（git rm）一次性删除本地目录和staging area中的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ git rm file2.txt</span><br><span class="line">rm <span class="string">'file2.txt'</span></span><br><span class="line"></span><br><span class="line">$ git ls-files</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git restore --staged &lt;file&gt;..."</span> to unstage)</span><br><span class="line">        deleted:    file2.txt</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Remove unused code"</span></span><br><span class="line">[master 3fd1e3e] Remove unused code</span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line"> delete mode 100644 file2.txt</span><br></pre></td></tr></table></figure><h1 id="Renaming-and-Moving-Files"><a href="#Renaming-and-Moving-Files" class="headerlink" title="Renaming and Moving Files"></a>Renaming and Moving Files</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ mv file1.txt main.js</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git restore &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        deleted:    file1.txt</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        main.js</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line"></span><br><span class="line">$ git add file1.txt</span><br><span class="line"></span><br><span class="line">$ git add main.js</span><br><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> main.js.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git restore --staged &lt;file&gt;..."</span> to unstage)</span><br><span class="line">        renamed:    file1.txt -&gt; main.js</span><br></pre></td></tr></table></figure><p>文件的更名涉及到两个变化，原文件file1.txt删除，以及新文件main.js的创建。</p><p>当然，也可以使用便捷的方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git mv file1.txt main.js</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git restore --staged &lt;file&gt;..."</span> to unstage)</span><br><span class="line">        renamed:    file1.txt -&gt; main.js</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Refactor code"</span></span><br><span class="line">[master 70800e8] Refactor code</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> rename file1.txt =&gt; main.js (100%)</span><br></pre></td></tr></table></figure><p>注意到0 insertions(+), 0 deletions(-)，改名而已。</p><h1 id="Ignoring-Files"><a href="#Ignoring-Files" class="headerlink" title="Ignoring Files"></a>Ignoring Files</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir logs</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> hello &gt; logs/dev.log</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        logs/</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">"git add"</span> to track)</span><br></pre></td></tr></table></figure><p>但是事实上我们并不想将log文件提交。方法：将 logs/ 写入.gitignore中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> logs/ &gt; .gitignore</span><br></pre></td></tr></table></figure><p>用vscode打开文件.gitignore</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ code .gitignore</span><br></pre></td></tr></table></figure><p>可以在 .gitignore 中的下一行写上*.log表示要忽略的文件类型。然后提交 .gitignore</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        .gitignore</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">"git add"</span> to track)</span><br><span class="line"></span><br><span class="line">$ git add .gitignore</span><br><span class="line">warning: LF will be replaced by CRLF <span class="keyword">in</span> .gitignore.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Add gitignore"</span></span><br><span class="line">[master 9ed82f0] Add gitignore</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 .gitignore</span><br></pre></td></tr></table></figure><p>之后log文件的改变都会被staging area忽略了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> hello &gt; logs/main.log</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><p>可以看到nothing to commit。</p><p>​        如果<strong>已经</strong>用 git add 不小心将 log 文件提交到 staging area 了（在写入.gitignore之前就交了），可以用命令删除 staging area 中的文件。先 help 一下看看用啥选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -h</span><br><span class="line">usage: git rm [&lt;options&gt;] [--] &lt;file&gt;...</span><br><span class="line"></span><br><span class="line">    -n, --dry-run         dry run</span><br><span class="line">    -q, --quiet           <span class="keyword">do</span> not list removed files</span><br><span class="line">    --cached              only remove from the index</span><br><span class="line">    -f, --force           override the up-to-date check</span><br><span class="line">    -r                    allow recursive removal</span><br><span class="line">    --ignore-unmatch      <span class="built_in">exit</span> with a zero status even <span class="keyword">if</span> nothing matched</span><br><span class="line">    --pathspec-from-file &lt;file&gt;</span><br><span class="line">                          <span class="built_in">read</span> pathspec from file</span><br><span class="line">    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git rm --cached -r logs/</span><br></pre></td></tr></table></figure><h1 id="Short-Status"><a href="#Short-Status" class="headerlink" title="Short Status"></a>Short Status</h1><p>git status 给出的信息易于理解，但是冗长：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> sky &gt;&gt; file1.js</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> sky &gt; file2.js</span><br><span class="line"></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git restore &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">        modified:   file1.js</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        file2.js</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br></pre></td></tr></table></figure><p>加 -s 选项：</p><p><img src="/images/Git/03.png" alt="03"></p><p>观察 M 的颜色变化，git add 之后 M 由红变绿，?? 变 A</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">M：表示modified</span><br><span class="line">A：表示added</span><br></pre></td></tr></table></figure><h1 id="Viewing-the-Staged-amp-Unstaged-Changes"><a href="#Viewing-the-Staged-amp-Unstaged-Changes" class="headerlink" title="Viewing the Staged &amp; Unstaged Changes"></a>Viewing the Staged &amp; Unstaged Changes</h1><p>Motivation: 有时候在将changes上传到staging area或commit到repository之前，要先看看改了啥，改得对不对。</p><p><strong>查看staged changes </strong>(在staging area中但是还没commit)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ git diff --staged</span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">index ce01362..7633964 100644</span><br><span class="line">--- a/file1.js</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -1 +1,3 @@</span><br><span class="line"> hello</span><br><span class="line">+sky</span><br><span class="line">+sun</span><br><span class="line">diff --git a/file2.js b/file2.js</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..f5e95e7</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/file2.js</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+sky</span><br></pre></td></tr></table></figure><p><strong>查看unstaged changes</strong>（在本地目录下，不在staging area中）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff</span><br></pre></td></tr></table></figure><p>比如在file1.js中将hello 改为 hello world：</p><p><img src="/images/Git/04.png" alt="04"></p><p>a是在staging area中的copy，b是本地目录下的copy</p><p>@@ -1,3 +1,3 @@ 表示旧版本（staging area中的）从第一行开始，有3行（-1,3）；新版本（本地目录下的）从第一行开始，有3行（+1,3）</p><p>标红的是旧版本内容，标绿的是新版本内容，白色的是未更改内容。</p><h2 id="Visual-Diff-Tools"><a href="#Visual-Diff-Tools" class="headerlink" title="Visual Diff Tools"></a>Visual Diff Tools</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">👉 KDiff3</span><br><span class="line">👉 P4Merge</span><br><span class="line">👉 WinMerge (Windows Only)</span><br><span class="line">👉 VSCode</span><br></pre></td></tr></table></figure><p>我们选用VSCode来可视化changes。配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global diff.tool vscode</span><br><span class="line"></span><br><span class="line">$ git config --global difftool.vscode.cmd <span class="string">"code --wait --diff <span class="variable">$LOCAL</span> <span class="variable">$REMOTE</span>"</span></span><br><span class="line"></span><br><span class="line">$ git config --global -e</span><br></pre></td></tr></table></figure><p>查看unstaged changes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git difftool</span><br></pre></td></tr></table></figure><p><img src="/images/Git/06.png" alt="06"></p><p>查看staged changes（旧版本是前一次提交到仓库的版本，新版本是如今在staging area中的版本）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git difftool --staged</span><br><span class="line"></span><br><span class="line">Viewing (1/2): <span class="string">'file1.js'</span></span><br><span class="line">Launch <span class="string">'vscode'</span> [Y/n]? y</span><br><span class="line"></span><br><span class="line">Viewing (2/2): <span class="string">'file2.js'</span></span><br><span class="line">Launch <span class="string">'vscode'</span> [Y/n]? y</span><br></pre></td></tr></table></figure><p><img src="/images/Git/05.png" alt="05"></p><p><img src="/images/Git/07.png" alt="07"></p><h1 id="Viewing-the-History"><a href="#Viewing-the-History" class="headerlink" title="Viewing the History"></a>Viewing the History</h1><p>用以下命令查看提交历史：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>查看简短描述 (最近更改显示在上面)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline</span><br></pre></td></tr></table></figure><p>换显示顺序 (最近更改显示在下面):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline --reverse</span><br></pre></td></tr></table></figure><h1 id="Viewing-a-Commit"><a href="#Viewing-a-Commit" class="headerlink" title="Viewing a Commit"></a>Viewing a Commit</h1><p>可以通过ID查看历史commit，如果ID前几位就唯一标识了某历史commit，那么用前几位即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --oneline</span><br><span class="line">fdb7fb6 (HEAD -&gt; master) add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 Initial commit</span><br><span class="line">3fd1e3e Remove unused code</span><br><span class="line">b184de1 Remove unused code</span><br><span class="line">dd03e4e Fix the bug</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br><span class="line">568c0fc Initial commit.</span><br><span class="line"></span><br><span class="line">$ git show 62416</span><br><span class="line">commit 62416e293cdb5f7334ea6dc09a8fbb0314eedcc2</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Thu Apr 22 11:32:51 2021 +0800</span><br><span class="line"></span><br><span class="line">    add files</span><br><span class="line"></span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..ce01362</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+hello</span><br></pre></td></tr></table></figure><p>也可以用HEAD：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git show HEAD~1</span><br><span class="line">commit 62416e293cdb5f7334ea6dc09a8fbb0314eedcc2</span><br><span class="line">Author: Stone &lt;masaike@qq.com&gt;</span><br><span class="line">Date:   Thu Apr 22 11:32:51 2021 +0800</span><br><span class="line"></span><br><span class="line">    add files</span><br><span class="line"></span><br><span class="line">diff --git a/file1.js b/file1.js</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..ce01362</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/file1.js</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+hello</span><br></pre></td></tr></table></figure><p>HEAD是当前commit的reference, HEAD~1是指从HEAD往后的一个commit，此例中就是ID为62416e2的commit。</p><p>也可以查看某历史 commit 中存于 repository 的内容（而不是changes）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git show HEAD~1:.gitignore</span><br><span class="line">logs/</span><br><span class="line">bin/</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">*.bin</span><br></pre></td></tr></table></figure><p>也可以查看某历史 commit 中存于 repository 的所有文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git ls-tree HEAD</span><br><span class="line">100644 blob 1cd4d4e7fe27c57dc89d6e68d1f535f00382e563    .gitignore</span><br><span class="line">040000 tree 38051ae48accaf0025a257eaa7a3a328e1f0fe56    data</span><br><span class="line">100644 blob 29887f938f21333a5eee9dfd0decb4b0a207d855    file1.js</span><br><span class="line">100644 blob f5e95e70e524ec32d0200e10ba179ab4c5f13884    file2.js</span><br><span class="line">100644 blob ce013625030ba8dba906f756967f9e9ca394464a    main.js</span><br></pre></td></tr></table></figure><p>格式：ID, 文件类型, 唯一标识符 (根据文件内容确定的), 文件名</p><p>data是个文件夹，所以类型为tree，里面有个文件main.txt。</p><p>根据文件唯一标识符查看文件内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git show 3805</span><br><span class="line">tree 3805</span><br><span class="line"></span><br><span class="line">main.txt</span><br><span class="line"></span><br><span class="line">$ git show f5e95</span><br><span class="line">sky</span><br></pre></td></tr></table></figure><p>f5e95 是 file2.js 的唯一标识符的前几位，该文件的内容只有一行，就是 sky</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">总结：Git Objects</span><br><span class="line">👉 Commits</span><br><span class="line">👉 Blobs (Files)</span><br><span class="line">👉 Trees (Directories)</span><br><span class="line">👉 Tags</span><br></pre></td></tr></table></figure><h1 id="Unstaging-Files"><a href="#Unstaging-Files" class="headerlink" title="Unstaging Files"></a>Unstaging Files</h1><p>file1.js有两次changes，我们用 git add 将 file1.js 的第一个变化上传到 staging area中了，第二次 change 还在本地目录中。</p><p>我们不想同时 commit file1.js 和 file2.js 两个文件的变化。所以要 undo 这个 git add 操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git restore --staged file1.js</span><br></pre></td></tr></table></figure><p><img src="/images/Git/08.png" alt="08"></p><p>现在 file1.js 的两次变化都只在本地目录下而不在 staging area 中了。</p><p>原理：staging area 从目前的 repository 读取 file1.js 。因为两次变化都还没 commit ，repository 中的 file1.js 就是原始的 (两次变化之前的)。</p><p>如果要撤销 file2.js 的 git add 操作。repository 中还没有 file2.js, 所以撤销之后 file2.js 是一个untracked file (用??表示)。</p><p><img src="/images/Git/09.png" alt="09"></p><h1 id="Discarding-Local-Changes"><a href="#Discarding-Local-Changes" class="headerlink" title="Discarding Local Changes"></a>Discarding Local Changes</h1><p>用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git restore .</span><br></pre></td></tr></table></figure><p>可以撤销本地目录下的改变。file2.js 依然是untracked file，因为本地目录要从staging area 读取上一次状态，而staging area 中没有 file2.js, 就不知道该做啥。所以要用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clean</span><br></pre></td></tr></table></figure><p>从你的工作目录中删除所有<strong>untracked，没有被管理</strong>过的文件。</p><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git clean -h</span><br><span class="line">usage: git clean [-d] [-f] [-i] [-n] [-q] [-e &lt;pattern&gt;] [-x | -X] [--] &lt;paths&gt;...</span><br><span class="line"></span><br><span class="line">    -q, --quiet           <span class="keyword">do</span> not <span class="built_in">print</span> names of files removed</span><br><span class="line">    -n, --dry-run         dry run</span><br><span class="line">    -f, --force           force</span><br><span class="line">    -i, --interactive     interactive cleaning</span><br><span class="line">    -d                    remove whole directories</span><br><span class="line">    -e, --exclude &lt;pattern&gt;</span><br><span class="line">                          add &lt;pattern&gt; to ignore rules</span><br><span class="line">    -x                    remove ignored files, too</span><br><span class="line">    -X                    remove only ignored files</span><br></pre></td></tr></table></figure><p><img src="/images/Git/10.png" alt="10"></p><h1 id="Restoring-a-File-to-an-Earlier-Version"><a href="#Restoring-a-File-to-an-Earlier-Version" class="headerlink" title="Restoring a File to an Earlier Version"></a>Restoring a File to an Earlier Version</h1><p>下面的 demo 显示了删除了 file1.js 后用 git restore 从历史 commit 中恢复此文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ git rm file1.js</span><br><span class="line">rm <span class="string">'file1.js'</span></span><br><span class="line"></span><br><span class="line">$ git status -s</span><br><span class="line">D  file1.js</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">"Delete file1.js"</span></span><br><span class="line">[master 78daaab] Delete file1.js</span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line"> delete mode 100644 file1.js</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">log</span> --oneline</span><br><span class="line">78daaab (HEAD -&gt; master) Delete file1.js</span><br><span class="line">133904b commit file1.ls</span><br><span class="line">0f62ff0 remove all js files</span><br><span class="line">fdb7fb6 add data</span><br><span class="line">62416e2 add files</span><br><span class="line">fde6777 modified</span><br><span class="line">f264740 modified</span><br><span class="line">9ed82f0 Add gitignore</span><br><span class="line">70800e8 Refactor code</span><br><span class="line">d6f4cc6 Initial commit</span><br><span class="line">3fd1e3e Remove unused code</span><br><span class="line">b184de1 Remove unused code</span><br><span class="line">dd03e4e Fix the bug</span><br><span class="line">3b634ca add Lines</span><br><span class="line">a787fca add line</span><br><span class="line">568c0fc Initial commit.</span><br><span class="line"></span><br><span class="line">$ git restore --<span class="built_in">source</span>=HEAD~1 file1.js</span><br><span class="line"></span><br><span class="line">$ git status -s</span><br><span class="line">?? file1.js</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://codewithmosh.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mosh的课程网址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;初始化一个仓库&quot;&gt;&lt;a href=&quot;#初始化一个仓库&quot; class=&quot;headerlin
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="job notes-git" scheme="http://yoursite.com/tags/job-notes-git/"/>
    
  </entry>
  
  <entry>
    <title>MySQL笔记(2)--连接</title>
    <link href="http://yoursite.com/2021/04/20/20210420_SQL002/"/>
    <id>http://yoursite.com/2021/04/20/20210420_SQL002/</id>
    <published>2021-04-20T13:50:09.000Z</published>
    <updated>2021-04-25T07:06:55.731Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Inner-Joins-内连接"><a href="#Inner-Joins-内连接" class="headerlink" title="Inner Joins (内连接)"></a>Inner Joins (内连接)</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> order_id, o.customer_id, first_name, last_name</span><br><span class="line"><span class="keyword">FROM</span> orders o</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> customers c</span><br><span class="line"><span class="keyword">ON</span> o.customer_id = c.customer_id</span><br></pre></td></tr></table></figure><p>返回表orders在表customers中有对应record的项</p><p>o和c分别是orders和customers的别名，以简化代码</p><p>关键字INNER可省略</p><h2 id="跨数据库连接"><a href="#跨数据库连接" class="headerlink" title="跨数据库连接"></a>跨数据库连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> sql_store;  <span class="comment">-- 选择了数据库sql_store为当前数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> order_items oi</span><br><span class="line"><span class="keyword">JOIN</span> sql_inventory.products p   <span class="comment">-- 另一个数据库sql_inventory</span></span><br><span class="line"><span class="keyword">ON</span> oi.product_id = p.product_id</span><br></pre></td></tr></table></figure><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p>将表和自己连接，但是给不同的别名以区分。如下，manager也是一名员工，其信息也在表employees中，用自连接可以得到employee和TA的manager的具体员工信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> sql_hr;  <span class="comment">-- 选择了数据库sql_hr为当前数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">e.employee_id,</span><br><span class="line">    e.first_name,</span><br><span class="line">    m.first_name <span class="keyword">AS</span> manager</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> employees m  </span><br><span class="line"><span class="keyword">ON</span> e.reports_to = m.employee_id</span><br></pre></td></tr></table></figure><h2 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> sql_store;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">o.order_id,</span><br><span class="line">    o.order_date,</span><br><span class="line">    c.first_name,</span><br><span class="line">    c.last_name,</span><br><span class="line">    os.name <span class="keyword">AS</span> <span class="keyword">status</span></span><br><span class="line"><span class="keyword">FROM</span> orders o</span><br><span class="line"><span class="keyword">JOIN</span> customers c</span><br><span class="line"><span class="keyword">ON</span> o.customer_id = c.customer_id</span><br><span class="line"><span class="keyword">JOIN</span> order_statuses os</span><br><span class="line"><span class="keyword">ON</span> o.status = os.order_status_id</span><br></pre></td></tr></table></figure><p>表orders先和表customers连接，然后与表order_statuses连接。</p><h1 id="IN-运算符"><a href="#IN-运算符" class="headerlink" title="IN 运算符"></a>IN 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="comment">-- WHERE state = 'VA' OR state = 'GA' OR state = 'FL'</span></span><br><span class="line"><span class="comment">-- 用IN改写：</span></span><br><span class="line"><span class="keyword">WHERE</span> state <span class="keyword">IN</span> (<span class="string">'VA'</span>, <span class="string">'GA'</span>, <span class="string">'FL'</span>)</span><br><span class="line"><span class="comment">-- WHERE state NOT IN ('VA', 'GA', 'FL') -- 返回不在这些州的 records</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 这样是错的：WHERE state = 'VA' OR 'GA' OR 'FL' </span></span><br><span class="line"><span class="comment">-- 因为我们不能用OR连接布尔表达式state = 'VA'和字符串'GA'</span></span><br></pre></td></tr></table></figure><h1 id="BETWEEN-运算符"><a href="#BETWEEN-运算符" class="headerlink" title="BETWEEN 运算符"></a>BETWEEN 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="comment">-- WHERE points &gt;= 1000 AND points &lt;=3000</span></span><br><span class="line"><span class="comment">-- 改写为：</span></span><br><span class="line"><span class="keyword">WHERE</span> points <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 也可用于非数值</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> birth_date <span class="keyword">BETWEEN</span> <span class="string">"1990-01-01"</span> <span class="keyword">AND</span> <span class="string">"2000-01-01"</span></span><br></pre></td></tr></table></figure><h1 id="LIKE-运算符"><a href="#LIKE-运算符" class="headerlink" title="LIKE 运算符"></a>LIKE 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 字符串模式匹配</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'b%'</span> </span><br><span class="line"><span class="comment">-- 得到last name以'B'或'b'开头的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'brush%'</span> </span><br><span class="line"><span class="comment">-- 得到last name以“brush”开头的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%b%'</span> </span><br><span class="line"><span class="comment">-- 表示'b'前后可以有任意字符数('b'在开头、中间、结尾出现皆可)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%y'</span> </span><br><span class="line"><span class="comment">-- 得到last name以'y'结尾的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'_____y'</span> </span><br><span class="line"><span class="comment">-- 得到last name以'y'结尾且只有6个字符('_'填补表示任意字符)的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'b____y'</span> </span><br><span class="line"><span class="comment">-- 运行后得到last name以'b'开头以'y'结尾且只有6个字符的record(本例中为'Boagey')</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***SUMMARY**/</span> </span><br><span class="line">% any number of characters</span><br><span class="line">_ single character</span><br></pre></td></tr></table></figure><h1 id="REGEXP-运算符"><a href="#REGEXP-运算符" class="headerlink" title="REGEXP 运算符"></a>REGEXP 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- regular expression (REGEXP) 正则表达式</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%field%'</span></span><br><span class="line"><span class="comment">-- WHERE last_name REGEXP 'field'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'^field'</span> </span><br><span class="line"><span class="comment">-- last name must starts with "field"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'field$'</span> </span><br><span class="line"><span class="comment">-- last name must ends with "field"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* use '|' for multiple search pattern */</span> </span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'field|mac|rose'</span> </span><br><span class="line"><span class="comment">-- last name must contains "field" or "mac" or "rose"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'field$|mac|rose'</span> </span><br><span class="line"><span class="comment">-- last name must ends with "field" or contains "mac"/"rose"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'[gim]e'</span> </span><br><span class="line"><span class="comment">-- last name must contains "ge"/"ie"/"me"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'e[gim]'</span> </span><br><span class="line"><span class="comment">-- last name must contains "eg"/"ei"/"em"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'[a-h]e'</span></span><br><span class="line"><span class="comment">-- the same as WHERE last_name REGEXP '[abcdefgh]e'</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">^ beginning</span><br><span class="line">$ end</span><br><span class="line">| logical or</span><br><span class="line">[abcd]</span><br><span class="line">[a-f]</span><br></pre></td></tr></table></figure><h1 id="IS-NULL-运算符"><a href="#IS-NULL-运算符" class="headerlink" title="IS NULL 运算符"></a>IS NULL 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> phone <span class="keyword">IS</span> <span class="literal">NULL</span>  <span class="comment">-- 返回没有phone(该字段为NULL)的records</span></span><br><span class="line"><span class="keyword">WHERE</span> phone <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="comment">-- phone不为空</span></span><br></pre></td></tr></table></figure><h1 id="ORDER-BY-子句"><a href="#ORDER-BY-子句" class="headerlink" title="ORDER BY 子句"></a>ORDER BY 子句</h1><p>默认是按照主键（primary key）排序，使用ORDER BY 子句可以指定排序的键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> first_name        <span class="comment">-- 根据first_name字段值升序排序</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> first_name <span class="keyword">DESC</span>   <span class="comment">-- 根据first_name字段值降序排序</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> state <span class="keyword">DESC</span>, first_name </span><br><span class="line"><span class="comment">--先根据state降序排列，state相同的根据first_name升序排列</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- birth_date不在选出来的列里，still work</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> birth_date</span><br></pre></td></tr></table></figure><h1 id="LIMIT-子句"><a href="#LIMIT-子句" class="headerlink" title="LIMIT 子句"></a>LIMIT 子句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span> <span class="comment">-- 返回前3个records</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">300</span> <span class="comment">-- 300 &gt; #record, 返回全部records</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">6</span>, <span class="number">3</span>  <span class="comment">-- 跳过前6个records，返回第7，8，9个records</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Inner-Joins-内连接&quot;&gt;&lt;a href=&quot;#Inner-Joins-内连接&quot; class=&quot;headerlink&quot; title=&quot;Inner Joins (内连接)&quot;&gt;&lt;/a&gt;Inner Joins (内连接)&lt;/h1&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="Database" scheme="http://yoursite.com/categories/Database/"/>
    
    
      <category term="job notes-database" scheme="http://yoursite.com/tags/job-notes-database/"/>
    
  </entry>
  
  <entry>
    <title>MySQL笔记(1)--基础语句</title>
    <link href="http://yoursite.com/2021/04/20/20210420_SQL001/"/>
    <id>http://yoursite.com/2021/04/20/20210420_SQL001/</id>
    <published>2021-04-20T11:50:09.000Z</published>
    <updated>2021-04-20T13:05:45.639Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SELECT-子句"><a href="#SELECT-子句" class="headerlink" title="SELECT 子句"></a>SELECT 子句</h1><p>从一张表（customers）中选取某些列</p><p><img src="/images/SQL1/001.png" style="zoom: 150%;"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  first_name, </span><br><span class="line">  last_name, </span><br><span class="line">  points, </span><br><span class="line">  points * <span class="number">10</span> + <span class="number">100</span> <span class="keyword">AS</span> <span class="string">"discount factor"</span>   <span class="comment">-- 可以进行数学运算,AS来rename</span></span><br><span class="line"><span class="keyword">FROM</span> customers</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> state <span class="comment">-- DISTINCT 只保留重复项中的一项</span></span><br><span class="line"><span class="keyword">FROM</span> customers</span><br></pre></td></tr></table></figure><h1 id="WHERE-子句"><a href="#WHERE-子句" class="headerlink" title="WHERE 子句"></a>WHERE 子句</h1><p>过滤作用，根据条件选择records</p><p>(各个WHERE子句只是提供不同的示例，运行时选择一个WHERE子句，其余注释掉，下文同)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> state = <span class="string">'va'</span> <span class="comment">-- va大小写一样的</span></span><br><span class="line"><span class="keyword">WHERE</span> state &lt;&gt; <span class="string">'va'</span> <span class="comment">-- not in VA</span></span><br><span class="line"><span class="keyword">WHERE</span> birth_date &gt; <span class="string">'1990-01-01'</span> <span class="comment">-- born after 1990/01/01</span></span><br></pre></td></tr></table></figure><p>运算符有：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">&gt;=</span><br><span class="line">&lt;</span><br><span class="line">&lt;=</span><br><span class="line">=</span><br><span class="line">(not equal)  !=  or  &lt;&gt;</span><br></pre></td></tr></table></figure><h1 id="AND-OR-NOT-运算符"><a href="#AND-OR-NOT-运算符" class="headerlink" title="AND, OR, NOT 运算符"></a>AND, OR, NOT 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> (birth_date &gt; <span class="string">'1990-01-01'</span> <span class="keyword">OR</span> points &gt; <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>AND优先级高于OR</p><h1 id="IN-运算符"><a href="#IN-运算符" class="headerlink" title="IN 运算符"></a>IN 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="comment">-- WHERE state = 'VA' OR state = 'GA' OR state = 'FL'</span></span><br><span class="line"><span class="comment">-- 用IN改写：</span></span><br><span class="line"><span class="keyword">WHERE</span> state <span class="keyword">IN</span> (<span class="string">'VA'</span>, <span class="string">'GA'</span>, <span class="string">'FL'</span>)</span><br><span class="line"><span class="comment">-- WHERE state NOT IN ('VA', 'GA', 'FL') -- 返回不在这些州的 records</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 这样是错的：WHERE state = 'VA' OR 'GA' OR 'FL' </span></span><br><span class="line"><span class="comment">-- 因为我们不能用OR连接布尔表达式state = 'VA'和字符串'GA'</span></span><br></pre></td></tr></table></figure><h1 id="BETWEEN-运算符"><a href="#BETWEEN-运算符" class="headerlink" title="BETWEEN 运算符"></a>BETWEEN 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="comment">-- WHERE points &gt;= 1000 AND points &lt;=3000</span></span><br><span class="line"><span class="comment">-- 改写为：</span></span><br><span class="line"><span class="keyword">WHERE</span> points <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 也可用于非数值</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> birth_date <span class="keyword">BETWEEN</span> <span class="string">"1990-01-01"</span> <span class="keyword">AND</span> <span class="string">"2000-01-01"</span></span><br></pre></td></tr></table></figure><h1 id="LIKE-运算符"><a href="#LIKE-运算符" class="headerlink" title="LIKE 运算符"></a>LIKE 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 字符串模式匹配</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'b%'</span> </span><br><span class="line"><span class="comment">-- 得到last name以'B'或'b'开头的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'brush%'</span> </span><br><span class="line"><span class="comment">-- 得到last name以“brush”开头的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%b%'</span> </span><br><span class="line"><span class="comment">-- 表示'b'前后可以有任意字符数('b'在开头、中间、结尾出现皆可)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%y'</span> </span><br><span class="line"><span class="comment">-- 得到last name以'y'结尾的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'_____y'</span> </span><br><span class="line"><span class="comment">-- 得到last name以'y'结尾且只有6个字符('_'填补表示任意字符)的records</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'b____y'</span> </span><br><span class="line"><span class="comment">-- 运行后得到last name以'b'开头以'y'结尾且只有6个字符的record(本例中为'Boagey')</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***SUMMARY**/</span> </span><br><span class="line">% any number of characters</span><br><span class="line">_ single character</span><br></pre></td></tr></table></figure><h1 id="REGEXP-运算符"><a href="#REGEXP-运算符" class="headerlink" title="REGEXP 运算符"></a>REGEXP 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- regular expression (REGEXP) 正则表达式</span></span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">'%field%'</span></span><br><span class="line"><span class="comment">-- WHERE last_name REGEXP 'field'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'^field'</span> </span><br><span class="line"><span class="comment">-- last name must starts with "field"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'field$'</span> </span><br><span class="line"><span class="comment">-- last name must ends with "field"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* use '|' for multiple search pattern */</span> </span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'field|mac|rose'</span> </span><br><span class="line"><span class="comment">-- last name must contains "field" or "mac" or "rose"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'field$|mac|rose'</span> </span><br><span class="line"><span class="comment">-- last name must ends with "field" or contains "mac"/"rose"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'[gim]e'</span> </span><br><span class="line"><span class="comment">-- last name must contains "ge"/"ie"/"me"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'e[gim]'</span> </span><br><span class="line"><span class="comment">-- last name must contains "eg"/"ei"/"em"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> last_name REGEXP <span class="string">'[a-h]e'</span></span><br><span class="line"><span class="comment">-- the same as WHERE last_name REGEXP '[abcdefgh]e'</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">^ beginning</span><br><span class="line">$ end</span><br><span class="line">| logical or</span><br><span class="line">[abcd]</span><br><span class="line">[a-f]</span><br></pre></td></tr></table></figure><h1 id="IS-NULL-运算符"><a href="#IS-NULL-运算符" class="headerlink" title="IS NULL 运算符"></a>IS NULL 运算符</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> phone <span class="keyword">IS</span> <span class="literal">NULL</span>  <span class="comment">-- 返回没有phone(该字段为NULL)的records</span></span><br><span class="line"><span class="keyword">WHERE</span> phone <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="comment">-- phone不为空</span></span><br></pre></td></tr></table></figure><h1 id="ORDER-BY-子句"><a href="#ORDER-BY-子句" class="headerlink" title="ORDER BY 子句"></a>ORDER BY 子句</h1><p>默认是按照主键（primary key）排序，使用ORDER BY 子句可以指定排序的键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> first_name        <span class="comment">-- 根据first_name字段值升序排序</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> first_name <span class="keyword">DESC</span>   <span class="comment">-- 根据first_name字段值降序排序</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> state <span class="keyword">DESC</span>, first_name </span><br><span class="line"><span class="comment">--先根据state降序排列，state相同的根据first_name升序排列</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- birth_date不在选出来的列里，still work</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> birth_date</span><br></pre></td></tr></table></figure><h1 id="LIMIT-子句"><a href="#LIMIT-子句" class="headerlink" title="LIMIT 子句"></a>LIMIT 子句</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span> <span class="comment">-- 返回前3个records</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">300</span> <span class="comment">-- 300 &gt; #record, 返回全部records</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">6</span>, <span class="number">3</span>  <span class="comment">-- 跳过前6个records，返回第7，8，9个records</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SELECT-子句&quot;&gt;&lt;a href=&quot;#SELECT-子句&quot; class=&quot;headerlink&quot; title=&quot;SELECT 子句&quot;&gt;&lt;/a&gt;SELECT 子句&lt;/h1&gt;&lt;p&gt;从一张表（customers）中选取某些列&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/im
      
    
    </summary>
    
    
      <category term="Database" scheme="http://yoursite.com/categories/Database/"/>
    
    
      <category term="job notes-database" scheme="http://yoursite.com/tags/job-notes-database/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法笔记(1)</title>
    <link href="http://yoursite.com/2021/03/12/20210312_DongAlgNote/"/>
    <id>http://yoursite.com/2021/03/12/20210312_DongAlgNote/</id>
    <published>2021-03-12T02:50:09.000Z</published>
    <updated>2021-03-12T02:49:37.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组与链表"><a href="#数组与链表" class="headerlink" title="数组与链表"></a>数组与链表</h1><p><strong>数据结构的存储方式只有两种：数组（顺序存储）和链表（链式存储）</strong>。</p><p>那些多样化的数据结构，究其源头，都是在链表或者数组上的特殊操作，API 不同而已</p><p><strong>数组</strong>由于是紧凑连续存储,可以随机访问，通过索引快速找到对应元素，而且相对节约存储空间。但正因为连续存储，内存空间必须一次性分配够，所以说数组如果要扩容，需要重新分配一块更大的空间，再把数据全部复制过去，时间复杂度 O(N)；而且你如果想在数组中间进行插入和删除，每次必须搬移后面的所有数据以保持连续，时间复杂度 O(N)。</p><p><strong>链表</strong>因为元素不连续，而是靠指针指向下一个元素的位置，所以不存在数组的扩容问题；如果知道某一元素的前驱和后驱，操作指针即可删除该元素或者插入新元素，时间复杂度 O(1)。但是正因为存储空间不连续，你无法根据一个索引算出对应元素的地址，所以不能随机访问；而且由于每个元素必须存储指向前后元素位置的指针，会消耗相对更多的储存空间。</p><h1 id="数据结构基本操作"><a href="#数据结构基本操作" class="headerlink" title="数据结构基本操作"></a>数据结构基本操作</h1><p>遍历 + 访问：增删查改（<strong>在不同的应用场景，尽可能高效地增删查改</strong>）</p><p>方式：线性-for/while；非线性-递归</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组与链表&quot;&gt;&lt;a href=&quot;#数组与链表&quot; class=&quot;headerlink&quot; title=&quot;数组与链表&quot;&gt;&lt;/a&gt;数组与链表&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;数据结构的存储方式只有两种：数组（顺序存储）和链表（链式存储）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Algorithm/"/>
    
    
      <category term="job notes-algorithm" scheme="http://yoursite.com/tags/job-notes-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读笔记(7)-Visual to Sound Generating Natural Sound for Videos in the Wild</title>
    <link href="http://yoursite.com/2020/12/25/20201225_VisualToSound/"/>
    <id>http://yoursite.com/2020/12/25/20201225_VisualToSound/</id>
    <published>2020-12-25T12:50:09.000Z</published>
    <updated>2020-12-25T13:41:47.083Z</updated>
    
    <content type="html"><![CDATA[<p><strong>任务</strong>：从输入的视频中直接预测raw声音信号</p><p><strong>方法</strong>：编码-解码架构，即视频编码器+音频生成器（分层RNN）</p><p><strong>建模</strong>：条件生成问题。训练一个有条件的生成模型以从输入的视频中合成raw声音波形。</p><p>估计条件概率：</p><script type="math/tex; mode=display">p(y_{1},y_{2},...,y_{n}|x_{1},x_{2},...,x_{m})</script><p>$x_{1},x_{2},…,x_{m}$是输入视频帧的表示；$y_{1},y_{2},…,y_{n}$是输出声音波形的值（取值为0~255的整数序列）。原始波形样本是范围从-1到1的实数值，文中重新缩放和线性量化它们到256个bins。通常$m&lt;&lt;n$，因为音频的采样率远高于视频的采样率。</p><p><img src="/images/VisualToSound/1.png" alt="1"></p><h2 id="Sound-Generator"><a href="#Sound-Generator" class="headerlink" title="Sound Generator"></a>Sound Generator</h2><p>采用的采样频率为：16kHz</p><p><strong>问题</strong>：序列长度很长</p><p><strong>解决方法</strong>：选用SampleRNN为声音生成器（原因：其从粗到细的结构使模型能够生成非常长的序列，每一层的循环结构捕捉到遥远样本之间的依赖关系。）</p><p><strong>具体</strong>：1）细节层是多层感知机（MLP），获取下一个粗糙层（上层）的输出和前面的$k$个样本，以生成一个新样本。在训练过程中，波形样本（实数值，从-1到1）被线性量化到从0到255的整数范围，可以将最细的层的MLP看成是256-类分类器，在每个timestep预测得到一个样本（然后映射回实值，获得最终波形）。</p><p>2）粗糙层可以是GRU, LSTM或其他的RNN变体。包含多个波形样本(图中为2个)的节点意味着该层基于前一个timestep以及更粗层的预测，在每个timestep共同预测多个样本。</p><h2 id="Video-Encoder"><a href="#Video-Encoder" class="headerlink" title="Video Encoder"></a>Video Encoder</h2><h3 id="Frame-to-frame-method"><a href="#Frame-to-frame-method" class="headerlink" title="Frame-to-frame method"></a>Frame-to-frame method</h3><script type="math/tex; mode=display">x_{i}=V(f_{i})</script><p>$f_{i}$和$x_{i}$分别是视频的第$i$帧和该帧的表征。$V(.)$是在ImageNet上预先训练的VGG19网络的fc6特征提取操作，$x_{i}$是一个4096维的向量。在该模型中，将帧表征与声音生成器最粗层RNN的节点（样本）统一连接，对视觉信息进行编码，如图3(b)所示（内容以绿色虚线框表示）。</p><p><strong>视频与音频采样率不同的问题解决</strong>：对于每个$x_{i}$，重复$s$次，其中</p><script type="math/tex; mode=display">s=\lceil \frac{sr_{audio}}{sr_{video}}\rceil,\quad (``sr"\ means\ sampling\ rate)</script><p>只将视觉特征提供给SampleRNN的最粗糙层，因为这一层很重要，因为它指导所有更细的层的生成以及提高计算效率。</p><h3 id="Sequence-to-sequence-method"><a href="#Sequence-to-sequence-method" class="headerlink" title="Sequence-to-sequence method"></a>Sequence-to-sequence method</h3><p>提取VGG19网络的fc6特征作为每一帧的表征，然后用RNN处理作为视频编码器，使用视频编码器的最后一个隐藏状态初始化声音发生器的最粗层RNN的隐藏状态，然后开始声音生成。此时声音生成任务变为：</p><script type="math/tex; mode=display">p(y_{1},y_{2},...,y_{n}|x_{1},x_{2},...,x_{m})=\prod\limits^{n}_{i=1}p(y_{i}|H,y_{1},...,y_{i-1})</script><p>$H$表示视频编码RNN的最后一个隐藏状态或等效的声音发生器最粗糙层RNN的初始隐藏状态。</p><p><strong>视频与音频采样率不同的问题解决</strong>：不像上面提到的基于帧的模型中明确地强制视频帧和波形样本之间的对齐。在这个序列到序列模型中，我们期望模型通过编码和解码来学习这两种模式之间的对齐。</p><h3 id="Flow-based-method"><a href="#Flow-based-method" class="headerlink" title="Flow-based method"></a>Flow-based method</h3><p>Motiv：视觉领域的运动信号，虽然有时很微小，但对于合成真实且同步良好的声音是至关重要的。</p><p>方案：增加一个基于光流的深度特征以明确捕获运动信号。与序列到序列方法不同之处为</p><script type="math/tex; mode=display">x_{i}=cat[V(f_{i}),F(o_{i})]</script><p>$o_{i}$是第$i$帧的光流，$F(.)$是提取基于光流的深度特征的函数（非学习得到）。</p><p><a href="https://arxiv.org/pdf/1712.01393.pdf" target="_blank" rel="noopener">Visual to Sound: Generating Natural Sound for Videos in the Wild</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;任务&lt;/strong&gt;：从输入的视频中直接预测raw声音信号&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt;：编码-解码架构，即视频编码器+音频生成器（分层RNN）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建模&lt;/strong&gt;：条件生成问题。训练一个有条件的生
      
    
    </summary>
    
    
      <category term="Visual Sound" scheme="http://yoursite.com/categories/Visual-Sound/"/>
    
    
      <category term="paper notes-visual sound" scheme="http://yoursite.com/tags/paper-notes-visual-sound/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读笔记(6)-Visually Indicated Sounds</title>
    <link href="http://yoursite.com/2020/12/25/20201225_VisuallyIndicatedSound/"/>
    <id>http://yoursite.com/2020/12/25/20201225_VisuallyIndicatedSound/</id>
    <published>2020-12-25T03:50:09.000Z</published>
    <updated>2020-12-25T08:51:11.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sound-Representation"><a href="#Sound-Representation" class="headerlink" title="Sound Representation"></a>Sound Representation</h2><p>计算声音特征的方法：将声波$w(t)$分解为子带包络$s_{n}(t)$（将声波滤波然后应用非线性）。1）在等效矩形带宽(ERB)尺度上应用40个带通滤波器$f_{n}$(加上一个低通和高通滤波器)，并取响应的希尔伯特包络线；2）将包络下采到90Hz（约为3样本/帧）并压缩。</p><script type="math/tex; mode=display">s_{n}=D(|(w*f_{n})+jH(w*f_{n})|)^{c}</script><p>$H$是希尔伯特变换，$D$表示下采样，压缩常数$c=0.3$。由此产生的表示被称为耳蜗图（cochleagram）。</p><p><img src="/images/VisualIndicatedSound/2.png" alt="2" style="zoom:80%;"></p><p>一般来说，撞击声如何捕捉材料的属性?为了从经验上评测这一点，文章使用子带包络作为特征向量，训练了一个线性支持向量机来预测数据库中的声音由哪个材料发出。文章对训练集重新采样，使每个类包含相同数量的撞击声(每类260个)。最终得到的材料分类器具有45.8% (chance = 5.9%)的分类平均精度(即每类精度值的平均值)，其混淆矩阵如图3(b)所示。这些结果表明，撞击声传达了有关材料的重要信息，因此，如果一个算法能够学习从图像中准确预测这些声音，它就会有关于材料类别的隐含知识。</p><h2 id="Predicting-visually-indicated-sounds"><a href="#Predicting-visually-indicated-sounds" class="headerlink" title="Predicting visually indicated sounds"></a>Predicting visually indicated sounds</h2><p>将此任务建模为一个回归问题，目标是将一个视频帧序列映射为一个声频特征序列。使用的模型是RNN，以颜色和运动（motion）信息作为输入，预测出声频波形的子带包络。最后，从声音特征中产生波形。</p><p><img src="/images/VisualIndicatedSound/1.png" alt="1" style="zoom:80%;"></p><h3 id="Regressing-sound-features"><a href="#Regressing-sound-features" class="headerlink" title="Regressing sound features"></a>Regressing sound features</h3><p>输入图像序列：$I_{1}, I_{2}, …, I_{N}$</p><p>输出声音特征序列：$\mathop{s_{1}}\limits ^{\rightarrow}, \mathop{s_{2}}\limits ^{\rightarrow}, \mathop{s_{T}}\limits ^{\rightarrow}, where \mathop{s_{t}}\limits ^{\rightarrow}\in \mathbb{R}^{42}$</p><p>这些声音特征对应于图4中所示的耳蜗块。文章使用循环神经网络(RNN)来解决这个回归问题，它将卷积神经网络(CNN)计算的图像特征作为输入。</p><p><strong>图像表示</strong>：如何表示运动（motion）信息？计算每一帧的spacetime图像，即三个通道是上一帧、当前帧和下一帧灰度版本的图像。对于每一帧$t$，通过拼接帧$t$的spacetime图像和第1帧的颜色图像的CNN特征来构建输入特征向量$x_{t}$，即</p><script type="math/tex; mode=display">x_{t}=[\phi(F_{t}),\phi(I_{1})]</script><p>文章中训练的两种方式：1）从零开始初始化CNN，然后和RNN一起训练它；2）用一个为ImageNet分类训练的网络的权值初始化CNN。当使用预训练时，从卷积层中预计算特征，并仅对完全连接的层进行微调。</p><p><strong>声音预测模型</strong>：使用基于LSTM的RNN模型。为了补偿视频和音频采样率之间的差异，文章中复制每个CNN特征向量$k$次（文章中使用$k=3$）</p><script type="math/tex; mode=display">k=\lfloor T/N\rfloor</script><p>由此得到与声音特征序列等长的CNN特征序列$x_{1}, x_{2}, …, x_{N}$。在RNN的每个timestep，文章中使用当前图像特征向量$x_{t}$来更新隐藏变量$h_{t}$，然后通过一个仿射变换得到声音特征。为了使学习问题更简单，文中使用PCA在每个时间步长的42维特征向量投影到10维空间，然后预测这个低维向量。对网络进行评估时，反求PCA变换以获得声音特征。</p><p>文章使用随机梯度下降以Caffe共同训练RNN和CNN。它有助于收敛去除dropout和剪辑大的梯度。当从头开始训练时，文中通过对视频进行裁剪和镜像转换来增强数据。文中也使用多个LSTM层（数量取决于任务）。</p><h3 id="Generating-a-waveform"><a href="#Generating-a-waveform" class="headerlink" title="Generating a waveform"></a>Generating a waveform</h3><p>问题：如何从声音特征中产生声波？</p><ol><li>简单参数综合法：迭代地将子带包络加到白噪声样本上(文中只使用了一次迭代)。这种方法对于检查音频特征所捕获的信息非常有用，因为它代表了从特征到声音的直接转换。</li><li>对于产生对于人耳似是而非的声音的任务，在从特征到波形的转换过程中，先施加一个强的自然声音是更有效的。因此使用基于实例的合成方法，该方法将声音特征的窗口捕捉到训练集中最接近的样本上。文中通过拼接预测的声音特征$\mathop{s_{1}}\limits ^{\rightarrow}, \mathop{s_{2}}\limits ^{\rightarrow}, …, \mathop{s_{T}}\limits ^{\rightarrow}$（或它们的一个子序列）形成一个查询向量，在$L_{1}$距离测量的训练集中寻找其最近的邻居，并传递相应的波形。</li></ol><p><a href="http://andrewowens.com/vis/" target="_blank" rel="noopener">项目网址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Sound-Representation&quot;&gt;&lt;a href=&quot;#Sound-Representation&quot; class=&quot;headerlink&quot; title=&quot;Sound Representation&quot;&gt;&lt;/a&gt;Sound Representation&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="Visual Sound" scheme="http://yoursite.com/categories/Visual-Sound/"/>
    
    
      <category term="paper notes-visual sound" scheme="http://yoursite.com/tags/paper-notes-visual-sound/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读笔记(5)-The Visual Microphone Passive Recovery of Sound from Video</title>
    <link href="http://yoursite.com/2020/12/22/20201222_VisualMicrophone/"/>
    <id>http://yoursite.com/2020/12/22/20201222_VisualMicrophone/</id>
    <published>2020-12-22T14:50:09.000Z</published>
    <updated>2020-12-25T02:40:43.378Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>现象</strong>：声音到达物体会在物体表面引起微小振动。</p><p><strong>做法</strong>：使用物体的高速视频提取微小振动，部分恢复（造成振动的）声音。</p><p><strong>具体</strong>：1）从一系列不同特性的物体的高速连续镜头中恢复声音；</p><p>​            2）使用真实和仿真数据来评测那些影响了可视化地恢复声音的因素；</p><p>​            3）声音恢复质量评价指标：可理解性（intelligibility）、SNR；直接对比输入和恢复出来的信号；</p><p>​            4）探索如何利用普通用户相机的卷帘快门（rolling shutter）从而从标准帧率视频中恢复出声音；使用所提方法的空间分辨率来可视化声音引起的振动是如何随着物体表面变化的，以之恢复物体的振动模式。</p><p><strong>Keywords</strong>：远程声音采集；视频中的声音；可视化声学。</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><strong>描述</strong>：声音到达某物品 → 1）物品表面跟随周围介质移动 OR 2）根据其振动模式发生形变。</p><p><strong>应用场景</strong>：声音引起物体振动的现象被用于远程声音采集，并在监视和安防方面有重要应用，如在远处窃听谈话。远程声音采集的现有方法本质上是积极（active）的，需要将一个激光束或pattern投射到振动表面。</p><p><strong>本文观察</strong>：只需要物体的高速视频，声音引起的物体振动通常能够产生足够的视觉信号来部分恢复出该声音。</p><p><strong>本文贡献</strong>：提出一个消极的从视频中恢复声音信号的方法。视觉上检测微小物体振动→将振动转回音频信号（使得日常物品变成潜藏的麦克风）。做法：1）使用高速摄像机将物体视频；2）在一个Complex steerable pyramid (CSP)（建立在视频上）的维度上提取<em>局部运动信号</em>；3）这些局部信号被对齐并取平均，得到一个单一的一维运动信号，该信号捕捉对象随时间的<em>全局运动</em>；4）进一步滤波和去噪，得到恢复出来的声音。</p><p><strong>对比积极方法</strong>：恢复效果不如积极方法；但是优点有 1）对于纹理物体和光照良好的场景不需要提供积极照明；2）除了高速摄像机外无需额外的传感器或检测模块；3）无需回射或反射振动表面（区别于激光麦克风）；4）没有对相对于相机的表面方向施加明显的约束；5）产生了一个声音的空间测量，可用于分析物品中声音引起的形变。</p><p><strong>讨论</strong>：虽然声音可以穿透大多数物质，但并不是所有的物体和材料都能很好地进行视觉声音恢复。声波在材料中的传播取决于多种因素，如材料的密度和可压缩性，以及物体的形状。文章进行对照实验，测量了不同物体和材料对已知和未知声音的反应，并评估文章所提技术对于从高速视频中恢复声音的能力。</p><h2 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h2><p>传统麦克风的工作原理是将内部膜片的运动转化为电信号。膜片的设计使其在声压下容易移动，因此它的运动可以被记录下来并解释为音频。<strong>激光麦克风</strong>的工作原理与此类似，但它测量的是一个遥远物体的运动，本质上是将物体作为一个外部膜片。这是通过记录激光对物体表面的反射来实现的。最基本的激光麦克风记录反射激光的相位，以激光波长作模得到物体的距离。激光多普勒测振仪(LDV)通过测量反射激光的多普勒频移来确定反射面速度，从而解决相位包裹的模糊性。这两种类型的激光麦克风都可以从很远的距离恢复高质量的音频，但依赖于激光和接收器相对于具有适当反射比的地面的精确定位。</p><p>Zalevsky等人通过使用失焦高速相机来记录反射激光散斑模式的变化，解决了其中的一些局限性。他们的工作允许接收器的定位有更大的灵活性，但仍然依赖于记录反射激光。相比之下，本文的技术不依赖于主动照明。</p><p>本文方法依赖于从视频中提取极其细微运动的能力，因而也与对这些运动进行放大和可视化的工作有关。这些工作侧重于小运动的可视化，而本文侧重于测量这些运动并利用它们来恢复声音。本文工作中使用的局部运动信号来自Simoncelli等人提出的Complex steerable pyramid (CSP)中的相位变化，因为这些变化被证明非常适合于视频中微小动作的恢复。然而，也有可能使用其他技术来计算局部运动信号。例如，经典的光流和点相关方法在之前的视觉振动传感工作中被成功地使用。由于本文方法的输出是单个振动物体的一维运动信号，因而能够对输入视频中的所有像素进行平均，并在千分之一像素的数量级上处理极其微小的运动。</p><h2 id="Recovering-Sound-from-Video"><a href="#Recovering-Sound-from-Video" class="headerlink" title="Recovering Sound from Video"></a>Recovering Sound from Video</h2><p><img src="/images/VisualSound/1.png" alt="1"></p><p><strong>输入</strong>：物体的高速视频（1kHz~20kHz）$V(x,y,t)$</p><p><strong>假设</strong>：物体和相机的相对运动是由声音信号$s(t)$引起的振动主导的</p><p><strong>目标</strong>：从$V$得到$s(t)$</p><p><strong>步骤</strong>：1）根据不同的方向$θ$和尺度$r$将$V$分解成多个空间子带；</p><p>​            2）计算每个像素、方向和尺度上的局部运动信号；通过一系列的平均和对齐操作将这些运动信号组合起来，为物体产生一个单一的全局运动信号；</p><p>​            3）对物体的运动信号使用音频去噪和滤波技术，以获得恢复出来的声音。</p><h3 id="Computing-Local-Motion-Signals"><a href="#Computing-Local-Motion-Signals" class="headerlink" title="Computing Local Motion Signals"></a>Computing Local Motion Signals</h3><p>使用$V$的CSP表示中的相位变化来计算局部运动。</p><p>CSP：将$V$中的每一帧根据不同的方向和尺度分解成复数子带的滤波器组。该变换的基础方程是带尺度和方向的兼具余弦和正弦相位的Gabor-like小波。每一对类余弦和类正弦滤波器都可以用来分离局部小波的振幅和它们的相位。具体地说，每个尺度$r$和方位$θ$是一个复数图像，可以用幅值$A$和相位$φ$表示为：</p><script type="math/tex; mode=display">A(r,\theta,x,y,t)e^{i\varphi (r,\theta,x,y,t)}</script><p>取这个等式中计算的局部相位$φ$，从参考帧$t_{0}$(通常是视频的第一帧)的局部相位中减去它们，计算相位变化</p><script type="math/tex; mode=display">\varphi_{v} (r,\theta,x,y,t)=\varphi (r,\theta,x,y,t)-\varphi (r,\theta,x,y,t_{0})</script><p>对于较小的运动，这些相位变化近似正比于图像结构在相应方向和尺度上的位移。</p><h3 id="Computing-the-Global-Motion-Signal"><a href="#Computing-the-Global-Motion-Signal" class="headerlink" title="Computing the Global Motion Signal"></a>Computing the Global Motion Signal</h3><p>对于CSP的每个尺度$r$和方位$θ$求局部运动信号的加权平均：</p><script type="math/tex; mode=display">\Phi_{i}(r,\theta,t)=\sum\limits_{x,y}A(r,\theta,x,y)^{2}\varphi_{v} (r,\theta,x,y,t)</script><p>求加权平均的原因：局部相位在没有太多纹理的区域是模糊的，导致这些区域的运动信号是有噪声的。CSP的振幅A给出了纹理强度的度量，因此可以通过(平方)振幅来加权每个局部信号。</p><p>对齐：</p><script type="math/tex; mode=display">t_{i}=arg\max\limits_{t_{i}}\Phi_{0}(r_{0},\theta_{0},t)^{T}\Phi_{i}(r_{i},\theta_{i},t-t_{i})</script><p>得到全局运动信号：</p><script type="math/tex; mode=display">\hat{s}(t)=\sum\limits_{i}\Phi_{i}(r_{i},\theta_{i},t-t_{i})</script><p>归一化到[-1,1]的范围。</p><h3 id="Denoising"><a href="#Denoising" class="headerlink" title="Denoising"></a>Denoising</h3><p>目标：改善全局运动信号的SNR</p><p>观察到的现象：低频的高能量噪声通常与音频不一致</p><p>方法：应用高通Butterworth滤波器（截断频率为20-100Hz）</p><p>滤除加性噪声：目标是accuracy，用spectral subtraction；目标是可理解性，用感知驱动的语音增强算法（通过计算一个贝叶斯最优估计去噪信号的成本函数，考虑到人类对语音的感知）。本文的结果是自动使用二者之一的算法来去噪的。</p><p>恢复信号的不同频率可能会被记录对象不同地调制。第4.3节将展示如何使用已知测试信号来描述一个物体如何衰减不同频率，然后在新的视频中使用该信息来均衡从同一物体(或类似物体)中恢复的未知信号。</p><h2 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h2><p>第一组实验测试了可以从不同物体上恢复的频率范围。通过扬声器播放线性渐变频率的声音信号，然后观察哪些频率可以通过本文技术恢复。第二组实验集中在从视频中恢复人类语言。这些实验使用了来自TIMIT数据集的几个标准语音示例，以及通过扬声器播放的人类受试者的现场语音(扬声器被一个会说话的人替换)。</p><h3 id="Sound-Recovery-from-Different-Objects-Materials"><a href="#Sound-Recovery-from-Different-Objects-Materials" class="headerlink" title="Sound Recovery from Different Objects/Materials"></a>Sound Recovery from Different Objects/Materials</h3><p><img src="/images/VisualSound/2.png" alt="2" style="zoom:67%;"></p><p>在几乎所有的结果中，恢复的信号在较高的频率中是较弱的。这是意料之中的，因为更高的频率产生更小的位移，并且被大多数材料严重衰减。然而，较高频率的功率下降不是单调的，可能是由于振动模式的刺激。毫不奇怪，较轻的物体更容易移动，比惰性的物体更容易支持更高频率的恢复。</p><h3 id="Speech-Recovery"><a href="#Speech-Recovery" class="headerlink" title="Speech Recovery"></a>Speech Recovery</h3><p>评测指标：</p><p>(1) 评测accuracy： Segmental Signal-to-Noise Ratio (SSNR) 随时间的平均局部信噪比;</p><p>(2) 评测intelligibility： perceptually-based metric</p><p>(3) 评测恢复质量：Log Likelihood Ratio (LLR)，评测恢复信号的谱形状与原始干净信号的谱形状有多接近</p><p><img src="/images/VisualSound/3.png" alt="3"></p><p>更高的帧率导致曝光时间减少，因此图像噪声更多，这就是为什么20,000FPS结果图比2200Hz时的结果噪声更大</p><p><img src="/images/VisualSound/4.png" alt="4" style="zoom:75%;"></p><p>VM和LDV结果相近，而LDV需要积极照明（必须在物体上粘上一条反反射胶带以便激光从物体上反射回来回到振动计上）</p><h3 id="Transfer-Functions-and-Equalization"><a href="#Transfer-Functions-and-Equalization" class="headerlink" title="Transfer Functions and Equalization"></a>Transfer Functions and Equalization</h3><p>可以使用第4.1节中的斜坡信号来表征物体的(可视的)频率响应，以提高从该物体的新观测中恢复的信号质量。理论上。如果认为物体是线性系统,可以使用维纳反卷积估计与该系统相关联的复数传递函数，并且传递函数可以用来以一种最优的方式(在均方误差意义上的)解卷积新的观测信号。然而，在实践中，这种方法很容易受到噪声和非线性artifacts的影响。因此，本文描述了一种更简单的方法，首先使用训练实例（线性斜坡）的短时间傅里叶变换在粗尺度上计算频率传递系数，然后使用这些传递系数使新的观测信号相等。</p><p>转移系数是从一对输入/输出的信号的短时功率谱中提取出来的。每个系数对应于观察到的训练信号的短时功率谱的一个频率，并作为随时间变化的频率幅值的加权平均被计算。每一时刻的权值由对准的输入训练信号的短时功率谱给出。由于输入信号一次只包含一个频率，这个加权方案忽略了图2(b)中所示的倍频等非线性artifacts。</p><p>一旦有了传输系数，我们就可以用它们来平衡新的信号。有很多方法可以做到这一点。将增益应用于新信号短时功率谱的频率上，然后在时域重新合成信号。应用于每个频率的增益与其相应的传递系数的倒数成正比，该系数上升到某个指数k。</p><p>表2显示了应用从薯片袋导出的均衡器到从同一物体恢复的语音序列的结果。在没有噪声的情况下，k设为1，但广谱噪声压缩了估计的传递系数的范围。使用更大的k可以弥补这一点。在其中一个女性语音示例上手动调整k值，然后将得到的均衡器应用于所有六个语音示例。由于这种均衡是为了提高恢复信号的可信度而不是语音的可理解性，因此使用谱减法来去除噪声。</p><p><img src="/images/VisualSound/5.png" alt="5" style="zoom:75%;"></p><p>注意，校准和均衡是可选的。特别是，本文中除表2之外的所有结果都假定不预先知道被记录物体的频率响应。</p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p><strong>Object response (A)</strong>: 物体相应声音并移动，将空气压力转化为表面位移。</p><p><strong>Processing (B)</strong>: 将录制的视频转换成恢复的声音。</p><h3 id="Object-response-A"><a href="#Object-response-A" class="headerlink" title="Object response (A)"></a>Object response (A)</h3><p><img src="/images/VisualSound/6.png" alt="6"></p><p>图7(b)：300Hz纯音测试，大多数物体的运动在声压（音量）上近似呈线性。结论：A可建模为LTI系统。</p><p>图7(c)：斜坡信号（20Hz到2200Hz）测试，将A建模为LTI系统，用这个斜坡信号来恢复系统的脉冲响应。这是通过使用维纳反卷积用已知的输入对观察到的斜坡信号(这一次是由LDV记录的)进行反卷积来实现的。图7 (c)显示了从恢复的脉冲响应中得到的频率响应。从这张图中可以看到，大多数物体在低频率的响应比高频率的响应更强(正如预期的那样)，但是这种趋势不是单调的。</p><script type="math/tex; mode=display">D_{mm}(\omega)\approx \boldsymbol{A}(\omega)S(\omega)</script><p>$\boldsymbol{A}(\omega)$: 转移函数</p><p>$S(\omega)$: 声谱</p><p>$D_{mm}(\omega)$: 运动谱</p><p><a href="http://people.csail.mit.edu/mrub/VisualMic/" target="_blank" rel="noopener">项目网址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;现象&lt;/strong&gt;：声音到达物体会在物体表面引起微小振动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;做法&lt;/strong&gt;：使用物
      
    
    </summary>
    
    
      <category term="Visual Sound" scheme="http://yoursite.com/categories/Visual-Sound/"/>
    
    
      <category term="paper notes-visual sound" scheme="http://yoursite.com/tags/paper-notes-visual-sound/"/>
    
  </entry>
  
</feed>
